<t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>REVOKE INSERT, UPDATE, DELETE ON mobile_paymentsystem FROM PUBLIC;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>revoke insert, update, delete on mobile_paymentsystem from public;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>REVOKE SELECT ON mobile_paymentsystem FROM PUBLIC;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>revoke select on mobile_paymentsystem from public;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>REVOKE ALL PRIVILEGES ON mobile_paymentsystem FROM PUBLIC;</stat><divider><t>CREATE TABLE mobile_paymentsystem (payment_id SERIAL PRIMARY KEY, user_id INT NOT NULL, amount DECIMAL NOT NULL, payment_date DATE NOT NULL)</t><stat>revoke all privileges on mobile_paymentsystem from public;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>REVOKE SELECT ON users FROM user1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>revoke select on users from user1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>REVOKE INSERT, UPDATE, DELETE ON users FROM user2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>revoke insert, update, delete on users from user2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>REVOKE ALL PRIVILEGES ON users FROM user3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(15) NOT NULL)</t><stat>revoke all privileges on users from user3</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>revoke select, insert, update, delete on users from user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>revoke select, insert, update, delete on users from user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>revoke select, insert, update, delete on users from user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>revoke select, insert, update, delete on users from user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>revoke select, insert, update, delete on users from user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>revoke select, insert, update, delete on users from user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>revoke select, insert, update, delete on transactions from user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>revoke select, insert, update, delete on transactions from user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>revoke select, insert, update, delete on transactions from user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>revoke select, insert, update, delete on transactions from user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>revoke select, insert, update, delete on transactions from user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>revoke select, insert, update, delete on transactions from user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON payments FROM user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>revoke select, insert, update, delete on payments from user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON payments FROM user_role;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>revoke select, insert, update, delete on payments from user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON payments FROM user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);</t><stat>revoke select, insert, update, delete on payments from user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON payments FROM user_role;</stat><divider><t>CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>revoke select, insert, update, delete on payments from user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON payments FROM user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);</t><stat>revoke select, insert, update, delete on payments from user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON payments FROM user_role;</stat><divider><t>CREATE TABLE payments (id INT PRIMARY KEY, transaction_id INT, payment_method STRING, status STRING, amount DECIMAL);

CREATE TABLE transactions (id INT PRIMARY KEY, user_id INT, amount DECIMAL, transaction_date TIMESTAMP);

CREATE TABLE users (id INT PRIMARY KEY, username STRING, email STRING, phone_number STRING, balance DECIMAL);</t><stat>revoke select, insert, update, delete on payments from user_role;</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON users FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on users from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON wallets FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on wallets from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>REVOKE SELECT, INSERT, UPDATE, DELETE ON transactions FROM public</stat><divider><t>CREATE TABLE payment_methods (
    method_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    method_name VARCHAR(50) NOT NULL
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    from_wallet_id INT REFERENCES wallets(wallet_id),
    to_wallet_id INT REFERENCES wallets(wallet_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date DATE
);

CREATE TABLE wallets (
    wallet_id INT PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    balance DECIMAL(10,2) DEFAULT 0.00
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    mobile_number VARCHAR(15) NOT NULL
);</t><stat>revoke select, insert, update, delete on transactions from public</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE SELECT ON Users FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke select on users from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE INSERT, UPDATE ON Wallets FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke insert, update on wallets from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>revoke delete on transactions from public;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>REVOKE DELETE ON Transactions FROM PUBLIC;</stat><divider><t>CREATE TABLE Cards (card_id INT PRIMARY KEY, user_id INT NOT NULL, card_number VARCHAR(16) NOT NULL, expiry_date DATE NOT NULL, cvv VARCHAR(3) NOT NULL, card_type VARCHAR(20) NOT NULL, FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Payments (payment_id INT PRIMARY KEY, transaction_id INT NOT NULL, status VARCHAR(20) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (transaction_id) REFERENCES Transactions(transaction_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT NOT NULL, receiver_wallet_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, transaction_date DATE NOT NULL, FOREIGN KEY (sender_wallet_id) REFERENCES Wallets(wallet_id), FOREIGN KEY (receiver_wallet_id) REFERENCES Wallets(wallet_id));

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT NOT NULL, balance DECIMAL(10,2) NOT NULL DEFAULT 0.00, created_at TIMESTAMP NOT NULL DEFAULT NOW(), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, phone_number VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW());</t><stat>revoke delete on transactions from public;</stat>