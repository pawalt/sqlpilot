<t>CREATE TABLE virtual_reality_games (
    game_id SERIAL PRIMARY KEY,
    game_name VARCHAR(255) NOT NULL,
    release_year INTEGER,
    developer VARCHAR(255),
    rating FLOAT
);</t><stat>INSERT INTO virtual_reality_games (game_name, release_year, developer, rating) VALUES ('VR Game 1', 2020, 'Developer 1', 4.5) ON CONFLICT (game_name) DO UPDATE SET release_year = 2020, developer = 'Updated Developer 1', rating = 4.7;</stat><divider><t>CREATE TABLE virtual_reality_games (
    game_id SERIAL PRIMARY KEY,
    game_name VARCHAR(255) NOT NULL,
    release_year INTEGER,
    developer VARCHAR(255),
    rating FLOAT
);</t><stat>insert into virtual_reality_games (game_name, release_year, developer, rating) values ('vr game 1', 2020, 'developer 1', 4.5) on conflict (game_name) do update set release_year = 2020, developer = 'updated developer 1', rating = 4.7;</stat><divider><t>CREATE TABLE virtual_reality_games (
    game_id SERIAL PRIMARY KEY,
    game_name VARCHAR(255) NOT NULL,
    release_year INTEGER,
    developer VARCHAR(255),
    rating FLOAT
);</t><stat>INSERT INTO virtual_reality_games (game_name, release_year, developer, rating) VALUES ('VR Game 2', 2019, 'Developer 2', 4.2) ON CONFLICT (game_name) DO UPDATE SET release_year = 2019, developer = 'Updated Developer 2', rating = 4.4;</stat><divider><t>CREATE TABLE virtual_reality_games (
    game_id SERIAL PRIMARY KEY,
    game_name VARCHAR(255) NOT NULL,
    release_year INTEGER,
    developer VARCHAR(255),
    rating FLOAT
);</t><stat>insert into virtual_reality_games (game_name, release_year, developer, rating) values ('vr game 2', 2019, 'developer 2', 4.2) on conflict (game_name) do update set release_year = 2019, developer = 'updated developer 2', rating = 4.4;</stat><divider><t>CREATE TABLE virtual_reality_games (
    game_id SERIAL PRIMARY KEY,
    game_name VARCHAR(255) NOT NULL,
    release_year INTEGER,
    developer VARCHAR(255),
    rating FLOAT
);</t><stat>INSERT INTO virtual_reality_games (game_name, release_year, developer, rating) VALUES ('VR Game 3', 2021, 'Developer 3', 4.8) ON CONFLICT (game_name) DO UPDATE SET release_year = 2021, developer = 'Updated Developer 3', rating = 4.9;</stat><divider><t>CREATE TABLE virtual_reality_games (
    game_id SERIAL PRIMARY KEY,
    game_name VARCHAR(255) NOT NULL,
    release_year INTEGER,
    developer VARCHAR(255),
    rating FLOAT
);</t><stat>insert into virtual_reality_games (game_name, release_year, developer, rating) values ('vr game 3', 2021, 'developer 3', 4.8) on conflict (game_name) do update set release_year = 2021, developer = 'updated developer 3', rating = 4.9;</stat><divider><t>CREATE TABLE virtual_reality_devices (device_id UUID PRIMARY KEY, device_name STRING, brand STRING, release_year INT)</t><stat>UPSERT INTO virtual_reality_devices (device_id, device_name, brand, release_year) VALUES ('1', 'Oculus Quest 2', 'Oculus', 2020)</stat><divider><t>CREATE TABLE virtual_reality_devices (device_id UUID PRIMARY KEY, device_name STRING, brand STRING, release_year INT)</t><stat>upsert into virtual_reality_devices (device_id, device_name, brand, release_year) values ('1', 'oculus quest 2', 'oculus', 2020)</stat><divider><t>CREATE TABLE virtual_reality_devices (device_id UUID PRIMARY KEY, device_name STRING, brand STRING, release_year INT)</t><stat>UPSERT INTO virtual_reality_devices (device_id, device_name, brand, release_year) VALUES ('2', 'HTC Vive Pro', 'HTC', 2018)</stat><divider><t>CREATE TABLE virtual_reality_devices (device_id UUID PRIMARY KEY, device_name STRING, brand STRING, release_year INT)</t><stat>upsert into virtual_reality_devices (device_id, device_name, brand, release_year) values ('2', 'htc vive pro', 'htc', 2018)</stat><divider><t>CREATE TABLE virtual_reality_devices (device_id UUID PRIMARY KEY, device_name STRING, brand STRING, release_year INT)</t><stat>UPSERT INTO virtual_reality_devices (device_id, device_name, brand, release_year) VALUES ('3', 'PlayStation VR', 'Sony', 2016)</stat><divider><t>CREATE TABLE virtual_reality_devices (device_id UUID PRIMARY KEY, device_name STRING, brand STRING, release_year INT)</t><stat>upsert into virtual_reality_devices (device_id, device_name, brand, release_year) values ('3', 'playstation vr', 'sony', 2016)</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityCompany (id, name, headquarters, founded_date) VALUES (1, 'VR Company 1', 'Headquarters 1', '2021-01-01') ON DUPLICATE KEY UPDATE name = 'VR Company 1', headquarters = 'Headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>upsert into virtualrealitycompany (id, name, headquarters, founded_date) values (1, 'vr company 1', 'headquarters 1', '2021-01-01') on duplicate key update name = 'vr company 1', headquarters = 'headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>UPSERT INTO VirtualRealityCompany (id, name, headquarters, founded_date) VALUES (1, 'VR Company 1', 'Headquarters 1', '2021-01-01') ON DUPLICATE KEY UPDATE name = 'VR Company 1', headquarters = 'Headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>upsert into virtualrealitycompany (id, name, headquarters, founded_date) values (1, 'vr company 1', 'headquarters 1', '2021-01-01') on duplicate key update name = 'vr company 1', headquarters = 'headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityCompany (id, name, headquarters, founded_date) VALUES (1, 'VR Company 1', 'Headquarters 1', '2021-01-01') ON DUPLICATE KEY UPDATE name = 'VR Company 1', headquarters = 'Headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>upsert into virtualrealitycompany (id, name, headquarters, founded_date) values (1, 'vr company 1', 'headquarters 1', '2021-01-01') on duplicate key update name = 'vr company 1', headquarters = 'headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>UPSERT INTO VirtualRealityCompany (id, name, headquarters, founded_date) VALUES (1, 'VR Company 1', 'Headquarters 1', '2021-01-01') ON DUPLICATE KEY UPDATE name = 'VR Company 1', headquarters = 'Headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>upsert into virtualrealitycompany (id, name, headquarters, founded_date) values (1, 'vr company 1', 'headquarters 1', '2021-01-01') on duplicate key update name = 'vr company 1', headquarters = 'headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>UPSERT INTO VirtualRealityCompany (id, name, headquarters, founded_date) VALUES (1, 'VR Company 1', 'Headquarters 1', '2021-01-01') ON DUPLICATE KEY UPDATE name = 'VR Company 1', headquarters = 'Headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>upsert into virtualrealitycompany (id, name, headquarters, founded_date) values (1, 'vr company 1', 'headquarters 1', '2021-01-01') on duplicate key update name = 'vr company 1', headquarters = 'headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>UPSERT INTO VirtualRealityCompany (id, name, headquarters, founded_date) VALUES (1, 'VR Company 1', 'Headquarters 1', '2021-01-01') ON DUPLICATE KEY UPDATE name = 'VR Company 1', headquarters = 'Headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>upsert into virtualrealitycompany (id, name, headquarters, founded_date) values (1, 'vr company 1', 'headquarters 1', '2021-01-01') on duplicate key update name = 'vr company 1', headquarters = 'headquarters 1', founded_date = '2021-01-01';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityProduct (id, product_name, release_date, price, company_id) VALUES (1, 'VR Product 1', '2021-05-10', 299.99, 1) ON DUPLICATE KEY UPDATE product_name = 'VR Product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>upsert into virtualrealityproduct (id, product_name, release_date, price, company_id) values (1, 'vr product 1', '2021-05-10', 299.99, 1) on duplicate key update product_name = 'vr product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>UPSERT INTO VirtualRealityProduct (id, product_name, release_date, price, company_id) VALUES (1, 'VR Product 1', '2021-05-10', 299.99, 1) ON DUPLICATE KEY UPDATE product_name = 'VR Product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>upsert into virtualrealityproduct (id, product_name, release_date, price, company_id) values (1, 'vr product 1', '2021-05-10', 299.99, 1) on duplicate key update product_name = 'vr product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityProduct (id, product_name, release_date, price, company_id) VALUES (1, 'VR Product 1', '2021-05-10', 299.99, 1) ON DUPLICATE KEY UPDATE product_name = 'VR Product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>upsert into virtualrealityproduct (id, product_name, release_date, price, company_id) values (1, 'vr product 1', '2021-05-10', 299.99, 1) on duplicate key update product_name = 'vr product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>UPSERT INTO VirtualRealityProduct (id, product_name, release_date, price, company_id) VALUES (1, 'VR Product 1', '2021-05-10', 299.99, 1) ON DUPLICATE KEY UPDATE product_name = 'VR Product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>upsert into virtualrealityproduct (id, product_name, release_date, price, company_id) values (1, 'vr product 1', '2021-05-10', 299.99, 1) on duplicate key update product_name = 'vr product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>UPSERT INTO VirtualRealityProduct (id, product_name, release_date, price, company_id) VALUES (1, 'VR Product 1', '2021-05-10', 299.99, 1) ON DUPLICATE KEY UPDATE product_name = 'VR Product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>upsert into virtualrealityproduct (id, product_name, release_date, price, company_id) values (1, 'vr product 1', '2021-05-10', 299.99, 1) on duplicate key update product_name = 'vr product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>UPSERT INTO VirtualRealityProduct (id, product_name, release_date, price, company_id) VALUES (1, 'VR Product 1', '2021-05-10', 299.99, 1) ON DUPLICATE KEY UPDATE product_name = 'VR Product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>upsert into virtualrealityproduct (id, product_name, release_date, price, company_id) values (1, 'vr product 1', '2021-05-10', 299.99, 1) on duplicate key update product_name = 'vr product 1', release_date = '2021-05-10', price = 299.99, company_id = 1;</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityUser (id, username, email, age, device_type) VALUES (1, 'user1', 'user1@example.com', 25, 'VR Headset') ON DUPLICATE KEY UPDATE username = 'user1', email = 'user1@example.com', age = 25, device_type = 'VR Headset';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>upsert into virtualrealityuser (id, username, email, age, device_type) values (1, 'user1', 'user1@example.com', 25, 'vr headset') on duplicate key update username = 'user1', email = 'user1@example.com', age = 25, device_type = 'vr headset';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>UPSERT INTO VirtualRealityUser (id, username, email, age, device_type) VALUES (1, 'user1', 'user1@example.com', 25, 'VR Headset') ON DUPLICATE KEY UPDATE username = 'user1', email = 'user1@example.com', age = 25, device_type = 'VR Headset';</stat><divider><t>CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>upsert into virtualrealityuser (id, username, email, age, device_type) values (1, 'user1', 'user1@example.com', 25, 'vr headset') on duplicate key update username = 'user1', email = 'user1@example.com', age = 25, device_type = 'vr headset';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityUser (id, username, email, age, device_type) VALUES (1, 'user1', 'user1@example.com', 25, 'VR Headset') ON DUPLICATE KEY UPDATE username = 'user1', email = 'user1@example.com', age = 25, device_type = 'VR Headset';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));</t><stat>upsert into virtualrealityuser (id, username, email, age, device_type) values (1, 'user1', 'user1@example.com', 25, 'vr headset') on duplicate key update username = 'user1', email = 'user1@example.com', age = 25, device_type = 'vr headset';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>UPSERT INTO VirtualRealityUser (id, username, email, age, device_type) VALUES (1, 'user1', 'user1@example.com', 25, 'VR Headset') ON DUPLICATE KEY UPDATE username = 'user1', email = 'user1@example.com', age = 25, device_type = 'VR Headset';</stat><divider><t>CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>upsert into virtualrealityuser (id, username, email, age, device_type) values (1, 'user1', 'user1@example.com', 25, 'vr headset') on duplicate key update username = 'user1', email = 'user1@example.com', age = 25, device_type = 'vr headset';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>UPSERT INTO VirtualRealityUser (id, username, email, age, device_type) VALUES (1, 'user1', 'user1@example.com', 25, 'VR Headset') ON DUPLICATE KEY UPDATE username = 'user1', email = 'user1@example.com', age = 25, device_type = 'VR Headset';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));</t><stat>upsert into virtualrealityuser (id, username, email, age, device_type) values (1, 'user1', 'user1@example.com', 25, 'vr headset') on duplicate key update username = 'user1', email = 'user1@example.com', age = 25, device_type = 'vr headset';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>UPSERT INTO VirtualRealityUser (id, username, email, age, device_type) VALUES (1, 'user1', 'user1@example.com', 25, 'VR Headset') ON DUPLICATE KEY UPDATE username = 'user1', email = 'user1@example.com', age = 25, device_type = 'VR Headset';</stat><divider><t>CREATE TABLE VirtualRealityUser (id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), age INT, device_type VARCHAR(50));

CREATE TABLE VirtualRealityProduct (id INT PRIMARY KEY, product_name VARCHAR(100), release_date DATE, price DECIMAL(10,2), company_id INT, FOREIGN KEY (company_id) REFERENCES VirtualRealityCompany(id));

CREATE TABLE VirtualRealityCompany (id INT PRIMARY KEY, name VARCHAR(100), headquarters VARCHAR(100), founded_date DATE);</t><stat>upsert into virtualrealityuser (id, username, email, age, device_type) values (1, 'user1', 'user1@example.com', 25, 'vr headset') on duplicate key update username = 'user1', email = 'user1@example.com', age = 25, device_type = 'vr headset';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_headsets (id, brand, model, release_year) VALUES (1, 'Oculus', 'Quest 2', 2020) ON DUPLICATE KEY UPDATE brand='Oculus', model='Quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_headsets (id, brand, model, release_year) values (1, 'oculus', 'quest 2', 2020) on duplicate key update brand='oculus', model='quest 2', release_year=2020;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_games (id, title, genre, platform, release_year) VALUES (1, 'Beat Saber', 'Rhythm', 'Oculus Quest', 2018) ON DUPLICATE KEY UPDATE title='Beat Saber', genre='Rhythm', platform='Oculus Quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_games (id, title, genre, platform, release_year) values (1, 'beat saber', 'rhythm', 'oculus quest', 2018) on duplicate key update title='beat saber', genre='rhythm', platform='oculus quest', release_year=2018;</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>UPSERT INTO vr_users (id, username, age, location) VALUES (1, 'john_doe', 25, 'California') ON DUPLICATE KEY UPDATE username='john_doe', age=25, location='California';</stat><divider><t>CREATE TABLE vr_reviews (id INT PRIMARY KEY, headset_id INT, user_id INT, rating INT, review_text TEXT);

CREATE TABLE vr_users (id INT PRIMARY KEY, username VARCHAR(50), age INT, location VARCHAR(50));

CREATE TABLE vr_games (id INT PRIMARY KEY, title VARCHAR(50), genre VARCHAR(50), platform VARCHAR(50), release_year INT);

CREATE TABLE vr_headsets (id INT PRIMARY KEY, brand VARCHAR(50), model VARCHAR(50), release_year INT);</t><stat>upsert into vr_users (id, username, age, location) values (1, 'john_doe', 25, 'california') on duplicate key update username='john_doe', age=25, location='california';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Users (user_id, username, email, last_login) VALUES (1, 'john_doe', 'john@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into users (user_id, username, email, last_login) values (1, 'john_doe', 'john@example.com', '2022-01-01') on conflict (user_id) do update set username = 'john_doe_updated', email = 'john_updated@example.com', last_login = '2022-02-01';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO VirtualRealityGames (game_id, game_title, release_date, genre) VALUES (1, 'VR Game 1', '2022-03-15', 'Adventure') ON CONFLICT (game_id) DO UPDATE SET game_title = 'Updated VR Game 1', release_date = '2022-04-01', genre = 'Action';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into virtualrealitygames (game_id, game_title, release_date, genre) values (1, 'vr game 1', '2022-03-15', 'adventure') on conflict (game_id) do update set game_title = 'updated vr game 1', release_date = '2022-04-01', genre = 'action';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>UPSERT INTO Accessories (accessory_id, accessory_name, price, compatible_with_game) VALUES (1, 'VR Headset', 299.99, 'VR Game 1') ON CONFLICT (accessory_id) DO UPDATE SET accessory_name = 'Updated VR Headset', price = 349.99, compatible_with_game = 'Updated VR Game 1';</stat><divider><t>CREATE TABLE VirtualRealityCompanies (company_id INT PRIMARY KEY, company_name VARCHAR(100) NOT NULL, foundation_date DATE, headquarters_city VARCHAR(50));

CREATE TABLE Accessories (accessory_id INT PRIMARY KEY, accessory_name VARCHAR(50) NOT NULL, price DECIMAL(10,2), compatible_with_game VARCHAR(100));

CREATE TABLE GameReviews (review_id INT PRIMARY KEY, game_id INT, user_id INT, review_text TEXT, rating FLOAT, FOREIGN KEY (game_id) REFERENCES VirtualRealityGames(game_id), FOREIGN KEY (user_id) REFERENCES Users(user_id));

CREATE TABLE VirtualRealityGames (game_id INT PRIMARY KEY, game_title VARCHAR(100) NOT NULL, release_date DATE, genre VARCHAR(50));

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, last_login TIMESTAMP);</t><stat>upsert into accessories (accessory_id, accessory_name, price, compatible_with_game) values (1, 'vr headset', 299.99, 'vr game 1') on conflict (accessory_id) do update set accessory_name = 'updated vr headset', price = 349.99, compatible_with_game = 'updated vr game 1';</stat>