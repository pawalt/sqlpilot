[
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE events RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE events CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE events RESTART IDENTITY CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE events RESTART IDENTITY CONTINUE IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events, attendees CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE event_attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE event_attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE events;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE event_tickets;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE event_sessions;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE event_tickets;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE attendees;"
]