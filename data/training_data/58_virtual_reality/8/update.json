[
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Meeting' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nUPDATE events SET event_location = 'Conference Room' WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nUPDATE events SET event_date = '2023-01-15', event_time = '09:00:00' WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Conference', event_date = '2022-08-15' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nUPDATE events SET event_time = '09:00:00', event_location = 'New Venue' WHERE event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n)\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Workshop', event_date = '2023-04-20', event_time = '13:30:00', event_location = 'Studio A' WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Updated Event 1' WHERE event_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_email = 'updated_email@example.com' WHERE attendee_id = '9a44007c-25c3-4bee-bb8c-54f8396e03c0';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nUPDATE events SET event_location = 'Updated Location' WHERE event_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Updated Event Name', event_date = '2022-12-31', event_time = '18:00:00', event_location = 'Updated Location' WHERE event_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_name = 'John Doe', attendee_email = 'john.doe@example.com', events_attending = '{\"event_id\": \"123e4567-e89b-12d3-a456-426614174000\", \"rsvp_status\": \"Attending\"}', registration_date = '2022-12-30' WHERE attendee_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_time TIME,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id UUID PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    events_attending JSON,\n    registration_date DATE\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'New Event Name', event_date = '2023-01-15', event_time = '19:30:00', event_location = 'New Location' WHERE event_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Updated Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_email = 'updated@email.com' WHERE attendee_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE event_attendees SET attendee_id = 3 WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'New Event Name' WHERE event_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_name = 'New Attendee Name' WHERE attendee_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id)\n);\n\n### STATEMENT\n\nUPDATE event_attendees SET event_id = 102 WHERE attendee_id = 202;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_location = 'New Location' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_email = 'newemail@example.com' WHERE attendee_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 15.99 WHERE ticket_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Summer Concert Party' WHERE event_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_email = 'newemail@example.com' WHERE attendee_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(255)\n);\n\n\nCREATE TABLE attendees (\n    attendee_id INT PRIMARY KEY,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255),\n    event_id INT\n);\n\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    ticket_type VARCHAR(255),\n    ticket_price DECIMAL(10, 2),\n    event_id INT\n);\n\n\nCREATE TABLE event_attendees (\n    event_id INT,\n    attendee_id INT,\n    ticket_id INT,\n    PRIMARY KEY (event_id, attendee_id),\n    FOREIGN KEY (event_id) REFERENCES events(event_id),\n    FOREIGN KEY (attendee_id) REFERENCES attendees(attendee_id),\n    FOREIGN KEY (ticket_id) REFERENCES tickets(ticket_id)\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 25.99 WHERE event_id = 1001 AND ticket_type = 'VIP';",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nUPDATE events SET event_date = '2022-09-15' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_email = 'newemail@example.com' WHERE attendee_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nUPDATE event_tickets SET ticket_price = 25.99 WHERE ticket_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nUPDATE events SET event_name = 'Updated Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nUPDATE attendees SET attendee_name = 'John Doe', attendee_email = 'johndoe@example.com' WHERE attendee_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_time TIME NOT NULL\n);\n\nCREATE TABLE attendees (\n  attendee_id SERIAL PRIMARY KEY,\n  attendee_name VARCHAR(255) NOT NULL,\n  attendee_email VARCHAR(255) UNIQUE NOT NULL,\n  attending_event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  ticket_type VARCHAR(50) NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_sessions (\n  session_id SERIAL PRIMARY KEY,\n  session_title VARCHAR(255) NOT NULL,\n  session_date DATE NOT NULL,\n  session_time TIME NOT NULL,\n  event_id INT REFERENCES events(event_id)\n);\n\nCREATE TABLE event_feedback (\n  feedback_id SERIAL PRIMARY KEY,\n  event_id INT REFERENCES events(event_id),\n  attendee_id INT REFERENCES attendees(attendee_id),\n  rating INT NOT NULL,\n  feedback_text TEXT\n);\n\n### STATEMENT\n\nUPDATE event_tickets SET ticket_price = 29.99 WHERE ticket_id = 1;"
]