[
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (1, 'Project A', E'\\x48656c6c6f', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project A', file_content = E'\\x576f726c64', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (2, 'Project B', E'\\x576f726c64', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project B', file_content = E'\\x48656c6c6f', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (3, 'Project C', E'\\x4879706572', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project C', file_content = E'\\x4b65796d61', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (4, 'Project D', E'\\x53746f7279', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project D', file_content = E'\\x53746f72793333', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (5, 'Project E', E'\\x426c6f672031', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project E', file_content = E'\\x426c6f672032', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (6, 'Project F', E'\\x46696c65', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project F', file_content = E'\\x46696c65323030', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (7, 'Project G', E'\\x54657874', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project G', file_content = E'\\x546578743434', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (8, 'Project H', E'\\x496e666f', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project H', file_content = E'\\x496e666f3230', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (9, 'Project I', E'\\x4a617661', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project I', file_content = E'\\x4a6176613135', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (10, 'Project J', E'\\x4b616d696c', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project J', file_content = E'\\x4b616d696c3132', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (11, 'Project K', E'\\x4c6f72656d', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project K', file_content = E'\\x4c6f72656d3134', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (12, 'Project L', E'\\x4d696368656c', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project L', file_content = E'\\x4d696368656c3136', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (13, 'Project M', E'\\x4e65746c696d', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project M', file_content = E'\\x4e65746c696d3138', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (14, 'Project N', E'\\x4f6365616e', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project N', file_content = E'\\x4f6365616e3230', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (15, 'Project O', E'\\x50726f6a6563', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project O', file_content = E'\\x50726f6a65633132', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (16, 'Project P', E'\\x5175696e', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project P', file_content = E'\\x5175696e3134', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (17, 'Project Q', E'\\x5275647973', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project Q', file_content = E'\\x52756479733236', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (18, 'Project R', E'\\x537461726b', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project R', file_content = E'\\x537461726b3138', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (19, 'Project S', E'\\x5468726565', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project S', file_content = E'\\x54687265653030', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (20, 'Project T', E'\\x556e6976657273', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Project T', file_content = E'\\x556e69766572733132', version_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (1, 'Project A', 'sample_content_A', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project A', file_content = 'updated_sample_content_A', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (2, 'Project B', 'sample_content_B', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project B', file_content = 'updated_sample_content_B', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (3, 'Project C', 'sample_content_C', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project C', file_content = 'updated_sample_content_C', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (4, 'Project D', 'sample_content_D', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project D', file_content = 'updated_sample_content_D', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (5, 'Project E', 'sample_content_E', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project E', file_content = 'updated_sample_content_E', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (6, 'Project F', 'sample_content_F', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project F', file_content = 'updated_sample_content_F', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (7, 'Project G', 'sample_content_G', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project G', file_content = 'updated_sample_content_G', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (8, 'Project H', 'sample_content_H', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project H', file_content = 'updated_sample_content_H', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (9, 'Project I', 'sample_content_I', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project I', file_content = 'updated_sample_content_I', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (10, 'Project J', 'sample_content_J', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project J', file_content = 'updated_sample_content_J', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (11, 'Project K', 'sample_content_K', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project K', file_content = 'updated_sample_content_K', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (12, 'Project L', 'sample_content_L', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project L', file_content = 'updated_sample_content_L', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (13, 'Project M', 'sample_content_M', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project M', file_content = 'updated_sample_content_M', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (14, 'Project N', 'sample_content_N', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project N', file_content = 'updated_sample_content_N', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (15, 'Project O', 'sample_content_O', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project O', file_content = 'updated_sample_content_O', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (16, 'Project P', 'sample_content_P', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project P', file_content = 'updated_sample_content_P', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (17, 'Project Q', 'sample_content_Q', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project Q', file_content = 'updated_sample_content_Q', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (18, 'Project R', 'sample_content_R', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project R', file_content = 'updated_sample_content_R', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (19, 'Project S', 'sample_content_S', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project S', file_content = 'updated_sample_content_S', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n  file_id INT PRIMARY KEY,\n  project_name VARCHAR(255),\n  file_content BYTEA,\n  version_number INT\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, version_number) VALUES (20, 'Project T', 'sample_content_T', 1) ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project T', file_content = 'updated_sample_content_T', version_number = 2",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (1, 'file1.txt', 'File content 1') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file1.txt', file_content = 'Updated file content 1';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (2, 'file2.txt', 'File content 2') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file2.txt', file_content = 'Updated file content 2';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (3, 'file3.txt', 'File content 3') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file3.txt', file_content = 'Updated file content 3';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (4, 'file4.txt', 'File content 4') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file4.txt', file_content = 'Updated file content 4';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (5, 'file5.txt', 'File content 5') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file5.txt', file_content = 'Updated file content 5';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (6, 'file6.txt', 'File content 6') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file6.txt', file_content = 'Updated file content 6';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (7, 'file7.txt', 'File content 7') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file7.txt', file_content = 'Updated file content 7';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (8, 'file8.txt', 'File content 8') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file8.txt', file_content = 'Updated file content 8';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (9, 'file9.txt', 'File content 9') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file9.txt', file_content = 'Updated file content 9';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (10, 'file10.txt', 'File content 10') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file10.txt', file_content = 'Updated file content 10';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (11, 'file11.txt', 'File content 11') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file11.txt', file_content = 'Updated file content 11';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (12, 'file12.txt', 'File content 12') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file12.txt', file_content = 'Updated file content 12';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (13, 'file13.txt', 'File content 13') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file13.txt', file_content = 'Updated file content 13';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (14, 'file14.txt', 'File content 14') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file14.txt', file_content = 'Updated file content 14';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (15, 'file15.txt', 'File content 15') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file15.txt', file_content = 'Updated file content 15';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (16, 'file16.txt', 'File content 16') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file16.txt', file_content = 'Updated file content 16';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (17, 'file17.txt', 'File content 17') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file17.txt', file_content = 'Updated file content 17';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (18, 'file18.txt', 'File content 18') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file18.txt', file_content = 'Updated file content 18';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (19, 'file19.txt', 'File content 19') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file19.txt', file_content = 'Updated file content 19';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO project_files (project_id, file_name, file_content) VALUES (20, 'file20.txt', 'File content 20') ON CONFLICT (project_id) DO UPDATE SET file_name = 'file20.txt', file_content = 'Updated file content 20';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (1, 'Project A', 'Content A') ON CONFLICT (project_id) DO UPDATE SET file_name = excluded.file_name, file_content = excluded.file_content",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (2, 'Project B', 'Content B') ON CONFLICT (project_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (3, 'Project C', 'Content C') ON CONFLICT (project_id) DO UPDATE SET file_name = excluded.file_name",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_name, file_content) VALUES ('Project D', 'Content D') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_name, file_content) VALUES ('Project E', 'Content E') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (4, 'Project F', 'Content F') ON CONFLICT (project_id) DO UPDATE SET file_content = excluded.file_content",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (5, 'Project G', 'Content G') ON CONFLICT (project_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (6, 'Project H', 'Content H') ON CONFLICT (project_id) DO UPDATE SET file_name = excluded.file_name, file_content = excluded.file_content",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_content) VALUES (7, 'Project I', 'Content I') ON CONFLICT (project_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_name, file_content) VALUES ('Project J', 'Content J') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (1, 1, 'Changes 1') ON CONFLICT (project_id, version_number) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (2, 1, 'Changes 2') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (3, 1, 'Changes 3') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (4, 1, 'Changes 4') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (5, 1, 'Changes 5') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (6, 1, 'Changes 6') ON CONFLICT (project_id, version_number) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (7, 1, 'Changes 7') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (8, 1, 'Changes 8') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (9, 1, 'Changes 9') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id SERIAL PRIMARY KEY,\n    file_name VARCHAR(255) NOT NULL,\n    file_content TEXT NOT NULL\n);\n\nCREATE TABLE version_history (\n    version_id SERIAL PRIMARY KEY,\n    project_id INT NOT NULL,\n    version_number INT NOT NULL,\n    changes TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (project_id, version_number, changes) VALUES (10, 1, 'Changes 10') ON CONFLICT (project_id, version_number) DO UPDATE SET changes = excluded.changes",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (1, 'project1_file1', 'txt', 'file1_content') ON CONFLICT (project_id) DO UPDATE SET file_name = 'project1_file1_updated', file_type = 'txt'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (2, 'project2_file1', 'pdf', 'file2_content') ON CONFLICT (project_id) DO UPDATE SET file_name = 'project2_file1_updated', file_type = 'pdf'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (3, 'project3_file1', 'jpg', 'file3_content') ON CONFLICT (project_id) DO UPDATE SET file_name = 'project3_file1_updated', file_type = 'jpg'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (1, 1, '2022-03-15 10:30:00', 'Alice', 'Version 1 notes') ON CONFLICT (version_id) DO UPDATE SET project_id = 1, version_date = '2022-03-15 10:30:00', author = 'Alice', notes = 'Version 1 notes updated'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (2, 1, '2022-03-20 14:45:00', 'Bob', 'Version 2 notes') ON CONFLICT (version_id) DO UPDATE SET project_id = 1, version_date = '2022-03-20 14:45:00', author = 'Bob', notes = 'Version 2 notes updated'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (3, 2, '2022-03-25 09:00:00', 'Charlie', 'Version 1 notes') ON CONFLICT (version_id) DO UPDATE SET project_id = 2, version_date = '2022-03-25 09:00:00', author = 'Charlie', notes = 'Version 1 notes updated'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (1, 'user1', 'user1@example.com', 'hash1') ON CONFLICT (user_id) DO UPDATE SET username = 'user1_updated', email = 'user1@example.com', password_hash = 'hash1_updated'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (2, 'user2', 'user2@example.com', 'hash2') ON CONFLICT (user_id) DO UPDATE SET username = 'user2_updated', email = 'user2@example.com', password_hash = 'hash2_updated'",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (1, 'project_1_file_1', 'pdf', E'\\x25504145445f46494c45') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (2, 'project_2_file_1', 'docx', E'\\x446f63756d656e7420322046696c65') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (3, 'project_3_file_1', 'jpg', E'\\x4a5045472046696c652031') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (1, 1, '2022-01-05 12:00:00', 'John Doe', 'Initial version') ON CONFLICT (version_id) DO UPDATE SET project_id = EXCLUDED.project_id, version_date = EXCLUDED.version_date, author = EXCLUDED.author, notes = EXCLUDED.notes;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (2, 2, '2022-01-07 10:30:00', 'Jane Smith', 'Bug fixes') ON CONFLICT (version_id) DO UPDATE SET project_id = EXCLUDED.project_id, version_date = EXCLUDED.version_date, author = EXCLUDED.author, notes = EXCLUDED.notes;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (3, 3, '2022-01-10 08:45:00', 'Alice Johnson', 'Feature enhancements') ON CONFLICT (version_id) DO UPDATE SET project_id = EXCLUDED.project_id, version_date = EXCLUDED.version_date, author = EXCLUDED.author, notes = EXCLUDED.notes;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (1, 'user_1', 'user1@example.com', 'hash123') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, password_hash = EXCLUDED.password_hash;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (2, 'user_2', 'user2@example.com', 'hash456') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, password_hash = EXCLUDED.password_hash;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (3, 'user_3', 'user3@example.com', 'hash789') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, password_hash = EXCLUDED.password_hash;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (4, 'project_4_file_1', 'txt', E'\\x5465787420312046696c65') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (5, 'project_5_file_1', 'xlsx', E'\\x456d61696c2046696c65') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (6, 'project_6_file_1', 'png', E'\\x506e6720312046696c65') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (4, 4, '2022-01-15 09:20:00', 'Tom Brown', 'Performance improvements') ON CONFLICT (version_id) DO UPDATE SET project_id = EXCLUDED.project_id, version_date = EXCLUDED.version_date, author = EXCLUDED.author, notes = EXCLUDED.notes;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (5, 5, '2022-01-20 14:10:00', 'Sam Wilson', 'Security updates') ON CONFLICT (version_id) DO UPDATE SET project_id = EXCLUDED.project_id, version_date = EXCLUDED.version_date, author = EXCLUDED.author, notes = EXCLUDED.notes;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO version_history (version_id, project_id, version_date, author, notes) VALUES (6, 6, '2022-01-25 11:30:00', 'Eva Martinez', 'Code refactoring') ON CONFLICT (version_id) DO UPDATE SET project_id = EXCLUDED.project_id, version_date = EXCLUDED.version_date, author = EXCLUDED.author, notes = EXCLUDED.notes;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (4, 'user_4', 'user4@example.com', 'hash7890') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, password_hash = EXCLUDED.password_hash;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (5, 'user_5', 'user5@example.com', 'hash0987') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, password_hash = EXCLUDED.password_hash;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, password_hash) VALUES (6, 'user_6', 'user6@example.com', 'hash6543') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, password_hash = EXCLUDED.password_hash;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (7, 'project_7_file_1', 'mp4', E'\\x566964656f2031') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n    project_id INT PRIMARY KEY,\n    file_name VARCHAR(255),\n    file_type VARCHAR(50),\n    file_content BYTEA\n);\n\nCREATE TABLE version_history (\n    version_id INT PRIMARY KEY,\n    project_id INT,\n    version_date TIMESTAMP,\n    author VARCHAR(100),\n    notes TEXT\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(100),\n    email VARCHAR(255),\n    password_hash VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (project_id, file_name, file_type, file_content) VALUES (8, 'project_8_file_1', 'html', E'\\x48616c6c6f20576f726c64') ON CONFLICT (project_id) DO UPDATE SET file_name = EXCLUDED.file_name, file_type = EXCLUDED.file_type, file_content = EXCLUDED.file_content;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (1, 'file1.txt', 'file1data', 1, '2022-01-01') ON CONFLICT (file_id) DO UPDATE SET file_name = 'file1.txt', file_data = 'file1data_updated', project_id = 1, created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (1, 1, 'version1data', '2022-01-01') ON CONFLICT (version_id) DO UPDATE SET project_id = 1, version_data = 'version1data_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (1, 'Project 1', 'Description of Project 1', '2022-01-01') ON CONFLICT (project_id) DO UPDATE SET project_name = 'Project 1', project_description = 'Description of Project 1_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, created_at) VALUES (1, 'user1', 'user1@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'user1', email = 'user1@example.com_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (2, 'file2.txt', 'file2data', 2, '2022-01-01') ON CONFLICT (file_id) DO UPDATE SET file_name = 'file2.txt', file_data = 'file2data_updated', project_id = 2, created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (2, 2, 'version2data', '2022-01-01') ON CONFLICT (version_id) DO UPDATE SET project_id = 2, version_data = 'version2data_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (2, 'Project 2', 'Description of Project 2', '2022-01-01') ON CONFLICT (project_id) DO UPDATE SET project_name = 'Project 2', project_description = 'Description of Project 2_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, created_at) VALUES (2, 'user2', 'user2@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'user2', email = 'user2@example.com_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (3, 'file3.txt', 'file3data', 3, '2022-01-01') ON CONFLICT (file_id) DO UPDATE SET file_name = 'file3.txt', file_data = 'file3data_updated', project_id = 3, created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (3, 3, 'version3data', '2022-01-01') ON CONFLICT (version_id) DO UPDATE SET project_id = 3, version_data = 'version3data_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (3, 'Project 3', 'Description of Project 3', '2022-01-01') ON CONFLICT (project_id) DO UPDATE SET project_name = 'Project 3', project_description = 'Description of Project 3_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, created_at) VALUES (3, 'user3', 'user3@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'user3', email = 'user3@example.com_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (4, 'file4.txt', 'file4data', 4, '2022-01-01') ON CONFLICT (file_id) DO UPDATE SET file_name = 'file4.txt', file_data = 'file4data_updated', project_id = 4, created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (4, 4, 'version4data', '2022-01-01') ON CONFLICT (version_id) DO UPDATE SET project_id = 4, version_data = 'version4data_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (4, 'Project 4', 'Description of Project 4', '2022-01-01') ON CONFLICT (project_id) DO UPDATE SET project_name = 'Project 4', project_description = 'Description of Project 4_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, created_at) VALUES (4, 'user4', 'user4@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'user4', email = 'user4@example.com_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (5, 'file5.txt', 'file5data', 5, '2022-01-01') ON CONFLICT (file_id) DO UPDATE SET file_name = 'file5.txt', file_data = 'file5data_updated', project_id = 5, created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (5, 5, 'version5data', '2022-01-01') ON CONFLICT (version_id) DO UPDATE SET project_id = 5, version_data = 'version5data_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (5, 'Project 5', 'Description of Project 5', '2022-01-01') ON CONFLICT (project_id) DO UPDATE SET project_name = 'Project 5', project_description = 'Description of Project 5_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, username, email, created_at) VALUES (5, 'user5', 'user5@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = 'user5', email = 'user5@example.com_updated', created_at = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (1, 'file1', 'file_data1', 1, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (1, 1, 'version_data1', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (1, 'Project1', 'Description1', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1, 'user1', 'user1@example.com', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (2, 'file2', 'file_data2', 2, '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (2, 2, 'version_data2', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (2, 'Project2', 'Description2', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (2, 'user2', 'user2@example.com', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (3, 'file3', 'file_data3', 3, '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (3, 3, 'version_data3', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (3, 'Project3', 'Description3', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (3, 'user3', 'user3@example.com', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (4, 'file4', 'file_data4', 4, '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (4, 4, 'version_data4', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (4, 'Project4', 'Description4', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (4, 'user4', 'user4@example.com', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, file_name, file_data, project_id, created_at) VALUES (5, 'file5', 'file_data5', 5, '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO project_versions (version_id, project_id, version_data, created_at) VALUES (5, 5, 'version_data5', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO projects (project_id, project_name, project_description, created_at) VALUES (5, 'Project5', 'Description5', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n   file_id INT PRIMARY KEY,\n   file_name VARCHAR(255),\n   file_data BYTEA,\n   project_id INT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE project_versions (\n   version_id INT PRIMARY KEY,\n   project_id INT,\n   version_data BYTEA,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE projects (\n   project_id SERIAL PRIMARY KEY, \n   project_name VARCHAR(255),\n   project_description TEXT,\n   created_at TIMESTAMP\n);\n\n\nCREATE TABLE users (\n   user_id SERIAL PRIMARY KEY,\n   username VARCHAR(50),\n   email VARCHAR(255),\n   created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (5, 'user5', 'user5@example.com', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (1, 'Project 1', 'File content for Project 1', '2022-01-01 00:00:00') ON CONFLICT (file_id) DO UPDATE SET project_name = 'Updated Project 1', file_content = 'Updated File content for Project 1';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (1, 1, 'Version 1', 'Change description for Version 1', '2022-01-01 00:00:00') ON CONFLICT (version_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1, 'user1', 'user1@example.com', '2022-01-01 00:00:00') ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (1, 1, 'Project 1', '2022-01-01 00:00:00') ON CONFLICT (project_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (1, 1, 1, 'Read', '2022-01-01 00:00:00') ON CONFLICT (permission_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (2, 'Project 2', 'File content for Project 2', '2022-01-02 00:00:00') ON CONFLICT (file_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (2, 2, 'Version 2', 'Change description for Version 2', '2022-01-02 00:00:00') ON CONFLICT (version_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (2, 'user2', 'user2@example.com', '2022-01-02 00:00:00') ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (2, 2, 'Project 2', '2022-01-02 00:00:00') ON CONFLICT (project_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (2, 2, 2, 'Write', '2022-01-01 00:00:00') ON CONFLICT (permission_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (3, 'Project 3', 'File content for Project 3', '2022-01-03 00:00:00') ON CONFLICT (file_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (3, 3, 'Version 3', 'Change description for Version 3', '2022-01-03 00:00:00') ON CONFLICT (version_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (3, 'user3', 'user3@example.com', '2022-01-03 00:00:00') ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (3, 3, 'Project 3', '2022-01-03 00:00:00') ON CONFLICT (project_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (3, 3, 3, 'Admin', '2022-01-03 00:00:00') ON CONFLICT (permission_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (4, 'Project 4', 'File content for Project 4', '2022-01-04 00:00:00') ON CONFLICT (file_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (4, 4, 'Version 4', 'Change description for Version 4', '2022-01-04 00:00:00') ON CONFLICT (version_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (4, 'user4', 'user4@example.com', '2022-01-04 00:00:00') ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (4, 4, 'Project 4', '2022-01-04 00:00:00') ON CONFLICT (project_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (4, 4, 4, 'Read', '2022-01-04 00:00:00') ON CONFLICT (permission_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (1, 'Project 1', 'Some content for Project 1', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE project_name='Project 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (2, 'Project 2', 'Some content for Project 2', '2022-01-02 10:30:00') ON DUPLICATE KEY UPDATE project_name='Project 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (1, 1, 'v1.0', 'Initial version', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE version_name='v1.0 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (2, 1, 'v1.1', 'Bug fixes', '2022-01-02 10:30:00') ON DUPLICATE KEY UPDATE version_name='v1.1 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (1, 'user1', 'user1@example.com', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE username='user1 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (2, 'user2', 'user2@example.com', '2022-01-02 10:30:00') ON DUPLICATE KEY UPDATE username='user2 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (1, 1, 'Project 1', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE project_name='Project 1 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (2, 2, 'Project 2', '2022-01-02 10:30:00') ON DUPLICATE KEY UPDATE project_name='Project 2 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (1, 1, 1, 'read', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE permission_type='read updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (2, 2, 2, 'write', '2022-01-02 10:30:00') ON DUPLICATE KEY UPDATE permission_type='write updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (3, 'Project 3', 'Some content for Project 3', '2022-01-03 15:00:00') ON DUPLICATE KEY UPDATE project_name='Project 3 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_files (file_id, project_name, file_content, created_at) VALUES (4, 'Project 4', 'Some content for Project 4', '2022-01-04 11:45:00') ON DUPLICATE KEY UPDATE project_name='Project 4 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (3, 2, 'v2.0', 'Major update', '2022-01-03 15:00:00') ON DUPLICATE KEY UPDATE version_name='v2.0 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO version_history (version_id, file_id, version_name, change_description, created_at) VALUES (4, 2, 'v2.1', 'Security patch', '2022-01-04 11:45:00') ON DUPLICATE KEY UPDATE version_name='v2.1 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (3, 'user3', 'user3@example.com', '2022-01-03 15:00:00') ON DUPLICATE KEY UPDATE username='user3 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email, created_at) VALUES (4, 'user4', 'user4@example.com', '2022-01-04 11:45:00') ON DUPLICATE KEY UPDATE username='user4 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (3, 3, 'Project 3', '2022-01-03 15:00:00') ON DUPLICATE KEY UPDATE project_name='Project 3 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO user_projects (project_id, user_id, project_name, created_at) VALUES (4, 4, 'Project 4', '2022-01-04 11:45:00') ON DUPLICATE KEY UPDATE project_name='Project 4 updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (3, 3, 3, 'read', '2022-01-03 15:00:00') ON DUPLICATE KEY UPDATE permission_type='read updated';",
  "### TABLEDATA\n\nCREATE TABLE project_files (\n\tfile_id INT,\n\tproject_name VARCHAR(255),\n\tfile_content TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (file_id)\n)\n\nCREATE TABLE version_history (\n\tversion_id INT,\n\tfile_id INT,\n\tversion_name VARCHAR(255),\n\tchange_description TEXT,\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (version_id),\n\tFOREIGN KEY (file_id) REFERENCES project_files(file_id)\n)\n\nCREATE TABLE users (\n\tuser_id INT,\n\tusername VARCHAR(255),\n\temail VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (user_id)\n)\n\nCREATE TABLE user_projects (\n\tproject_id INT,\n\tuser_id INT,\n\tproject_name VARCHAR(255),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE project_permissions (\n\tpermission_id INT,\n\tproject_id INT,\n\tuser_id INT,\n\tpermission_type VARCHAR(50),\n\tcreated_at TIMESTAMP,\n\tPRIMARY KEY (permission_id),\n\tFOREIGN KEY (project_id) REFERENCES user_projects(project_id),\n\tFOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\n### STATEMENT\n\nINSERT INTO project_permissions (permission_id, project_id, user_id, permission_type, created_at) VALUES (4, 4, 4, 'write', '2022-01-04 11:45:00') ON DUPLICATE KEY UPDATE permission_type='write updated';"
]