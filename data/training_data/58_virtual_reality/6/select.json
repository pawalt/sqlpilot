[
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE user_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE email = 'johndoe@example.com'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE username = 'janedoe'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE user_id = '123e4567-e89b-12d3-a456-426614174001'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles ORDER BY username ASC",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles ORDER BY email DESC",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_profiles WHERE username LIKE '%doe%'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE bio IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(length(username)) FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, LENGTH(username) AS username_length FROM users_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_profiles FROM user_profiles GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_profiles FROM user_profiles GROUP BY user_id HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles UNION SELECT user_id, username FROM backups_user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE username LIKE 'John%' AND email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE profile_image_url IS NOT NULL AND bio IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE username = 'alice' AND (email = 'alice@example.com' OR email = 'alice@test.com');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE username LIKE 'A%' ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE email LIKE '%@gmail.com' ORDER BY username DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT email FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE user_id IN ('123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174001');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE username = 'bob' AND bio LIKE '%developer%' ORDER BY bio DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE username = 'charlie' OR bio LIKE '%music%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE email LIKE '%@example.com' LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE username = 'david' AND (bio LIKE '%engineer%' OR bio LIKE '%developer%');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE bio IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE email = 'test@example.com' OR email = 'user@example.com' AND profile_image_url LIKE '%.png';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE username LIKE '%a%' OR email LIKE '%a%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE username = 'frank' AND (email LIKE '%@yahoo.com' OR email LIKE '%@hotmail.com');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE email LIKE '%@outlook.com' AND bio IS NOT NULL ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE bio LIKE '%writer%' AND (username = 'george' OR username = 'harry') ORDER BY username DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    profile_image_url VARCHAR(255),\n    bio TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE username = 'ian' OR username = 'jason' AND email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT age, bio FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2 FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id1, status FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT connection_id, date_connected FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles WHERE age > 30",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM connections WHERE status = 'connected'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2 FROM connections WHERE status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles ORDER BY username ASC",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM connections ORDER BY date_connected DESC",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE age BETWEEN 20 AND 35",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM connections WHERE date_connected BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT status FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE username LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, age FROM user_profiles WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_profiles WHERE age < 25 AND bio IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE bio LIKE '%developer%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_profiles WHERE length(username) < 6;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, age, bio FROM user_profiles ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.date_connected FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2, status FROM connections WHERE status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT username, email, age, bio FROM user_profiles WHERE age < 30 AND bio LIKE '%music%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.date_connected FROM user_profiles LEFT JOIN connections ON user_profiles.user_id = connections.user_id2;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE user_id IN (SELECT user_id1 FROM connections WHERE status = 'pending');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_profiles WHERE user_id NOT IN (SELECT user_id2 FROM connections WHERE status = 'blocked');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, count(connections.connection_id) AS connections_count FROM user_profiles LEFT JOIN connections ON user_profiles.user_id = connections.user_id1 GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, count(connections.connection_id) AS connections_count FROM user_profiles LEFT JOIN connections ON user_profiles.user_id = connections.user_id1 GROUP BY user_id HAVING connections_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, COUNT(*) AS total_connections FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 GROUP BY user_id ORDER BY total_connections DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, COUNT(*) AS total_connections FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 WHERE connections.status = 'active' GROUP BY user_id ORDER BY total_connections DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, status, COUNT(*) AS total_connections FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 GROUP BY user_id, status ORDER BY total_connections DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100),\n  age INT,\n  bio TEXT\n);\n\n\nCREATE TABLE connections (\n  connection_id INT PRIMARY KEY,\n  user_id1 INT,\n  user_id2 INT,\n  status VARCHAR(20),\n  date_connected DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(age) AS max_age, MIN(age) AS min_age, AVG(age) AS avg_age FROM user_profiles WHERE age IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT email FROM user_profiles WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM connections;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM connections WHERE connection_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2, connection_type FROM connections;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM interactions WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, interaction_type FROM interactions WHERE interaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, interaction_date FROM interactions WHERE interaction_type = 'like';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_type FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id2;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_date FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id2 WHERE connections.connection_type = 'friend';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_date, interactions.interaction_date FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 JOIN interactions ON user_profiles.user_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_date, interactions.interaction_date FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 JOIN interactions ON user_profiles.user_id = interactions.user_id AND connections.connection_type = 'friend';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, interactions.interaction_date FROM user_profiles JOIN interactions ON user_profiles.user_id = interactions.user_id WHERE user_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_type, interactions.interaction_date FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 JOIN interactions ON user_profiles.user_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_date, interactions.interaction_type FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 JOIN interactions ON user_profiles.user_id = interactions.user_id WHERE user_profiles.username = 'alice';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, interactions.interaction_date FROM user_profiles JOIN interactions ON user_profiles.user_id = interactions.user_id WHERE interactions.interaction_type = 'comment';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_type, interactions.interaction_date FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1 JOIN interactions ON user_profiles.user_id = interactions.user_id WHERE connections.connection_type = 'follow';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM connections GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2, connection_type FROM connections WHERE connection_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE user_id = 2 AND interaction_type = 'like';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT username, email, joined_date FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, c.connection_type, i.interaction_type FROM user_profiles u JOIN connections c ON u.user_id = c.user_id1 JOIN interactions i ON c.user_id2 = i.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE joined_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM interactions WHERE interaction_type = 'comment' GROUP BY user_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, i.interaction_type, c.connection_type FROM user_profiles u JOIN interactions i ON u.user_id = i.user_id JOIN connections c ON u.user_id = c.user_id1 WHERE i.interaction_date > '2021-06-01' AND c.connection_date < '2021-08-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles ORDER BY joined_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(i.interaction_id) AS total_interactions FROM user_profiles u JOIN interactions i ON u.user_id = i.user_id GROUP BY u.username ORDER BY total_interactions DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, c.connection_type, COUNT(i.interaction_id) AS total_interactions FROM user_profiles u JOIN connections c ON u.user_id = c.user_id1 JOIN interactions i ON c.user_id2 = i.user_id GROUP BY u.username, c.connection_type ORDER BY total_interactions DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u1.username AS user1, u2.username AS user2 FROM user_profiles u1 JOIN connections c ON u1.user_id = c.user_id1 JOIN user_profiles u2 ON c.user_id2 = u2.user_id WHERE c.connection_type = 'friend';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(i.interaction_id) AS total_interactions FROM user_profiles u LEFT JOIN interactions i ON u.user_id = i.user_id GROUP BY u.username HAVING COUNT(i.interaction_id) = 0;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(i.interaction_id) AS total_interactions FROM user_profiles u LEFT JOIN interactions i ON u.user_id = i.user_id GROUP BY u.username HAVING COUNT(i.interaction_id) = 0;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, MAX(i.interaction_date) AS last_interaction FROM user_profiles u JOIN interactions i ON u.user_id = i.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username FROM user_profiles u WHERE NOT EXISTS (SELECT * FROM interactions i WHERE u.user_id = i.user_id AND i.interaction_type = 'like');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, COUNT(*) AS total_connections FROM user_profiles u JOIN connections c ON u.user_id = c.user_id1 OR u.user_id = c.user_id2 GROUP BY u.username ORDER BY total_connections DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    joined_date TIMESTAMP\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_type VARCHAR(20),\n    connection_date TIMESTAMP\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(20),\n    interaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, AVG(DATE_PART('year', AGE(joined_date))) AS avg_years_since_join FROM user_profiles u GROUP BY u.username ORDER BY avg_years_since_join DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT username, bio FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, connection_user_id FROM connections",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM interactions",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, interaction_type FROM interactions",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM user_settings",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, theme FROM user_settings",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, language FROM user_settings",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username, bio FROM user_profiles",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, connection_user_id, interaction_type FROM connections JOIN interactions ON connections.user_id = interactions.user_id",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, theme, language FROM user_settings",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles ORDER BY username ASC",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE bio IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'like'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM connections WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE date_joined > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date > '2022-01-01 00:00:00'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM user_settings WHERE theme = 'dark'",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM user_profiles WHERE user_id IN (SELECT user_id FROM connections WHERE connection_user_id = 2)",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT username, bio FROM user_profiles WHERE date_joined > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_user_id FROM user_profiles INNER JOIN connections ON user_profiles.user_id = connections.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, interactions.interaction_type FROM user_profiles INNER JOIN interactions ON user_profiles.user_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, user_settings.theme FROM user_profiles INNER JOIN user_settings ON user_profiles.user_id = user_settings.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, interactions.interaction_date FROM user_profiles INNER JOIN interactions ON user_profiles.user_id = interactions.user_id WHERE interactions.interaction_type = 'like';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, user_settings.language FROM user_profiles INNER JOIN user_settings ON user_profiles.user_id = user_settings.user_id WHERE user_settings.theme = 'dark';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM connections;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(connection_id) AS connections_count FROM connections GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(interaction_id) AS interactions_count FROM interactions GROUP BY user_id HAVING interactions_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(interaction_date) AS last_interaction FROM interactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, connections.connection_user_id, interactions.interaction_type FROM user_profiles INNER JOIN connections ON user_profiles.user_id = connections.user_id INNER JOIN interactions ON user_profiles.user_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id AS user_identifier, username AS name, bio AS about_me, date_joined AS join_date FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, interaction_type, MIN(interaction_date) AS first_interaction FROM interactions WHERE interaction_type = 'comment' GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT interaction_type) AS unique_interactions FROM interactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(DATEDIFF(NOW(), date_joined)) AS days_since_join FROM user_profiles GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, theme, language FROM user_settings WHERE theme IN ('light', 'dark') AND language = 'English';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_profiles.username, CASE WHEN interactions.interaction_type = 'comment' THEN 'Commented' ELSE 'Interacted' END AS interaction_status FROM user_profiles INNER JOIN interactions ON user_profiles.user_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, CONCAT('Theme: ', theme, ' | Language: ', language) AS user_config FROM user_settings;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    bio TEXT,\n    date_joined DATE\n);\n\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id INT,\n    connection_user_id INT\n);\n\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP\n);\n\n\nCREATE TABLE user_settings (\n    user_id INT PRIMARY KEY,\n    theme VARCHAR(20),\n    language VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_interactions, SUM(CASE WHEN interaction_type = 'like' THEN 1 ELSE 0 END) AS like_count, SUM(CASE WHEN interaction_type = 'comment' THEN 1 ELSE 0 END) AS comment_count FROM interactions GROUP BY user_id HAVING total_interactions > 10;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, age FROM user_profiles WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM connections;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2, connection_date FROM connections WHERE connection_type = 'friend';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE user_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_details FROM interactions WHERE interaction_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM posts;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, post_text, likes FROM posts WHERE likes > 100;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM notifications;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, notification_type FROM notifications WHERE is_read = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles WHERE age < 25;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2, connection_date FROM connections WHERE connection_type = 'work';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_date FROM interactions WHERE user_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT post_id, post_text, likes FROM posts WHERE user_id = 300;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM notifications WHERE notification_date >= '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, notification_type FROM notifications WHERE is_read = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT username, age, interests FROM user_profiles WHERE interests LIKE '%programming%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2 FROM connections WHERE connection_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT post_id, post_date, comments FROM posts WHERE comments > 50;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_profiles WHERE interests LIKE '%technology%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id1, user_id2, connection_date FROM connections WHERE connection_type = 'friend';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id FROM interactions WHERE interaction_type = 'like' AND interaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT post_text, likes FROM posts WHERE user_id = 123 ORDER BY likes DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, notification_type FROM notifications WHERE is_read = false;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT interests FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, post_text FROM posts WHERE comments > 10 AND likes > 50;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, notification_date FROM notifications WHERE notification_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT username, age FROM user_profiles WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, notification_type FROM notifications WHERE notification_type IN ('message', 'friend_request');",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, post_date, comments FROM posts WHERE post_date >= '2022-06-01' AND post_date < '2022-07-01' AND comments > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_profiles WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles JOIN connections ON user_profiles.user_id = connections.user_id1;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, interaction_type, interaction_details FROM interactions WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id1, COUNT(*) AS connections_count FROM connections GROUP BY user_id1 HAVING connections_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT SUM(likes) AS total_likes FROM posts;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT notification_date, COUNT(*) AS notification_count FROM notifications GROUP BY notification_date;",
  "### TABLEDATA\n\nCREATE TABLE user_profiles (\n    user_id INT PRIMARY KEY,\n    username STRING,\n    email STRING,\n    age INT,\n    interests STRING\n);\n\nCREATE TABLE connections (\n    connection_id INT PRIMARY KEY,\n    user_id1 INT,\n    user_id2 INT,\n    connection_date DATE,\n    connection_type STRING\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type STRING,\n    interaction_date DATE,\n    interaction_details STRING\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_text STRING,\n    post_date DATE,\n    likes INT,\n    comments INT\n);\n\nCREATE TABLE notifications (\n    notification_id INT PRIMARY KEY,\n    user_id INT,\n    notification_type STRING,\n    notification_date DATE,\n    is_read BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(age) AS max_age FROM user_profiles;"
]