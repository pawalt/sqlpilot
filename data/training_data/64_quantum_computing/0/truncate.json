[
  "### TABLEDATA\n\nCREATE TABLE QuantumSimulations (\n    simulation_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    num_qubits INT NOT NULL,\n    algorithm_type VARCHAR(50) NOT NULL,\n    execution_time INTERVAL NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE QuantumSimulations;",
  "### TABLEDATA\n\nCREATE TABLE QuantumSimulations (\n    simulation_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    num_qubits INT NOT NULL,\n    algorithm_type VARCHAR(50) NOT NULL,\n    execution_time INTERVAL NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE QuantumSimulations RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE QuantumSimulations (\n    simulation_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    num_qubits INT NOT NULL,\n    algorithm_type VARCHAR(50) NOT NULL,\n    execution_time INTERVAL NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE QuantumSimulations CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE QuantumSimulations (\n    simulation_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    num_qubits INT NOT NULL,\n    algorithm_type VARCHAR(50) NOT NULL,\n    execution_time INTERVAL NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE QuantumSimulations CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE QuantumSimulations (\n    simulation_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    num_qubits INT NOT NULL,\n    algorithm_type VARCHAR(50) NOT NULL,\n    execution_time INTERVAL NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE QuantumSimulations RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE QuantumSimulations (\n    simulation_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    num_qubits INT NOT NULL,\n    algorithm_type VARCHAR(50) NOT NULL,\n    execution_time INTERVAL NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE QuantumSimulations CONTINUE IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubits INT,\n    gates INT\n);\n\nCREATE TABLE simulations (\n    simulation_id INT PRIMARY KEY,\n    simulation_name VARCHAR(255),\n    circuit_id INT,\n    execution_time DECIMAL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE circuits;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubits INT,\n    gates INT\n);\n\nCREATE TABLE simulations (\n    simulation_id INT PRIMARY KEY,\n    simulation_name VARCHAR(255),\n    circuit_id INT,\n    execution_time DECIMAL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE simulations;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubits INT,\n    gates INT\n);\n\nCREATE TABLE simulations (\n    simulation_id INT PRIMARY KEY,\n    simulation_name VARCHAR(255),\n    circuit_id INT,\n    execution_time DECIMAL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE circuits;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubits INT,\n    gates INT\n);\n\nCREATE TABLE simulations (\n    simulation_id INT PRIMARY KEY,\n    simulation_name VARCHAR(255),\n    circuit_id INT,\n    execution_time DECIMAL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE circuits;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubits INT,\n    gates INT\n);\n\nCREATE TABLE simulations (\n    simulation_id INT PRIMARY KEY,\n    simulation_name VARCHAR(255),\n    circuit_id INT,\n    execution_time DECIMAL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE simulations;",
  "### TABLEDATA\n\nCREATE TABLE quantum_circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(100),\n    qubit_count INT,\n    gate_count INT\n);\n\nCREATE TABLE simulation_results (\n    result_id UUID PRIMARY KEY,\n    circuit_id UUID,\n    execution_time FLOAT,\n    success BOOLEAN\n);\n\nCREATE TABLE algorithm_analysis (\n    analysis_id UUID PRIMARY KEY,\n    algorithm_name VARCHAR(100),\n    gate_utilization FLOAT,\n    error_rate FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE quantum_circuits;",
  "### TABLEDATA\n\nCREATE TABLE quantum_circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(100),\n    qubit_count INT,\n    gate_count INT\n);\n\nCREATE TABLE simulation_results (\n    result_id UUID PRIMARY KEY,\n    circuit_id UUID,\n    execution_time FLOAT,\n    success BOOLEAN\n);\n\nCREATE TABLE algorithm_analysis (\n    analysis_id UUID PRIMARY KEY,\n    algorithm_name VARCHAR(100),\n    gate_utilization FLOAT,\n    error_rate FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE simulation_results;",
  "### TABLEDATA\n\nCREATE TABLE quantum_circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(100),\n    qubit_count INT,\n    gate_count INT\n);\n\nCREATE TABLE simulation_results (\n    result_id UUID PRIMARY KEY,\n    circuit_id UUID,\n    execution_time FLOAT,\n    success BOOLEAN\n);\n\nCREATE TABLE algorithm_analysis (\n    analysis_id UUID PRIMARY KEY,\n    algorithm_name VARCHAR(100),\n    gate_utilization FLOAT,\n    error_rate FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE algorithm_analysis;",
  "### TABLEDATA\n\nCREATE TABLE quantum_circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(100),\n    qubit_count INT,\n    gate_count INT\n);\n\nCREATE TABLE simulation_results (\n    result_id UUID PRIMARY KEY,\n    circuit_id UUID,\n    execution_time FLOAT,\n    success BOOLEAN\n);\n\nCREATE TABLE algorithm_analysis (\n    analysis_id UUID PRIMARY KEY,\n    algorithm_name VARCHAR(100),\n    gate_utilization FLOAT,\n    error_rate FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE quantum_circuits;",
  "### TABLEDATA\n\nCREATE TABLE quantum_circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(100),\n    qubit_count INT,\n    gate_count INT\n);\n\nCREATE TABLE simulation_results (\n    result_id UUID PRIMARY KEY,\n    circuit_id UUID,\n    execution_time FLOAT,\n    success BOOLEAN\n);\n\nCREATE TABLE algorithm_analysis (\n    analysis_id UUID PRIMARY KEY,\n    algorithm_name VARCHAR(100),\n    gate_utilization FLOAT,\n    error_rate FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE simulation_results;",
  "### TABLEDATA\n\nCREATE TABLE quantum_circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(100),\n    qubit_count INT,\n    gate_count INT\n);\n\nCREATE TABLE simulation_results (\n    result_id UUID PRIMARY KEY,\n    circuit_id UUID,\n    execution_time FLOAT,\n    success BOOLEAN\n);\n\nCREATE TABLE algorithm_analysis (\n    analysis_id UUID PRIMARY KEY,\n    algorithm_name VARCHAR(100),\n    gate_utilization FLOAT,\n    error_rate FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE algorithm_analysis;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n  circuit_id INT PRIMARY KEY,\n  circuit_name VARCHAR(255) NOT NULL,\n  qubits INT,\n  gates INT\n)\n\nCREATE TABLE measurements (\n  measurement_id INT PRIMARY KEY,\n  circuit_id INT,\n  measurement_result VARCHAR(255),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\nCREATE TABLE algorithms (\n  algorithm_id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255) NOT NULL,\n  quantum_computer VARCHAR(255)\n)\n\nCREATE TABLE performances (\n  performance_id INT PRIMARY KEY,\n  algorithm_id INT,\n  circuit_id INT,\n  execution_time DECIMAL,\n  FOREIGN KEY (algorithm_id) REFERENCES algorithms(algorithm_id),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE circuits;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n  circuit_id INT PRIMARY KEY,\n  circuit_name VARCHAR(255) NOT NULL,\n  qubits INT,\n  gates INT\n)\n\nCREATE TABLE measurements (\n  measurement_id INT PRIMARY KEY,\n  circuit_id INT,\n  measurement_result VARCHAR(255),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\nCREATE TABLE algorithms (\n  algorithm_id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255) NOT NULL,\n  quantum_computer VARCHAR(255)\n)\n\nCREATE TABLE performances (\n  performance_id INT PRIMARY KEY,\n  algorithm_id INT,\n  circuit_id INT,\n  execution_time DECIMAL,\n  FOREIGN KEY (algorithm_id) REFERENCES algorithms(algorithm_id),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE measurements;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n  circuit_id INT PRIMARY KEY,\n  circuit_name VARCHAR(255) NOT NULL,\n  qubits INT,\n  gates INT\n)\n\nCREATE TABLE measurements (\n  measurement_id INT PRIMARY KEY,\n  circuit_id INT,\n  measurement_result VARCHAR(255),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\nCREATE TABLE algorithms (\n  algorithm_id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255) NOT NULL,\n  quantum_computer VARCHAR(255)\n)\n\nCREATE TABLE performances (\n  performance_id INT PRIMARY KEY,\n  algorithm_id INT,\n  circuit_id INT,\n  execution_time DECIMAL,\n  FOREIGN KEY (algorithm_id) REFERENCES algorithms(algorithm_id),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE algorithms;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n  circuit_id INT PRIMARY KEY,\n  circuit_name VARCHAR(255) NOT NULL,\n  qubits INT,\n  gates INT\n)\n\nCREATE TABLE measurements (\n  measurement_id INT PRIMARY KEY,\n  circuit_id INT,\n  measurement_result VARCHAR(255),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\nCREATE TABLE algorithms (\n  algorithm_id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255) NOT NULL,\n  quantum_computer VARCHAR(255)\n)\n\nCREATE TABLE performances (\n  performance_id INT PRIMARY KEY,\n  algorithm_id INT,\n  circuit_id INT,\n  execution_time DECIMAL,\n  FOREIGN KEY (algorithm_id) REFERENCES algorithms(algorithm_id),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE performances;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n  circuit_id INT PRIMARY KEY,\n  circuit_name VARCHAR(255) NOT NULL,\n  qubits INT,\n  gates INT\n)\n\nCREATE TABLE measurements (\n  measurement_id INT PRIMARY KEY,\n  circuit_id INT,\n  measurement_result VARCHAR(255),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\nCREATE TABLE algorithms (\n  algorithm_id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255) NOT NULL,\n  quantum_computer VARCHAR(255)\n)\n\nCREATE TABLE performances (\n  performance_id INT PRIMARY KEY,\n  algorithm_id INT,\n  circuit_id INT,\n  execution_time DECIMAL,\n  FOREIGN KEY (algorithm_id) REFERENCES algorithms(algorithm_id),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE algorithms;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n  circuit_id INT PRIMARY KEY,\n  circuit_name VARCHAR(255) NOT NULL,\n  qubits INT,\n  gates INT\n)\n\nCREATE TABLE measurements (\n  measurement_id INT PRIMARY KEY,\n  circuit_id INT,\n  measurement_result VARCHAR(255),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\nCREATE TABLE algorithms (\n  algorithm_id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255) NOT NULL,\n  quantum_computer VARCHAR(255)\n)\n\nCREATE TABLE performances (\n  performance_id INT PRIMARY KEY,\n  algorithm_id INT,\n  circuit_id INT,\n  execution_time DECIMAL,\n  FOREIGN KEY (algorithm_id) REFERENCES algorithms(algorithm_id),\n  FOREIGN KEY (circuit_id) REFERENCES circuits(circuit_id)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE measurements;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name STRING,\n    qubits INT,\n    gates JSONB\n);\n\n\nCREATE TABLE simulations (\n    simulation_id UUID PRIMARY KEY,\n    simulation_name STRING,\n    circuit_id UUID,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE results (\n    result_id UUID PRIMARY KEY,\n    simulation_id UUID,\n    result_data JSONB\n);\n\n\nCREATE TABLE algorithms (\n    algorithm_id UUID PRIMARY KEY,\n    algorithm_name STRING,\n    description TEXT\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    result_id UUID,\n    metric_name STRING,\n    metric_value FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE circuits;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name STRING,\n    qubits INT,\n    gates JSONB\n);\n\n\nCREATE TABLE simulations (\n    simulation_id UUID PRIMARY KEY,\n    simulation_name STRING,\n    circuit_id UUID,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE results (\n    result_id UUID PRIMARY KEY,\n    simulation_id UUID,\n    result_data JSONB\n);\n\n\nCREATE TABLE algorithms (\n    algorithm_id UUID PRIMARY KEY,\n    algorithm_name STRING,\n    description TEXT\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    result_id UUID,\n    metric_name STRING,\n    metric_value FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE simulations;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name STRING,\n    qubits INT,\n    gates JSONB\n);\n\n\nCREATE TABLE simulations (\n    simulation_id UUID PRIMARY KEY,\n    simulation_name STRING,\n    circuit_id UUID,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE results (\n    result_id UUID PRIMARY KEY,\n    simulation_id UUID,\n    result_data JSONB\n);\n\n\nCREATE TABLE algorithms (\n    algorithm_id UUID PRIMARY KEY,\n    algorithm_name STRING,\n    description TEXT\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    result_id UUID,\n    metric_name STRING,\n    metric_value FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE results;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name STRING,\n    qubits INT,\n    gates JSONB\n);\n\n\nCREATE TABLE simulations (\n    simulation_id UUID PRIMARY KEY,\n    simulation_name STRING,\n    circuit_id UUID,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE results (\n    result_id UUID PRIMARY KEY,\n    simulation_id UUID,\n    result_data JSONB\n);\n\n\nCREATE TABLE algorithms (\n    algorithm_id UUID PRIMARY KEY,\n    algorithm_name STRING,\n    description TEXT\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    result_id UUID,\n    metric_name STRING,\n    metric_value FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE circuits;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name STRING,\n    qubits INT,\n    gates JSONB\n);\n\n\nCREATE TABLE simulations (\n    simulation_id UUID PRIMARY KEY,\n    simulation_name STRING,\n    circuit_id UUID,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE results (\n    result_id UUID PRIMARY KEY,\n    simulation_id UUID,\n    result_data JSONB\n);\n\n\nCREATE TABLE algorithms (\n    algorithm_id UUID PRIMARY KEY,\n    algorithm_name STRING,\n    description TEXT\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    result_id UUID,\n    metric_name STRING,\n    metric_value FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE simulations;",
  "### TABLEDATA\n\nCREATE TABLE circuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name STRING,\n    qubits INT,\n    gates JSONB\n);\n\n\nCREATE TABLE simulations (\n    simulation_id UUID PRIMARY KEY,\n    simulation_name STRING,\n    circuit_id UUID,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE results (\n    result_id UUID PRIMARY KEY,\n    simulation_id UUID,\n    result_data JSONB\n);\n\n\nCREATE TABLE algorithms (\n    algorithm_id UUID PRIMARY KEY,\n    algorithm_name STRING,\n    description TEXT\n);\n\n\nCREATE TABLE performance_metrics (\n    metric_id UUID PRIMARY KEY,\n    result_id UUID,\n    metric_name STRING,\n    metric_value FLOAT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE results;"
]