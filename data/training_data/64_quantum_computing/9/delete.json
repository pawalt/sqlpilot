[
  "### TABLEDATA\n\nCREATE TABLE QuantumOptimization (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    circuit_id INT,\n    circuit_name VARCHAR(255),\n    optimization_level INT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumOptimization WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumOptimization (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    circuit_id INT,\n    circuit_name VARCHAR(255),\n    optimization_level INT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumOptimization WHERE circuit_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumOptimization (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    circuit_id INT,\n    circuit_name VARCHAR(255),\n    optimization_level INT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumOptimization WHERE optimization_level = 2;",
  "### TABLEDATA\n\nCREATE TABLE QuantumOptimization (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    circuit_id INT,\n    circuit_name VARCHAR(255),\n    optimization_level INT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumOptimization WHERE algorithm_id = 1 AND optimization_level = 3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumOptimization (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    circuit_id INT,\n    circuit_name VARCHAR(255),\n    optimization_level INT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumOptimization WHERE circuit_name LIKE '%Hadamard%' OR optimization_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE QuantumOptimization (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    circuit_id INT,\n    circuit_name VARCHAR(255),\n    optimization_level INT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumOptimization WHERE algorithm_id IN (2, 3) AND (circuit_id = 10 OR circuit_name = 'Grover');",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n  id INT,\n  name VARCHAR(255),\n  description TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE quantum_circuits (\n  id INT,\n  algorithm_id INT,\n  circuit_description TEXT,\n  gate_count INT,\n  is_optimized BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM quantum_algorithms WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n  id INT,\n  name VARCHAR(255),\n  description TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE quantum_circuits (\n  id INT,\n  algorithm_id INT,\n  circuit_description TEXT,\n  gate_count INT,\n  is_optimized BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM quantum_circuits WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n  id INT,\n  name VARCHAR(255),\n  description TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE quantum_circuits (\n  id INT,\n  algorithm_id INT,\n  circuit_description TEXT,\n  gate_count INT,\n  is_optimized BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM quantum_algorithms WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n  id INT,\n  name VARCHAR(255),\n  description TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE quantum_circuits (\n  id INT,\n  algorithm_id INT,\n  circuit_description TEXT,\n  gate_count INT,\n  is_optimized BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM quantum_algorithms WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n  id INT,\n  name VARCHAR(255),\n  description TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE quantum_circuits (\n  id INT,\n  algorithm_id INT,\n  circuit_description TEXT,\n  gate_count INT,\n  is_optimized BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM quantum_circuits WHERE algorithm_id = 1 AND gate_count > 10;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n  id INT,\n  name VARCHAR(255),\n  description TEXT,\n  created_at TIMESTAMP\n);\n\n\nCREATE TABLE quantum_circuits (\n  id INT,\n  algorithm_id INT,\n  circuit_description TEXT,\n  gate_count INT,\n  is_optimized BOOLEAN\n);\n\n### STATEMENT\n\nDELETE FROM quantum_algorithms WHERE id IN (SELECT algorithm_id FROM quantum_circuits WHERE gate_count < 5);",
  "### TABLEDATA\n\nCREATE TABLE QuantumAlgorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    algorithm_description TEXT\n);\n\n\nCREATE TABLE QuantumCircuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    circuit_description TEXT,\n    algorithm_id INT,\n    FOREIGN KEY (algorithm_id) REFERENCES QuantumAlgorithms(algorithm_id)\n);\n\n\nCREATE TABLE OptimizationRecords (\n    record_id INT PRIMARY KEY,\n    circuit_id INT,\n    optimization_type VARCHAR(50),\n    optimization_result TEXT,\n    FOREIGN KEY (circuit_id) REFERENCES QuantumCircuits(circuit_id)\n);\n\n### STATEMENT\n\nDELETE FROM OptimizationRecords WHERE record_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumAlgorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    algorithm_description TEXT\n);\n\n\nCREATE TABLE QuantumCircuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    circuit_description TEXT,\n    algorithm_id INT,\n    FOREIGN KEY (algorithm_id) REFERENCES QuantumAlgorithms(algorithm_id)\n);\n\n\nCREATE TABLE OptimizationRecords (\n    record_id INT PRIMARY KEY,\n    circuit_id INT,\n    optimization_type VARCHAR(50),\n    optimization_result TEXT,\n    FOREIGN KEY (circuit_id) REFERENCES QuantumCircuits(circuit_id)\n);\n\n### STATEMENT\n\nDELETE FROM QuantumCircuits WHERE circuit_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumAlgorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    algorithm_description TEXT\n);\n\n\nCREATE TABLE QuantumCircuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    circuit_description TEXT,\n    algorithm_id INT,\n    FOREIGN KEY (algorithm_id) REFERENCES QuantumAlgorithms(algorithm_id)\n);\n\n\nCREATE TABLE OptimizationRecords (\n    record_id INT PRIMARY KEY,\n    circuit_id INT,\n    optimization_type VARCHAR(50),\n    optimization_result TEXT,\n    FOREIGN KEY (circuit_id) REFERENCES QuantumCircuits(circuit_id)\n);\n\n### STATEMENT\n\nDELETE FROM QuantumAlgorithms WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumAlgorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    algorithm_description TEXT\n);\n\n\nCREATE TABLE QuantumCircuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    circuit_description TEXT,\n    algorithm_id INT,\n    FOREIGN KEY (algorithm_id) REFERENCES QuantumAlgorithms(algorithm_id)\n);\n\n\nCREATE TABLE OptimizationRecords (\n    record_id INT PRIMARY KEY,\n    circuit_id INT,\n    optimization_type VARCHAR(50),\n    optimization_result TEXT,\n    FOREIGN KEY (circuit_id) REFERENCES QuantumCircuits(circuit_id)\n);\n\n### STATEMENT\n\nDELETE FROM OptimizationRecords WHERE record_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumAlgorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    algorithm_description TEXT\n);\n\n\nCREATE TABLE QuantumCircuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    circuit_description TEXT,\n    algorithm_id INT,\n    FOREIGN KEY (algorithm_id) REFERENCES QuantumAlgorithms(algorithm_id)\n);\n\n\nCREATE TABLE OptimizationRecords (\n    record_id INT PRIMARY KEY,\n    circuit_id INT,\n    optimization_type VARCHAR(50),\n    optimization_result TEXT,\n    FOREIGN KEY (circuit_id) REFERENCES QuantumCircuits(circuit_id)\n);\n\n### STATEMENT\n\nDELETE FROM QuantumCircuits WHERE circuit_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumAlgorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(255),\n    algorithm_description TEXT\n);\n\n\nCREATE TABLE QuantumCircuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    circuit_description TEXT,\n    algorithm_id INT,\n    FOREIGN KEY (algorithm_id) REFERENCES QuantumAlgorithms(algorithm_id)\n);\n\n\nCREATE TABLE OptimizationRecords (\n    record_id INT PRIMARY KEY,\n    circuit_id INT,\n    optimization_type VARCHAR(50),\n    optimization_result TEXT,\n    FOREIGN KEY (circuit_id) REFERENCES QuantumCircuits(circuit_id)\n);\n\n### STATEMENT\n\nDELETE FROM QuantumAlgorithms WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    description TEXT,\n    optimization_level INT\n);\n\n\nCREATE TABLE quantum_circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    gate_count INT,\n    qubit_count INT\n);\n\n\nCREATE TABLE algorithm_circuit_mapping (\n    mapping_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    circuit_id INT REFERENCES quantum_circuits(circuit_id)\n);\n\n\nCREATE TABLE optimization_history (\n    history_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    optimization_steps INT,\n    optimization_time TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM quantum_algorithms WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    description TEXT,\n    optimization_level INT\n);\n\n\nCREATE TABLE quantum_circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    gate_count INT,\n    qubit_count INT\n);\n\n\nCREATE TABLE algorithm_circuit_mapping (\n    mapping_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    circuit_id INT REFERENCES quantum_circuits(circuit_id)\n);\n\n\nCREATE TABLE optimization_history (\n    history_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    optimization_steps INT,\n    optimization_time TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM quantum_circuits WHERE circuit_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    description TEXT,\n    optimization_level INT\n);\n\n\nCREATE TABLE quantum_circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    gate_count INT,\n    qubit_count INT\n);\n\n\nCREATE TABLE algorithm_circuit_mapping (\n    mapping_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    circuit_id INT REFERENCES quantum_circuits(circuit_id)\n);\n\n\nCREATE TABLE optimization_history (\n    history_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    optimization_steps INT,\n    optimization_time TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM algorithm_circuit_mapping WHERE mapping_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    description TEXT,\n    optimization_level INT\n);\n\n\nCREATE TABLE quantum_circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    gate_count INT,\n    qubit_count INT\n);\n\n\nCREATE TABLE algorithm_circuit_mapping (\n    mapping_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    circuit_id INT REFERENCES quantum_circuits(circuit_id)\n);\n\n\nCREATE TABLE optimization_history (\n    history_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    optimization_steps INT,\n    optimization_time TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM quantum_algorithms WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    description TEXT,\n    optimization_level INT\n);\n\n\nCREATE TABLE quantum_circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    gate_count INT,\n    qubit_count INT\n);\n\n\nCREATE TABLE algorithm_circuit_mapping (\n    mapping_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    circuit_id INT REFERENCES quantum_circuits(circuit_id)\n);\n\n\nCREATE TABLE optimization_history (\n    history_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    optimization_steps INT,\n    optimization_time TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM quantum_circuits WHERE gate_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE quantum_algorithms (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    description TEXT,\n    optimization_level INT\n);\n\n\nCREATE TABLE quantum_circuits (\n    circuit_id INT PRIMARY KEY,\n    circuit_name VARCHAR(50) NOT NULL,\n    gate_count INT,\n    qubit_count INT\n);\n\n\nCREATE TABLE algorithm_circuit_mapping (\n    mapping_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    circuit_id INT REFERENCES quantum_circuits(circuit_id)\n);\n\n\nCREATE TABLE optimization_history (\n    history_id INT PRIMARY KEY,\n    algorithm_id INT REFERENCES quantum_algorithms(algorithm_id),\n    optimization_steps INT,\n    optimization_time TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM algorithm_circuit_mapping WHERE mapping_id IN (SELECT mapping_id FROM algorithm_circuit_mapping WHERE algorithm_id = 2);",
  "### TABLEDATA\n\nCREATE TABLE QuantumCircuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubit_count INT,\n    gate_count INT,\n    optimization_level INT\n)\n\nCREATE TABLE QuantumGateLibrary (\n    gate_id UUID PRIMARY KEY,\n    gate_name VARCHAR(100),\n    gate_type VARCHAR(50),\n    gate_matrix TEXT\n)\n\nCREATE TABLE CircuitExecutionLogs (\n    log_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    execution_time FLOAT,\n    success BOOLEAN,\n    execution_date TIMESTAMP\n)\n\nCREATE TABLE AlgorithmOptimizationHistory (\n    optimization_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    optimization_date TIMESTAMP,\n    optimization_steps INT,\n    execution_time FLOAT\n)\n\nCREATE TABLE QuantumOptimizerConfig (\n    config_id UUID PRIMARY KEY,\n    optimizer_name VARCHAR(100),\n    optimization_strategy TEXT,\n    max_iterations INT,\n    learning_rate FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumCircuits WHERE circuit_id = 'a3fb3d3c-9c73-49ee-8a8f-6b3c78d756c2';",
  "### TABLEDATA\n\nCREATE TABLE QuantumCircuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubit_count INT,\n    gate_count INT,\n    optimization_level INT\n)\n\nCREATE TABLE QuantumGateLibrary (\n    gate_id UUID PRIMARY KEY,\n    gate_name VARCHAR(100),\n    gate_type VARCHAR(50),\n    gate_matrix TEXT\n)\n\nCREATE TABLE CircuitExecutionLogs (\n    log_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    execution_time FLOAT,\n    success BOOLEAN,\n    execution_date TIMESTAMP\n)\n\nCREATE TABLE AlgorithmOptimizationHistory (\n    optimization_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    optimization_date TIMESTAMP,\n    optimization_steps INT,\n    execution_time FLOAT\n)\n\nCREATE TABLE QuantumOptimizerConfig (\n    config_id UUID PRIMARY KEY,\n    optimizer_name VARCHAR(100),\n    optimization_strategy TEXT,\n    max_iterations INT,\n    learning_rate FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumGateLibrary WHERE gate_id = '62a6fb5a-10b8-4b0a-ac1a-347e92e8d003';",
  "### TABLEDATA\n\nCREATE TABLE QuantumCircuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubit_count INT,\n    gate_count INT,\n    optimization_level INT\n)\n\nCREATE TABLE QuantumGateLibrary (\n    gate_id UUID PRIMARY KEY,\n    gate_name VARCHAR(100),\n    gate_type VARCHAR(50),\n    gate_matrix TEXT\n)\n\nCREATE TABLE CircuitExecutionLogs (\n    log_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    execution_time FLOAT,\n    success BOOLEAN,\n    execution_date TIMESTAMP\n)\n\nCREATE TABLE AlgorithmOptimizationHistory (\n    optimization_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    optimization_date TIMESTAMP,\n    optimization_steps INT,\n    execution_time FLOAT\n)\n\nCREATE TABLE QuantumOptimizerConfig (\n    config_id UUID PRIMARY KEY,\n    optimizer_name VARCHAR(100),\n    optimization_strategy TEXT,\n    max_iterations INT,\n    learning_rate FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM CircuitExecutionLogs WHERE log_id = '82cd1c2d-2b2f-4972-91b1-29c1b3dbcefe';",
  "### TABLEDATA\n\nCREATE TABLE QuantumCircuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubit_count INT,\n    gate_count INT,\n    optimization_level INT\n)\n\nCREATE TABLE QuantumGateLibrary (\n    gate_id UUID PRIMARY KEY,\n    gate_name VARCHAR(100),\n    gate_type VARCHAR(50),\n    gate_matrix TEXT\n)\n\nCREATE TABLE CircuitExecutionLogs (\n    log_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    execution_time FLOAT,\n    success BOOLEAN,\n    execution_date TIMESTAMP\n)\n\nCREATE TABLE AlgorithmOptimizationHistory (\n    optimization_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    optimization_date TIMESTAMP,\n    optimization_steps INT,\n    execution_time FLOAT\n)\n\nCREATE TABLE QuantumOptimizerConfig (\n    config_id UUID PRIMARY KEY,\n    optimizer_name VARCHAR(100),\n    optimization_strategy TEXT,\n    max_iterations INT,\n    learning_rate FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM CircuitExecutionLogs WHERE success = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCircuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubit_count INT,\n    gate_count INT,\n    optimization_level INT\n)\n\nCREATE TABLE QuantumGateLibrary (\n    gate_id UUID PRIMARY KEY,\n    gate_name VARCHAR(100),\n    gate_type VARCHAR(50),\n    gate_matrix TEXT\n)\n\nCREATE TABLE CircuitExecutionLogs (\n    log_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    execution_time FLOAT,\n    success BOOLEAN,\n    execution_date TIMESTAMP\n)\n\nCREATE TABLE AlgorithmOptimizationHistory (\n    optimization_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    optimization_date TIMESTAMP,\n    optimization_steps INT,\n    execution_time FLOAT\n)\n\nCREATE TABLE QuantumOptimizerConfig (\n    config_id UUID PRIMARY KEY,\n    optimizer_name VARCHAR(100),\n    optimization_strategy TEXT,\n    max_iterations INT,\n    learning_rate FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM AlgorithmOptimizationHistory WHERE execution_time > 10.0;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCircuits (\n    circuit_id UUID PRIMARY KEY,\n    circuit_name VARCHAR(255),\n    qubit_count INT,\n    gate_count INT,\n    optimization_level INT\n)\n\nCREATE TABLE QuantumGateLibrary (\n    gate_id UUID PRIMARY KEY,\n    gate_name VARCHAR(100),\n    gate_type VARCHAR(50),\n    gate_matrix TEXT\n)\n\nCREATE TABLE CircuitExecutionLogs (\n    log_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    execution_time FLOAT,\n    success BOOLEAN,\n    execution_date TIMESTAMP\n)\n\nCREATE TABLE AlgorithmOptimizationHistory (\n    optimization_id UUID PRIMARY KEY,\n    circuit_id UUID REFERENCES QuantumCircuits(circuit_id),\n    optimization_date TIMESTAMP,\n    optimization_steps INT,\n    execution_time FLOAT\n)\n\nCREATE TABLE QuantumOptimizerConfig (\n    config_id UUID PRIMARY KEY,\n    optimizer_name VARCHAR(100),\n    optimization_strategy TEXT,\n    max_iterations INT,\n    learning_rate FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM QuantumCircuits WHERE gate_count < 10 AND optimization_level >= 3;"
]