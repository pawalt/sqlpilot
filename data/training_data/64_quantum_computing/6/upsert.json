[
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (1, 'Quantum Experiment 1', '2022-01-15 10:00:00', 'Description of Experiment 1') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 1', experiment_date = '2022-01-15 10:00:00', experiment_description = 'Description of Experiment 1';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (2, 'Quantum Experiment 2', '2022-02-20 14:30:00', 'Description of Experiment 2') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 2', experiment_date = '2022-02-20 14:30:00', experiment_description = 'Description of Experiment 2';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (3, 'Quantum Experiment 3', '2022-03-10 09:00:00', 'Description of Experiment 3') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 3', experiment_date = '2022-03-10 09:00:00', experiment_description = 'Description of Experiment 3';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (4, 'Quantum Experiment 4', '2022-04-05 16:45:00', 'Description of Experiment 4') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 4', experiment_date = '2022-04-05 16:45:00', experiment_description = 'Description of Experiment 4';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (5, 'Quantum Experiment 5', '2022-05-12 11:20:00', 'Description of Experiment 5') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 5', experiment_date = '2022-05-12 11:20:00', experiment_description = 'Description of Experiment 5';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (6, 'Quantum Experiment 6', '2022-06-25 13:10:00', 'Description of Experiment 6') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 6', experiment_date = '2022-06-25 13:10:00', experiment_description = 'Description of Experiment 6';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (7, 'Quantum Experiment 7', '2022-07-30 08:45:00', 'Description of Experiment 7') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 7', experiment_date = '2022-07-30 08:45:00', experiment_description = 'Description of Experiment 7';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (8, 'Quantum Experiment 8', '2022-08-17 15:30:00', 'Description of Experiment 8') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 8', experiment_date = '2022-08-17 15:30:00', experiment_description = 'Description of Experiment 8';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (9, 'Quantum Experiment 9', '2022-09-22 10:40:00', 'Description of Experiment 9') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 9', experiment_date = '2022-09-22 10:40:00', experiment_description = 'Description of Experiment 9';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (10, 'Quantum Experiment 10', '2022-10-18 14:55:00', 'Description of Experiment 10') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 10', experiment_date = '2022-10-18 14:55:00', experiment_description = 'Description of Experiment 10';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (11, 'Quantum Experiment 11', '2022-11-03 07:25:00', 'Description of Experiment 11') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 11', experiment_date = '2022-11-03 07:25:00', experiment_description = 'Description of Experiment 11';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (12, 'Quantum Experiment 12', '2022-12-08 11:50:00', 'Description of Experiment 12') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 12', experiment_date = '2022-12-08 11:50:00', experiment_description = 'Description of Experiment 12';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (13, 'Quantum Experiment 13', '2023-01-20 09:15:00', 'Description of Experiment 13') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 13', experiment_date = '2023-01-20 09:15:00', experiment_description = 'Description of Experiment 13';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (14, 'Quantum Experiment 14', '2023-02-17 12:30:00', 'Description of Experiment 14') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 14', experiment_date = '2023-02-17 12:30:00', experiment_description = 'Description of Experiment 14';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (15, 'Quantum Experiment 15', '2023-03-05 14:00:00', 'Description of Experiment 15') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 15', experiment_date = '2023-03-05 14:00:00', experiment_description = 'Description of Experiment 15';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (16, 'Quantum Experiment 16', '2023-04-10 16:20:00', 'Description of Experiment 16') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 16', experiment_date = '2023-04-10 16:20:00', experiment_description = 'Description of Experiment 16';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (17, 'Quantum Experiment 17', '2023-05-15 08:10:00', 'Description of Experiment 17') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 17', experiment_date = '2023-05-15 08:10:00', experiment_description = 'Description of Experiment 17';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (18, 'Quantum Experiment 18', '2023-06-20 10:45:00', 'Description of Experiment 18') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 18', experiment_date = '2023-06-20 10:45:00', experiment_description = 'Description of Experiment 18';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (19, 'Quantum Experiment 19', '2023-07-25 13:35:00', 'Description of Experiment 19') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 19', experiment_date = '2023-07-25 13:35:00', experiment_description = 'Description of Experiment 19';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (20, 'Quantum Experiment 20', '2023-08-30 15:55:00', 'Description of Experiment 20') ON DUPLICATE KEY UPDATE experiment_name = 'Quantum Experiment 20', experiment_date = '2023-08-30 15:55:00', experiment_description = 'Description of Experiment 20';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (1, 'Quantum Entanglement', '2022-01-01 09:00:00', 'Experiment to demonstrate quantum entanglement') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Quantum Entanglement', experiment_date = '2022-01-01 09:00:00', experiment_description = 'Experiment to demonstrate quantum entanglement';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (2, 'Quantum Superposition', '2022-01-02 10:00:00', 'Experiment to observe quantum superposition') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Quantum Superposition', experiment_date = '2022-01-02 10:00:00', experiment_description = 'Experiment to observe quantum superposition';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (3, 'Quantum Teleportation', '2022-01-03 11:00:00', 'Experiment on quantum teleportation') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Quantum Teleportation', experiment_date = '2022-01-03 11:00:00', experiment_description = 'Experiment on quantum teleportation';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingExperiments (experiment_id, experiment_name, experiment_date, experiment_description) VALUES (4, 'Quantum C...",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (1, 'Bell State', 2, 'Hadamard, CNOT', 0.65);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (2, 'Grover Search', 3, 'Hadamard, Oracle, Grover', 1.23);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (3, 'Shor Algorithm', 5, 'Quantum Fourier Transform, Modular Exponentiation', 5.76);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (4, 'Quantum Teleportation', 2, 'Hadamard, CNOT, Measurement', 0.98);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (5, 'Quantum Error Correction', 7, 'CNOT, Toffoli, Syndrome Measurement', 2.34);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (6, 'Quantum Supremacy', 53, 'Random Circuits, Readout', 102.56);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (7, 'Quantum Key Distribution', 2, 'BB84 Protocol', 0.45);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (8, 'Quantum Cryptography', 4, 'Quantum Key Exchange', 1.76);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (9, 'Quantum Hall Effect', 1, 'Quantum Resistance Measurement', 0.34);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (10, 'Quantum Entanglement', 2, 'Bell Test, Entanglement Swapping', 0.78);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (11, 'Quantum Computing Primer', 3, 'Superposition, Entanglement, Quantum Gates', 1.34);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (12, 'Quantum Machine Learning', 5, 'Quantum Neuron, Quantum Circuit', 3.45);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (13, 'Quantum Annealing', 8, 'Ising Model, Quantum Annealer', 4.67);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (14, 'Quantum Sensing', 3, 'Quantum Sensing Protocol', 1.23);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (15, 'Quantum Communication', 2, 'Quantum Communication Channel', 0.89);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (16, 'Quantum Internet', 10, 'Quantum Node, Quantum Link', 5.23);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (17, 'Quantum Sensor Networks', 4, 'Quantum Sensor Deployment', 2.45);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (18, 'Quantum Robotics', 6, 'Quantum Robot Control', 3.67);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (19, 'Quantum Biology', 3, 'Quantum Biomolecular Simulation', 1.56);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (20, 'Quantum Chemistry', 4, 'Quantum Chemical Modeling', 2.78);",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (1, 'Experiment 1', 5, 'Hadamard, CNOT', 10.5) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 1 updated', qubits_used = 6, gate_operations = 'Hadamard, CNOT, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (2, 'Experiment 2', 3, 'Hadamard, CNOT, X', 8.75) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 2 updated', qubits_used = 4, gate_operations = 'Hadamard, CNOT, Y'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (3, 'Experiment 3', 6, 'Hadamard, CNOT, X, Y', 15.25) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 3 updated', qubits_used = 5, gate_operations = 'Hadamard, CNOT, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (4, 'Experiment 4', 4, 'Hadamard, X', 7.9) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 4 updated', qubits_used = 3, gate_operations = 'Hadamard, Y'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (5, 'Experiment 5', 2, 'Hadamard', 5.6) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 5 updated', qubits_used = 2, gate_operations = 'Hadamard, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (6, 'Experiment 6', 8, 'Hadamard, X, Z', 12.0) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 6 updated', qubits_used = 9, gate_operations = 'Hadamard, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (7, 'Experiment 7', 4, 'Hadamard, CNOT, X, Y', 9.3) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 7 updated', qubits_used = 5, gate_operations = 'Hadamard, CNOT, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (8, 'Experiment 8', 3, 'Hadamard, Z', 6.4) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 8 updated', qubits_used = 2, gate_operations = 'Hadamard, Z, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (9, 'Experiment 9', 5, 'Hadamard, CNOT, Z', 10.7) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 9 updated', qubits_used = 6, gate_operations = 'Hadamard, CNOT, Y, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (10, 'Experiment 10', 7, 'Hadamard, CNOT, Y, Z', 13.8) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 10 updated', qubits_used = 8, gate_operations = 'Hadamard, CNOT, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (11, 'Experiment 11', 3, 'Hadamard, Y', 6.2) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 11 updated', qubits_used = 4, gate_operations = 'Hadamard, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (12, 'Experiment 12', 6, 'Hadamard, CNOT, X', 11.5) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 12 updated', qubits_used = 7, gate_operations = 'Hadamard, CNOT, Y'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (13, 'Experiment 13', 4, 'Hadamard, Y, Z', 8.1) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 13 updated', qubits_used = 5, gate_operations = 'Hadamard, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (14, 'Experiment 14', 2, 'Hadamard, X, Z', 5.3) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 14 updated', qubits_used = 3, gate_operations = 'Hadamard, Z, Y'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (15, 'Experiment 15', 5, 'Hadamard, CNOT, Y, Z', 9.9) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 15 updated', qubits_used = 6, gate_operations = 'Hadamard, CNOT, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (16, 'Experiment 16', 8, 'Hadamard, CNOT, X', 12.3) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 16 updated', qubits_used = 7, gate_operations = 'Hadamard, CNOT, Y'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (17, 'Experiment 17', 3, 'Hadamard, Z, Y', 6.9) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 17 updated', qubits_used = 4, gate_operations = 'Hadamard, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (18, 'Experiment 18', 6, 'Hadamard, X, Z, Y', 11.7) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 18 updated', qubits_used = 5, gate_operations = 'Hadamard, Y, Z'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (19, 'Experiment 19', 4, 'Hadamard, CNOT, Z', 8.4) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 19 updated', qubits_used = 3, gate_operations = 'Hadamard, CNOT, X'",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_simulation (simulation_id, experiment_name, qubits_used, gate_operations, execution_time) VALUES (20, 'Experiment 20', 7, 'Hadamard, CNOT, X, Z', 13.0) ON CONFLICT (simulation_id) DO UPDATE SET experiment_name = 'Experiment 20 updated', qubits_used = 8, gate_operations = 'Hadamard, CNOT, Z'",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 1', '2021-10-01', 5) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-01', qubit_count = 5;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 2', '2021-10-02', 7) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-02', qubit_count = 7;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 3', '2021-10-03', 4) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-03', qubit_count = 4;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 4', '2021-10-04', 6) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-04', qubit_count = 6;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 5', '2021-10-05', 3) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-05', qubit_count = 3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 6', '2021-10-06', 8) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-06', qubit_count = 8;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 7', '2021-10-07', 2) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-07', qubit_count = 2;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 8', '2021-10-08', 9) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-08', qubit_count = 9;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 9', '2021-10-09', 1) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-09', qubit_count = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 10', '2021-10-10', 10) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-10', qubit_count = 10;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 11', '2021-10-11', 5) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-11', qubit_count = 5;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 12', '2021-10-12', 7) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-12', qubit_count = 7;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 13', '2021-10-13', 4) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-13', qubit_count = 4;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 14', '2021-10-14', 6) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-14', qubit_count = 6;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 15', '2021-10-15', 3) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-15', qubit_count = 3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 16', '2021-10-16', 8) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-16', qubit_count = 8;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 17', '2021-10-17', 2) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-17', qubit_count = 2;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 18', '2021-10-18', 9) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-18', qubit_count = 9;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 19', '2021-10-19', 1) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-19', qubit_count = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Quantum Experiment 20', '2021-10-20', 10) ON CONFLICT (experiment_name) DO UPDATE SET experiment_date = '2021-10-20', qubit_count = 10;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Experiment 1', '2022-01-01', 5) ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = EXCLUDED.experiment_name, experiment_date = EXCLUDED.experiment_date, qubit_count = EXCLUDED.qubit_count;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Experiment 2', '2022-02-02', 7) ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = EXCLUDED.experiment_name, experiment_date = EXCLUDED.experiment_date, qubit_count = EXCLUDED.qubit_count;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Experiment 3', '2022-03-03', 10) ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = EXCLUDED.experiment_name, experiment_date = EXCLUDED.experiment_date, qubit_count = EXCLUDED.qubit_count;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Experiment 4', '2022-04-04', 12) ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = EXCLUDED.experiment_name, experiment_date = EXCLUDED.experiment_date, qubit_count = EXCLUDED.qubit_count;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingData (experiment_name, experiment_date, qubit_count) VALUES ('Experiment 5', '2022-05-05', 15) ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = EXCLUDED.experiment_name, experiment_date = EXCLUDED.experiment_date, qubit_count = EXCLUDED.qubit_count;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingResults (experiment_id, result_data, result_timestamp) VALUES (1, '{\"data\": \"Result 1\"}', '2022-01-01 12:00:00') ON CONFLICT (result_id) DO UPDATE SET experiment_id = EXCLUDED.experiment_id, result_data = EXCLUDED.result_data, result_timestamp = EXCLUDED.result_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingResults (experiment_id, result_data, result_timestamp) VALUES (1, '{\"data\": \"Result 2\"}', '2022-02-02 12:00:00') ON CONFLICT (result_id) DO UPDATE SET experiment_id = EXCLUDED.experiment_id, result_data = EXCLUDED.result_data, result_timestamp = EXCLUDED.result_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingResults (experiment_id, result_data, result_timestamp) VALUES (2, '{\"data\": \"Result 3\"}', '2022-03-03 12:00:00') ON CONFLICT (result_id) DO UPDATE SET experiment_id = EXCLUDED.experiment_id, result_data = EXCLUDED.result_data, result_timestamp = EXCLUDED.result_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingResults (experiment_id, result_data, result_timestamp) VALUES (2, '{\"data\": \"Result 4\"}', '2022-04-04 12:00:00') ON CONFLICT (result_id) DO UPDATE SET experiment_id = EXCLUDED.experiment_id, result_data = EXCLUDED.result_data, result_timestamp = EXCLUDED.result_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO QuantumComputingResults (experiment_id, result_data, result_timestamp) VALUES (3, '{\"data\": \"Result 5\"}', '2022-05-05 12:00:00') ON CONFLICT (result_id) DO UPDATE SET experiment_id = EXCLUDED.experiment_id, result_data = EXCLUDED.result_data, result_timestamp = EXCLUDED.result_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO ExecutionLog (log_timestamp, log_message) VALUES ('2022-01-01 12:00:00', 'Log message 1') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = EXCLUDED.log_timestamp, log_message = EXCLUDED.log_message;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO ExecutionLog (log_timestamp, log_message) VALUES ('2022-02-02 12:00:00', 'Log message 2') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = EXCLUDED.log_timestamp, log_message = EXCLUDED.log_message;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO ExecutionLog (log_timestamp, log_message) VALUES ('2022-03-03 12:00:00', 'Log message 3') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = EXCLUDED.log_timestamp, log_message = EXCLUDED.log_message;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO ExecutionLog (log_timestamp, log_message) VALUES ('2022-04-04 12:00:00', 'Log message 4') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = EXCLUDED.log_timestamp, log_message = EXCLUDED.log_message;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO ExecutionLog (log_timestamp, log_message) VALUES ('2022-05-05 12:00:00', 'Log message 5') ON CONFLICT (log_id) DO UPDATE SET log_timestamp = EXCLUDED.log_timestamp, log_message = EXCLUDED.log_message;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (1, 'Experiment 1', '2023-01-01 10:00:00', '2023-01-01 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (1, 1, '{\"data\": \"result 1\"}', '2023-01-01 12:30:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (1, 1, 'Type A', '{\"data\": \"visualization data 1\"}')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (1, 1, 'Log message 1', '2023-01-01 13:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (2, 'Experiment 2', '2023-02-01 09:00:00', '2023-02-01 11:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (2, 2, '{\"data\": \"result 2\"}', '2023-02-01 11:30:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (2, 2, 'Type B', '{\"data\": \"visualization data 2\"}')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (2, 2, 'Log message 2', '2023-02-01 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (3, 'Experiment 3', '2023-03-01 08:00:00', '2023-03-01 10:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (3, 3, '{\"data\": \"result 3\"}', '2023-03-01 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (3, 3, 'Type C', '{\"data\": \"visualization data 3\"}')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (3, 3, 'Log message 3', '2023-03-01 11:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (4, 'Experiment 4', '2023-04-01 07:00:00', '2023-04-01 09:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (4, 4, '{\"data\": \"result 4\"}', '2023-04-01 09:30:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (4, 4, 'Type D', '{\"data\": \"visualization data 4\"}')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (4, 4, 'Log message 4', '2023-04-01 10:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (5, 'Experiment 5', '2023-05-01 06:00:00', '2023-05-01 08:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (5, 5, '{\"data\": \"result 5\"}', '2023-05-01 08:30:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (5, 5, 'Type E', '{\"data\": \"visualization data 5\"}')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (5, 5, 'Log message 5', '2023-05-01 09:00:00')",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (1, 'Experiment 1', '2022-01-01 08:00:00', '2022-01-01 10:00:00') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Experiment 1 Updated', start_time = '2022-01-01 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (1, 1, '{\"result\": \"success\"}', '2022-01-01 09:30:00') ON CONFLICT (result_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (1, 1, 'graph', '{\"graph\": \"data\"}') ON CONFLICT (vis_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (1, 1, 'Log message', '2022-01-01 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (2, 'Experiment 2', '2022-01-02 08:00:00', '2022-01-02 10:00:00') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Experiment 2 Updated', end_time = '2022-01-02 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (2, 2, '{\"result\": \"failure\"}', '2022-01-02 09:30:00') ON CONFLICT (result_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (2, 2, 'table', '{\"table\": \"data\"}') ON CONFLICT (vis_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (2, 2, 'Log message 2', '2022-01-02 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (3, 'Experiment 3', '2022-01-03 08:00:00', '2022-01-03 10:00:00') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Experiment 3 Updated', start_time = '2022-01-03 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (3, 3, '{\"result\": \"success\"}', '2022-01-03 09:30:00') ON CONFLICT (result_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (3, 3, 'chart', '{\"chart\": \"data\"}') ON CONFLICT (vis_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (3, 3, 'Log message 3', '2022-01-03 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (4, 'Experiment 4', '2022-01-04 08:00:00', '2022-01-04 10:00:00') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Experiment 4 Updated', end_time = '2022-01-04 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (4, 4, '{\"result\": \"failure\"}', '2022-01-04 09:30:00') ON CONFLICT (result_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (4, 4, 'graph', '{\"graph\": \"data\"}') ON CONFLICT (vis_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (4, 4, 'Log message 4', '2022-01-04 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentData (experiment_id, experiment_name, start_time, end_time) VALUES (5, 'Experiment 5', '2022-01-05 08:00:00', '2022-01-05 10:00:00') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Experiment 5 Updated', start_time = '2022-01-05 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentResults (result_id, experiment_id, quantum_result, result_time) VALUES (5, 5, '{\"result\": \"success\"}', '2022-01-05 09:30:00') ON CONFLICT (result_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO VisualizationData (vis_id, experiment_id, visualization_type, visualization_data) VALUES (5, 5, 'table', '{\"table\": \"data\"}') ON CONFLICT (vis_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nINSERT INTO ExperimentLogs (log_id, experiment_id, log_message, log_time) VALUES (5, 5, 'Log message 5', '2022-01-05 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPSERT INTO experiments (experiment_id, experiment_name, experiment_date, experiment_status) VALUES ('123e4567-e89b-12d3-a456-426614174001', 'Experiment 1', '2022-10-01', 'completed') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Experiment Updated'",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPSERT INTO quantum_devices (device_id, device_name, device_type, location) VALUES ('223e4567-e89b-12d3-a456-426614174002', 'Device 1', 'Quantum', 'Lab 1') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Device Updated'",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPSERT INTO experiment_data (data_id, experiment_id, device_id, data_values) VALUES ('323e4567-e89b-12d3-a456-426614174003', '123e4567-e89b-12d3-a456-426614174001', '223e4567-e89b-12d3-a456-426614174002', '{\"value1\": 10, \"value2\": 20}') ON CONFLICT (data_id) DO UPDATE SET data_values = '{\"value1\": 100, \"value2\": 200}'",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPSERT INTO data_processing (processing_id, data_id, processing_date, processing_status) VALUES ('423e4567-e89b-12d3-a456-426614174004', '323e4567-e89b-12d3-a456-426614174003', '2022-10-02', 'processing') ON CONFLICT (processing_id) DO UPDATE SET processing_status = 'completed'",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPSERT INTO visualization (visualization_id, data_id, visualization_type, visualization_data) VALUES ('523e4567-e89b-12d3-a456-426614174005', '323e4567-e89b-12d3-a456-426614174003', 'plot', '{\"data\": [1, 2, 3, 4]}') ON CONFLICT (visualization_id) DO UPDATE SET visualization_type = 'graph'",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nINSERT INTO experiments (experiment_id, experiment_name, experiment_date, experiment_status) VALUES ('b890cbb7-7124-4698-ba18-eecbf71b7e38', 'Experiment 1', '2022-01-01', 'pending') ON CONFLICT (experiment_id) DO UPDATE SET experiment_name = 'Updated Experiment 1', experiment_date = '2022-01-02', experiment_status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nINSERT INTO quantum_devices (device_id, device_name, device_type, location) VALUES ('f33c3fbf-6c8a-4bb2-9c27-97af7f4a9804', 'Quantum Device 1', 'Type A', 'Lab A') ON CONFLICT (device_id) DO UPDATE SET device_name = 'Updated Quantum Device 1', device_type = 'Type B', location = 'Lab B';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nINSERT INTO experiment_data (data_id, experiment_id, device_id, data_values) VALUES ('54f0c22d-28b7-4c95-bbad-56bd58cc700e', 'b890cbb7-7124-4698-ba18-eecbf71b7e38', 'f33c3fbf-6c8a-4bb2-9c27-97af7f4a9804', '{\"value\": 123}') ON CONFLICT (data_id) DO UPDATE SET experiment_id = 'b890cbb7-7124-4698-ba18-eecbf71b7e38', device_id = 'f33c3fbf-6c8a-4bb2-9c27-97af7f4a9804', data_values = '{\"value\": 456}';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nINSERT INTO data_processing (processing_id, data_id, processing_date, processing_status) VALUES ('2bd4b81e-8106-4280-b3c4-c82f86be0c13', '54f0c22d-28b7-4c95-bbad-56bd58cc700e', '2022-01-03', 'processing') ON CONFLICT (processing_id) DO UPDATE SET data_id = '54f0c22d-28b7-4c95-bbad-56bd58cc700e', processing_date = '2022-01-04', processing_status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nINSERT INTO visualization (visualization_id, data_id, visualization_type, visualization_data) VALUES ('ac44c703-83a1-47ef-8ad4-9b729405674f', '54f0c22d-28b7-4c95-bbad-56bd58cc700e', 'Graph', '{\"data\": [1, 2, 3]}') ON CONFLICT (visualization_id) DO UPDATE SET data_id = '54f0c22d-28b7-4c95-bbad-56bd58cc700e', visualization_type = 'Chart', visualization_data = '{\"data\": [4, 5, 6]}';"
]