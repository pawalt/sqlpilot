[
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingExperiments SET experiment_name='Teleportation Experiment' WHERE experiment_id=1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingExperiments SET experiment_date='2022-11-15 09:00:00' WHERE experiment_id=2;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingExperiments SET experiment_description='Quantum Entanglement Study' WHERE experiment_id=3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingExperiments SET experiment_name='Quantum Entanglement' WHERE experiment_id=1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingExperiments SET experiment_description='Testing quantum superposition' WHERE experiment_name='Quantum Computing Basics';",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingExperiments (\n  experiment_id INT PRIMARY KEY,\n  experiment_name VARCHAR(255),\n  experiment_date TIMESTAMP,\n  experiment_description TEXT\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingExperiments SET experiment_date='2022-10-15 15:30:00' WHERE experiment_id=2;",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE quantum_simulation SET experiment_name = 'New Experiment' WHERE simulation_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE quantum_simulation SET qubits_used = 5 WHERE simulation_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE visualization_data SET visual_data = E'\\x123456' WHERE visualization_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE quantum_simulation SET experiment_name = 'Improved Quantum Circuit', qubits_used = 6, gate_operations = 'H, X, CNOT', execution_time = 45.75 WHERE simulation_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE quantum_simulation SET experiment_name = 'Quantum Error Correction', qubits_used = 8, gate_operations = 'H, CX, SQRTSWAP', execution_time = 63.99 WHERE simulation_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE quantum_simulation (\n    simulation_id INT PRIMARY KEY,\n    experiment_name VARCHAR(50),\n    qubits_used INT,\n    gate_operations VARCHAR(100),\n    execution_time DECIMAL(10,2)\n);\n\nCREATE TABLE visualization_data (\n    visualization_id INT PRIMARY KEY,\n    simulation_id INT REFERENCES quantum_simulation(simulation_id),\n    visualization_type VARCHAR(50),\n    visual_data BYTEA,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE visualization_data SET visualization_type = 'Heatmap', visual_data = '\\x486561746D61702664', timestamp = '2022-01-31 09:30:00' WHERE visualization_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingData SET experiment_name = 'New Experiment Name' WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingResults SET result_data = '{\"success\": true}' WHERE result_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE ExecutionLog SET log_message = 'Log message updated' WHERE log_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingData SET qubit_count = qubit_count + 1 WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE QuantumComputingResults SET result_data = '{\"success\": true}' WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumComputingData (\n  experiment_id SERIAL PRIMARY KEY,\n  experiment_name VARCHAR(100) NOT NULL,\n  experiment_date DATE NOT NULL,\n  qubit_count INT NOT NULL\n);\n\n\nCREATE TABLE QuantumComputingResults (\n  result_id SERIAL PRIMARY KEY,\n  experiment_id INT NOT NULL,\n  result_data JSONB NOT NULL,\n  result_timestamp TIMESTAMP\n);\n\n\nCREATE TABLE ExecutionLog (\n  log_id SERIAL PRIMARY KEY,\n  log_timestamp TIMESTAMP NOT NULL,\n  log_message TEXT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE ExecutionLog SET log_timestamp = '2022-10-15 12:00:00' WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPDATE ExperimentData SET experiment_name = 'Updated Name' WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPDATE ExperimentResults SET quantum_result = '{\"result\": \"updated result\"}' WHERE result_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPDATE VisualizationData SET visualization_type = 'Bar Chart' WHERE vis_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPDATE ExperimentData SET experiment_name = 'Updated Experiment 1' WHERE experiment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPDATE ExperimentResults SET quantum_result = '{\"result\": \"updated result\"}' WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ExperimentData (\n    experiment_id INT PRIMARY KEY,\n    experiment_name TEXT,\n    start_time TIMESTAMP,\n    end_time TIMESTAMP\n);\n\n\nCREATE TABLE ExperimentResults (\n    result_id INT PRIMARY KEY,\n    experiment_id INT,\n    quantum_result JSON,\n    result_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE VisualizationData (\n    vis_id INT PRIMARY KEY,\n    experiment_id INT,\n    visualization_type TEXT,\n    visualization_data JSON,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n\nCREATE TABLE ExperimentLogs (\n    log_id INT PRIMARY KEY,\n    experiment_id INT,\n    log_message TEXT,\n    log_time TIMESTAMP,\n    FOREIGN KEY (experiment_id) REFERENCES ExperimentData(experiment_id)\n);\n\n### STATEMENT\n\nUPDATE VisualizationData SET visualization_type = 'Updated Type' WHERE vis_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPDATE experiments SET experiment_name = 'New Experiment Name' WHERE experiment_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPDATE quantum_devices SET location = 'New Location' WHERE device_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPDATE data_processing SET processing_status = 'Completed' WHERE processing_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPDATE experiments SET experiment_status = 'Completed' WHERE experiment_id = '575ae6be-0d9e-4d30-bf5a-2451a0f4d459';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPDATE quantum_devices SET location = 'Lab B' WHERE device_id = 'e21b5a88-9ae7-4a26-b084-50cd2be58480';",
  "### TABLEDATA\n\nCREATE TABLE experiments (\n    experiment_id UUID PRIMARY KEY,\n    experiment_name STRING,\n    experiment_date TIMESTAMP,\n    experiment_status STRING\n);\n\nCREATE TABLE quantum_devices (\n    device_id UUID PRIMARY KEY,\n    device_name STRING,\n    device_type STRING,\n    location STRING\n);\n\nCREATE TABLE experiment_data (\n    data_id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES experiments(experiment_id),\n    device_id UUID REFERENCES quantum_devices(device_id),\n    data_values JSONB\n);\n\nCREATE TABLE data_processing (\n    processing_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    processing_date TIMESTAMP,\n    processing_status STRING\n);\n\nCREATE TABLE visualization (\n    visualization_id UUID PRIMARY KEY,\n    data_id UUID REFERENCES experiment_data(data_id),\n    visualization_type STRING,\n    visualization_data JSONB\n);\n\n### STATEMENT\n\nUPDATE experiment_data SET data_values = '{\"temperature\": 25, \"humidity\": 60}' WHERE data_id = '9e763f56-c6f0-4aac-b2f2-3d12ebf36f6d';"
]