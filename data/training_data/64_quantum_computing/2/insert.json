[
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('1f7a7336-fb7e-4a4a-9b72-d3b66799f38a', 'john_doe', 'password123', 'admin', '2022-10-01 12:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('2d20ac11-37e3-4f1b-9b48-f4afd7aedbaf', 'jane_smith', 'pass456', 'user', '2022-10-02 09:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('383d82ce-687d-4ad7-8c1e-6f1d90f4ede0', 'alice_johnson', '1234pass', 'admin', '2022-10-03 15:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('4de2b93a-b30f-4685-8c6a-39cb29f31446', 'bob_marley', 'pass321', 'user', '2022-10-04 18:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('5a1cf550-5e27-4533-ba03-03195527cb0c', 'sara_jones', 'pass987', 'admin', '2022-10-05 10:10:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('61c42891-d1bf-42f1-bc69-f8d389bcf3d7', 'mike_brown', 'brownie', 'user', '2022-10-06 14:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('719345ee-026f-4b55-afc9-7102a71bda5d', 'emily_wang', 'wang123', 'admin', '2022-10-07 17:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('818006d9-3b9e-4978-b7a4-60d634523a67', 'chris_miller', 'password456', 'user', '2022-10-08 19:40:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('921c44e3-02ce-4c6a-b1ce-54d588d5c6ef', 'linda_jackson', 'passlinda', 'admin', '2022-10-09 11:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('a02f9be9-8f3a-4571-a5b2-4d95a04d75e8', 'david_wilson', 'wilsonpass', 'user', '2022-10-10 13:40:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('b9d30111-c0a1-4ecd-972e-1f8e0e882f22', 'sophia_morris', 'soph123', 'admin', '2022-10-11 16:50:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('c82c5236-7ebe-4e98-9611-4b4b347dfff7', 'peter_green', 'greenpass', 'user', '2022-10-12 20:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('dafebea3-78c3-4a5b-b4f7-45272541467e', 'kelly_adams', 'kellypass', 'admin', '2022-10-13 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('ed238475-d3ed-421a-8ad7-dc8de47e4102', 'jason_rivers', 'riverpass', 'user', '2022-10-14 14:50:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('ff4e16db-3c0c-4be7-bb3c-841b13489e64', 'carol_ross', 'rosspass', 'admin', '2022-10-15 18:20:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('14ce4ec3-1831-4b21-a15a-298eb89956b8', 'adam_baker', 'bakerpass', 'user', '2022-10-16 09:40:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('fecd5f0d-bdb2-410f-85b1-0e6ccbd4e6a2', 'laura_garcia', 'gpass123', 'admin', '2022-10-17 11:50:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('c7c50de0-7a9e-4703-81c5-7f2076a49614', 'matt_jenkins', 'jenkpass', 'user', '2022-10-18 15:30:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('7e059b23-5e08-4574-b0cf-a32231b319b4', 'amy_cooper', 'cooperpass', 'admin', '2022-10-19 18:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('e011f242-7619-41f9-97ce-8286f8b8c765', 'kevin_perez', 'kevp123', 'user', '2022-10-20 20:45:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('fe3d68f1-42fc-448d-aa1c-79f6001b0919', 'admin_user', 'hash123', 'admin', '2022-01-01 00:00:00')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('1b0e0cca-0154-4c3c-9ed0-b62e394a2b5a', 'regular_user1', 'hash456', 'user', '2022-01-02 01:02:03')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('f415e33d-f60c-400e-a16d-24c9f0b37549', 'regular_user2', 'hash789', 'user', '2022-01-03 04:05:06')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('9a8086bf-e202-4783-b511-cf6cfeff89c9', 'admin_user2', 'hash321', 'admin', '2022-01-04 07:08:09')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('d624b125-7610-468f-b814-e586fe1737c3', 'regular_user3', 'hash654', 'user', '2022-01-05 10:11:12')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('942f3069-913f-49eb-9213-4550ee1fc445', 'admin_user3', 'hash987', 'admin', '2022-01-06 13:14:15')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('1f6d5dbd-47e6-4ac8-bcd6-a4ac2313a93c', 'regular_user4', 'hash321', 'user', '2022-01-07 16:17:18')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('0a51d7fd-1706-4ae4-9a00-c9a5a428738e', 'regular_user5', 'hash654', 'user', '2022-01-08 19:20:21')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('a17c2b2a-5108-4d5e-ae33-ad59b53410fa', 'admin_user4', 'hash987', 'admin', '2022-01-09 22:23:24')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('24bfc16d-f771-4f46-8122-f6c5e77b20e6', 'regular_user6', 'hash321', 'user', '2022-01-10 25:26:27')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('e7fd60b2-5b73-4445-8cb8-f7d2f6416475', 'admin_user5', 'hash654', 'admin', '2022-01-11 28:29:30')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('3052c997-2bff-4e6b-b570-31a32f9e1762', 'regular_user7', 'hash987', 'user', '2022-01-12 31:32:33')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('d06b51ce-dc67-4640-bbe7-1a5d1953a3db', 'admin_user6', 'hash321', 'admin', '2022-01-13 34:35:36')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('c0676a0c-9253-4588-9861-ffbff0d6eb8b', 'regular_user8', 'hash654', 'user', '2022-01-14 37:38:39')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('8b0a64d2-df3b-4df7-aa44-0e8b10380bf8', 'regular_user9', 'hash987', 'user', '2022-01-15 40:41:42')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('5778fa9a-573f-483e-bb0e-729138f9dd76', 'admin_user7', 'hash321', 'admin', '2022-01-16 43:44:45')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('e6c6d5eb-e40e-4e2b-97c9-dd0dea3d8521', 'regular_user10', 'hash654', 'user', '2022-01-17 46:47:48')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('c33322b2-6995-44df-89b3-ecf95b7b4f7d', 'admin_user8', 'hash987', 'admin', '2022-01-18 49:50:51')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('a651c47e-7ad3-4c5e-b5c0-546b1dbf6961', 'regular_user11', 'hash321', 'user', '2022-01-19 52:53:54')",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password_hash, role, created_at) VALUES ('100d4e51-62c5-4ea0-9323-6cc31900f6e2', 'admin_user9', 'hash654', 'admin', '2022-01-20 55:56:57')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'jane_smith', 'securepass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'alice', '123456')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'bob_roberts', 'pass123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'sarah_jones', 'letmein')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (6, 'mike_smith', 'ilovecoding')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (7, 'emily_white', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (8, 'david_miller', 'securepass123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (9, 'lisa_brown', 'abc123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (10, 'alex_green', 'passpass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (11, 'sam_harris', 'password1234')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (12, 'jennifer_davis', 'mypassword')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (13, 'kevin_wilson', 'securepassword')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (14, 'megan_adams', 'passwordabc')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (15, 'brian_jackson', '123pass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (16, 'amy_cook', 'access123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (17, 'peter_edwards', 'loginpass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (18, 'sophia_hall', 'mysecretpass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (19, 'chris_morris', 'securepass456')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (20, 'jessica_wilson', 'passwordpassword')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'user1', 'pass1');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'user2', 'pass2');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'user3', 'pass3');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'user4', 'pass4');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'user5', 'pass5');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (1, 1, 101, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (2, 1, 102, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (3, 2, 101, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (4, 2, 103, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (5, 3, 102, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (6, 3, 103, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (7, 4, 101, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (8, 4, 103, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (9, 5, 102, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (10, 5, 104, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (11, 1, 104, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (12, 2, 103, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (13, 3, 101, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (14, 4, 102, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (15, 5, 103, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_controls (control_id, user_id, resource_id, permission_type) VALUES (16, 1, 101, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'jane_smith', 'letmein')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'alice_wonderland', 'secretPassword')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'bob_marley', 'jammin123')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'charlie_brown', 'peanuts456')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (6, 'emily_parker', 'p@ssw0rd')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (7, 'david_jones', 'dj5678')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (8, 'susan_smith', 'susan_password')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (9, 'henry_adams', 'henry1234')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (10, 'laura_green', 'greenbeans7')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (11, 'michael_jordan', 'airjordan23')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (12, 'sophia_lee', 'sophia567')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (13, 'kevin_smith', 'kevinpassword')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (14, 'olivia_miles', 'milesofsmiles')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (15, 'peter_pan', 'nevergrowup')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (16, 'natalie_wells', 'wellness123')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (17, 'george_morris', 'georgepassword')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (18, 'angela_brown', 'angelabrownpwd')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (19, 'ryan_cooper', 'cooper123')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (20, 'julia_garcia', 'juliapwd123')",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'password123');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'jane_smith', 'securepassword');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'adam_jones', 'pass123word');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'lisa_brown', 'strongpassword');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'michael_davis', 'password321');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'user');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'manager');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'guest');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (5, 'supervisor');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (4, 4);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (5, 5);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 3);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 4);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (4, 5);",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (5, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('jane_smith', 'qwerty456')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('admin', 'admin123')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('admin')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('user')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 1)",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource1', 'Description for resource1')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource2', 'Description for resource2')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource3', 'Description for resource3')",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('user1', 'password1');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('user2', 'password2');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('user3', 'password3');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('user4', 'password4');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO users (username, password) VALUES ('user5', 'password5');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('role1');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('role2');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('role3');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('role4');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO roles (role_name) VALUES ('role5');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (4, 4);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (5, 5);",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource1', 'description1');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource2', 'description2');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource3', 'description3');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource4', 'description4');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nINSERT INTO resources (resource_name, description) VALUES ('resource5', 'description5');",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_auth (user_id, username, password) VALUES (1, 'john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_auth (user_id, username, password) VALUES (2, 'jane_smith', 'securepass')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (1, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (2, 'user')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (1, 'read')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (2, 'write')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_role_mapping (user_id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_role_mapping (user_id, role_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permission_mapping (role_id, permission_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permission_mapping (role_id, permission_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_auth (user_id, username, password) VALUES (3, 'alice_thompson', 'pass123')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (3, 'manager')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (3, 'delete')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_role_mapping (user_id, role_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permission_mapping (role_id, permission_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_auth (user_id, username, password) VALUES (4, 'sam_jackson', 'pass456')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (4, 'visitor')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (4, 'view')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_role_mapping (user_id, role_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permission_mapping (role_id, permission_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_auth (user_id, username, password) VALUES (1, 'john_doe', 'jd@12345')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (1, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (2, 'user')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (1, 'read')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (2, 'write')",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_role_mapping (user_id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_role_mapping (user_id, role_id) VALUES (1, 2)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permission_mapping (role_id, permission_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nINSERT INTO role_permission_mapping (role_id, permission_id) VALUES (1, 2)"
]