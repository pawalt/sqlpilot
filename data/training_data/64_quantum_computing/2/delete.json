[
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE role = 'user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE username = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE role = 'user' AND created_at < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password_hash VARCHAR(100) NOT NULL,\n  role ENUM('admin', 'user') NOT NULL,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM users WHERE role = 'admin' OR username = 'test_user';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE username = 'john45';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM access_controls WHERE control_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM access_controls WHERE user_id = 101 AND resource_id = 201 AND permission_type = 'read';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 105;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE access_controls (\n    control_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    resource_id INT NOT NULL,\n    permission_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM access_controls WHERE user_id IN (SELECT user_id FROM users WHERE username = 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nDELETE FROM roles WHERE role_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nDELETE FROM user_roles WHERE user_id = 3 AND role_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nDELETE FROM user_roles WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nDELETE FROM roles WHERE role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users ( \n    user_id INT PRIMARY KEY, \n    username VARCHAR(50) NOT NULL, \n    password VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE roles ( \n    role_id INT PRIMARY KEY, \n    role_name VARCHAR(50) NOT NULL \n);\n\nCREATE TABLE user_roles ( \n    user_id INT, \n    role_id INT, \n    PRIMARY KEY (user_id, role_id), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (role_id) REFERENCES roles(role_id) \n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nDELETE FROM roles WHERE role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nDELETE FROM user_roles WHERE user_id = 1 AND role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nDELETE FROM user_roles WHERE user_id = 1 AND role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id IN (SELECT user_id FROM roles WHERE role_name = 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (user_id SERIAL PRIMARY KEY,\n           username VARCHAR(50) NOT NULL,\n           password VARCHAR(100) NOT NULL);\n\nCREATE TABLE roles (role_id SERIAL PRIMARY KEY,\n           role_name VARCHAR(50) NOT NULL);\n\n\nCREATE TABLE user_roles (user_id INT REFERENCES users(user_id),\n           role_id INT REFERENCES roles(role_id),\n           PRIMARY KEY (user_id, role_id));\n\nCREATE TABLE resources (resource_id SERIAL PRIMARY KEY,\n           resource_name VARCHAR(50) NOT NULL,\n           description TEXT);\n\n### STATEMENT\n\nDELETE FROM resources WHERE resource_id NOT IN (SELECT resource_id FROM user_roles);",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM user_role_mapping WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM user_permissions WHERE permission_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM user_roles WHERE role_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM user_role_mapping WHERE user_id = 1 AND role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM user_permissions WHERE permission_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_auth (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_role_mapping (\n    user_id INT,\n    role_id INT,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES user_auth(user_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id)\n);\n\nCREATE TABLE role_permission_mapping (\n    role_id INT,\n    permission_id INT,\n    PRIMARY KEY (role_id, permission_id),\n    FOREIGN KEY (role_id) REFERENCES user_roles(role_id),\n    FOREIGN KEY (permission_id) REFERENCES user_permissions(permission_id)\n);\n\n### STATEMENT\n\nDELETE FROM user_roles WHERE role_id = 3;"
]