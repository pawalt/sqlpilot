[
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (1, 'QuantumApp1', 3, 'key1', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (2, 'QuantumApp2', 2, 'key2', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (3, 'QuantumApp3', 1, 'key3', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (4, 'QuantumApp4', 4, 'key4', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (5, 'QuantumApp5', 2, 'key5', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (6, 'QuantumApp6', 3, 'key6', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (7, 'QuantumApp7', 4, 'key7', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (8, 'QuantumApp8', 1, 'key8', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (9, 'QuantumApp9', 2, 'key9', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (10, 'QuantumApp10', 3, 'key10', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (11, 'QuantumApp11', 4, 'key11', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (12, 'QuantumApp12', 2, 'key12', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (13, 'QuantumApp13', 1, 'key13', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (14, 'QuantumApp14', 3, 'key14', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (15, 'QuantumApp15', 4, 'key15', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (16, 'QuantumApp16', 1, 'key16', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (17, 'QuantumApp17', 2, 'key17', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (18, 'QuantumApp18', 3, 'key18', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (19, 'QuantumApp19', 4, 'key19', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (20, 'QuantumApp20', 1, 'key20', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (1, 'QuantumApp1', 3, 'key123', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (2, 'QuantumApp2', 4, 'key456', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (3, 'QuantumApp3', 2, 'key789', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (4, 'QuantumApp4', 5, 'keyabc', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (5, 'QuantumApp5', 1, 'keydef', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (6, 'QuantumApp6', 3, 'key123', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (7, 'QuantumApp7', 4, 'key456', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (8, 'QuantumApp8', 2, 'key789', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (9, 'QuantumApp9', 5, 'keyabc', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (10, 'QuantumApp10', 1, 'keydef', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (11, 'QuantumApp11', 3, 'key123', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (12, 'QuantumApp12', 4, 'key456', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (13, 'QuantumApp13', 2, 'key789', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (14, 'QuantumApp14', 5, 'keyabc', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (15, 'QuantumApp15', 1, 'keydef', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (16, 'QuantumApp16', 3, 'key123', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (17, 'QuantumApp17', 4, 'key456', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (18, 'QuantumApp18', 2, 'key789', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (19, 'QuantumApp19', 5, 'keyabc', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nINSERT INTO QuantumApplications (id, application_name, data_security_level, encryption_key, quantum_compatible) VALUES (20, 'QuantumApp20', 1, 'keydef', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430c8', 'Sensitive Data 1', '6ba7b810-9dad-11d1-80b4-00c04fd430c9')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430ca', 'user1', 'hash1', 'user1@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cb', 'Sensitive Data 2', '6ba7b810-9dad-11d1-80b4-00c04fd430cc')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cd', 'user2', 'hash2', 'user2@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430ce', 'Sensitive Data 3', '6ba7b810-9dad-11d1-80b4-00c04fd430cf')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d0', 'user3', 'hash3', 'user3@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d1', 'Sensitive Data 4', '6ba7b810-9dad-11d1-80b4-00c04fd430d2')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d3', 'user4', 'hash4', 'user4@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d4', 'Sensitive Data 5', '6ba7b810-9dad-11d1-80b4-00c04fd430d5')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d6', 'user5', 'hash5', 'user5@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d7', 'Sensitive Data 6', '6ba7b810-9dad-11d1-80b4-00c04fd430d8')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430d9', 'user6', 'hash6', 'user6@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430da', 'Sensitive Data 7', '6ba7b810-9dad-11d1-80b4-00c04fd430db')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430dc', 'user7', 'hash7', 'user7@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430dd', 'Sensitive Data 8', '6ba7b810-9dad-11d1-80b4-00c04fd430de')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430df', 'user8', 'hash8', 'user8@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430e0', 'Sensitive Data 9', '6ba7b810-9dad-11d1-80b4-00c04fd430e1')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430e2', 'user9', 'hash9', 'user9@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430e3', 'Sensitive Data 10', '6ba7b810-9dad-11d1-80b4-00c04fd430e4')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password_hash, email) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430e5', 'user10', 'hash10', 'user10@example.com')",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('7a35b3af-9e0f-4af1-b232-f0fced1f712d', 'Sensitive Data 1', '0cff5157-a97c-426e-8f9d-38cba64d0d9d');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('a617d0fa-6e49-45bd-a0bd-465a09ed3870', 'Sensitive Data 2', 'cbce9859-4fb2-4565-9851-2266d2a2e75d');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('7fe86f4e-d12c-40a1-9a12-6cb7de1c9755', 'Sensitive Data 3', 'a7e7bfa7-7c88-4d07-8ef5-07f3d9f7f2ae');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('20abdbcc-dff8-484a-b583-360130f42825', 'Sensitive Data 4', '2940f603-58e0-4cb1-aa98-813e899ed4c3');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('fa2781ab-126b-4e84-a94d-4579b051f754', 'Sensitive Data 5', '6fac9277-d1a2-468d-8262-7bc832f46f5c');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('25b9f7bd-c04e-497b-946d-23df6eb0db5a', 'Sensitive Data 6', 'f55a1602-87f4-42ae-b425-116ad6746fc7');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('4ed0dbd8-402f-4686-9461-7423c6a4232b', 'Sensitive Data 7', 'b5020de2-d5ba-41a3-9c8b-8c7a0768a17d');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('b6af6f5d-57a1-4722-8287-73c39da6c05e', 'Sensitive Data 8', 'db9d5ec6-231f-4cf2-a0f2-8316b72e37b3');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('f9a4d3b1-6487-4b06-b930-89b41fc995c3', 'Sensitive Data 9', 'a9cf5a7b-f2c1-40c0-bbc6-8204e98448c6');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('db40813a-5abf-48bc-b673-2dd9922449bc', 'Sensitive Data 10', 'c36d1df2-6c87-4b84-bc1d-c84db20c659f');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('f6a6f7f1-78a7-45f5-9228-bf8727fa616a', 'Sensitive Data 11', 'fb230e8f-5344-4e84-b049-ace936dfbc1d');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('18c7f432-070b-480e-abe1-54052d963496', 'Sensitive Data 12', '9dfe0985-8261-4cf9-8356-3fcbd6c1b3c4');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('d43c3cb1-b1ee-466b-bc2a-adf867d0d501', 'Sensitive Data 13', '8df08cff-d1da-44e1-b06a-9ed94b849206');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('a349359a-780c-4e75-b198-ee1c001b4b5c', 'Sensitive Data 14', 'df3312ed-6c01-4b70-9eaa-e9b8b2f5a2dc');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('6c94a4ea-156a-4599-9bc3-e9f1f4799d1f', 'Sensitive Data 15', 'b60ce6e6-b91b-4f67-b857-d9e7603f3107');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('5f44557f-c6e7-4e4a-9eb6-a5b803d9371b', 'Sensitive Data 16', 'd1246fac-bedc-4e74-868e-3e92a4e2bf8a');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('da5e0049-bb2a-4e51-809c-349aae1cc9d2', 'Sensitive Data 17', '4ca646b4-e4d2-4bd1-8415-81e302d54173');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('576ed9c0-9db2-44ed-9e2a-2b7e07d4422a', 'Sensitive Data 18', '0a9ceb05-8e26-41d0-9934-364df5064db0');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('07b59406-1ed6-4b83-9c64-890485980728', 'Sensitive Data 19', '2ef172a7-7004-4435-817e-aff3b38329d4');",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (id, sensitive_data, encryption_key) VALUES ('8e6da5f2-aee2-45e3-b615-85627d82dd9d', 'Sensitive Data 20', 'badf5b77-f1a0-465a-80ed-26ed1419e3b6');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (1, 'alice', 'password123', 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (2, 'bob', 'securePass', 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (3, 'charlie', 'pass1234', 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (4, 'diana', 'dianaPass', 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (5, 'eve', 'EvePass', 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (1, 1, 'blob1', 'key1');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (2, 2, 'blob2', 'key2');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (3, 3, 'blob3', 'key3');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (4, 4, 'blob4', 'key4');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (5, 5, 'blob5', 'key5');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (1, 1, 'Log 1', '2022-12-31 23:59:59');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (2, 2, 'Log 2', '2023-01-01 00:00:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (3, 3, 'Log 3', '2023-01-01 12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (4, 4, 'Log 4', '2023-01-01 18:00:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (5, 5, 'Log 5', '2023-01-02 06:00:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (1, 'admin', 'admin123', 5);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (1, 1, '0x5566778899', 'key123');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (1, 1, 'User logged in', '2022-01-04 08:30:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (2, 'john_doe', 'password123', 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (2, 2, '0xAABBCCDDEE', 'key456');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (2, 2, 'User data accessed', '2022-01-05 10:15:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (3, 'jane_smith', 'qwerty321', 4);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (3, 3, '0x1122334455', 'key789');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (3, 3, 'Data updated', '2022-01-06 14:20:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (4, 'alice_wonderland', 'rabbitHole1', 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (4, 4, '0x9988776655', 'keyabc');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (4, 4, 'Log information deleted', '2022-01-07 16:45:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (5, 'bob_sponge', 'P1n3app1e', 5);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (5, 5, '0x7766554433', 'keyxyz');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (5, 5, 'User session expired', '2022-01-08 09:30:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (6, 'samurai_jack', 'swordfish', 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (6, 6, '0x3344556677', 'key999');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (6, 6, 'Login success', '2022-01-09 11:45:00');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_users (user_id, username, password, security_level) VALUES (7, 'lara_croft', 'treasure1', 4);",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_data (data_id, user_id, data_blob, encryption_key) VALUES (7, 7, '0x778899aabb', 'keydef');",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO quantum_logs (log_id, user_id, log_details, log_time) VALUES (7, 7, 'Data retrieval error', '2022-01-10 13:20:00');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (1, 'john_doe', 'P@ssw0rd', 'john.doe@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (2, 'jane_smith', 'SecurePwd123', 'jane.smith@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (3, 'tom_jackson', 'StrongPass', 'tom.jackson@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (4, 'sarah_adams', 'MySecretPwd', 'sarah.adams@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (5, 'michael_brown', 'Password123!', 'michael.brown@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (1, 'document1.pdf', 'pdf', 2048, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (2, 'image.jpg', 'jpeg', 3072, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (3, 'data.xls', 'excel', 4096, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (4, 'video.mp4', 'mp4', 6144, 4);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (5, 'presentation.pptx', 'pptx', 1024, 5);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (1, 1, 1, '2022-05-15 12:30:00', 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (2, 2, 2, '2022-04-20 09:45:00', 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (3, 3, 3, '2022-03-10 15:20:00', 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (4, 4, 4, '2022-06-01 11:10:00', 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (5, 5, 5, '2022-07-05 14:00:00', 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (1, 1, 'LKJduiOERnFJIkl3498disjfhDSF54gfs');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (2, 2, 'QWERTyuiop789asdflkj2345jhfGvjkl');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (3, 3, 'PoiuytQWERgfhf345sdfyhWETRkjn345');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (4, 4, 'MBYUIjhdflkweR5789rtyghFDKnmgsl');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (5, 5, 'ZXCVbnmkw5892dfsghwjkgfHJKLmloa');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (1, 'john_doe', 'password123', 'john.doe@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password, email) VALUES (2, 'alice_smith', 'alice_password', 'alice.smith@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (1, 'file1.txt', 'txt', 1024, 1);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO files (file_id, file_name, file_type, file_size, user_id) VALUES (2, 'image.jpg', 'jpg', 2048, 2);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (1, 1, 1, '2022-01-01 10:00:00', 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, file_id, access_date, access_type) VALUES (2, 2, 2, '2022-01-02 12:00:00', 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (1, 1, 'sX4n98SDq80HjPn2UmFbGTu2Y3eSfR5Z');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, user_id, encryption_key) VALUES (2, 2, 'rT3m57Fa3Xs0Nz1GwK7hSd2JlPv4QbOb');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (1, 'user1', 'password1', 'user1@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (2, 'user2', 'password2', 'user2@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (3, 'user3', 'password3', 'user3@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (4, 'user4', 'password4', 'user4@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (5, 'user5', 'password5', 'user5@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (6, 'user6', 'password6', 'user6@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (7, 'user7', 'password7', 'user7@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (8, 'user8', 'password8', 'user8@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (9, 'user9', 'password9', 'user9@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (10, 'user10', 'password10', 'user10@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (11, 'user11', 'password11', 'user11@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (12, 'user12', 'password12', 'user12@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (13, 'user13', 'password13', 'user13@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (14, 'user14', 'password14', 'user14@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (15, 'user15', 'password15', 'user15@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (16, 'user16', 'password16', 'user16@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (17, 'user17', 'password17', 'user17@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (18, 'user18', 'password18', 'user18@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (19, 'user19', 'password19', 'user19@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users(user_id, username, password, email) VALUES (20, 'user20', 'password20', 'user20@example.com')",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users (user_id, username, password, email) VALUES (1, 'alice', 'pass123', 'alice@example.com');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users (user_id, username, password, email) VALUES (2, 'bob', 'abcxyz', 'bob@example.com');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users (user_id, username, password, email) VALUES (3, 'charlie', 'qwerty', 'charlie@example.com');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users (user_id, username, password, email) VALUES (4, 'diana', 'letmein', 'diana@example.com');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Users (user_id, username, password, email) VALUES (5, 'eve', 'password', 'eve@example.com');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Data (data_id, user_id, data_content, encrypted) VALUES (1, 1, 'data1', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Data (data_id, user_id, data_content, encrypted) VALUES (2, 2, 'data2', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Data (data_id, user_id, data_content, encrypted) VALUES (3, 3, 'data3', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Data (data_id, user_id, data_content, encrypted) VALUES (4, 4, 'data4', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Data (data_id, user_id, data_content, encrypted) VALUES (5, 5, 'data5', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Keys (key_id, user_id, encryption_key) VALUES (1, 1, 'key1');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Keys (key_id, user_id, encryption_key) VALUES (2, 2, 'key2');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Keys (key_id, user_id, encryption_key) VALUES (3, 3, 'key3');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Keys (key_id, user_id, encryption_key) VALUES (4, 4, 'key4');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Keys (key_id, user_id, encryption_key) VALUES (5, 5, 'key5');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Logs (log_id, user_id, log_content, timestamp) VALUES (1, 1, 'log1', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Logs (log_id, user_id, log_content, timestamp) VALUES (2, 2, 'log2', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Logs (log_id, user_id, log_content, timestamp) VALUES (3, 3, 'log3', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Logs (log_id, user_id, log_content, timestamp) VALUES (4, 4, 'log4', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Logs (log_id, user_id, log_content, timestamp) VALUES (5, 5, 'log5', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Settings (setting_id, user_id, setting_name, setting_value) VALUES (1, 1, 'setting1', 'value1');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Settings (setting_id, user_id, setting_name, setting_value) VALUES (2, 2, 'setting2', 'value2');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Settings (setting_id, user_id, setting_name, setting_value) VALUES (3, 3, 'setting3', 'value3');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Settings (setting_id, user_id, setting_name, setting_value) VALUES (4, 4, 'setting4', 'value4');",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nINSERT INTO Quantum_Settings (setting_id, user_id, setting_name, setting_value) VALUES (5, 5, 'setting5', 'value5');"
]