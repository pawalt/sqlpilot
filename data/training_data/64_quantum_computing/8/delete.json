[
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nDELETE FROM QuantumApplications WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nDELETE FROM QuantumApplications WHERE application_name = 'QuantumApp';",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nDELETE FROM QuantumApplications WHERE encryption_key = 'unique_key';",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nDELETE FROM QuantumApplications WHERE id = 123 AND data_security_level > 3",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nDELETE FROM QuantumApplications WHERE encryption_key = 'abc123'",
  "### TABLEDATA\n\nCREATE TABLE QuantumApplications (\n    id INT PRIMARY KEY,\n    application_name VARCHAR(50) NOT NULL,\n    data_security_level INT,\n    encryption_key VARCHAR(100) UNIQUE,\n    quantum_compatible BOOLEAN\n)\n\n### STATEMENT\n\nDELETE FROM QuantumApplications WHERE quantum_compatible = true",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_data WHERE id = '123e4567-e89b-12d3-a456-426655440000';",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_users WHERE user_id = '123e4567-e89b-12d3-a456-426655440001';",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_data WHERE id = '5eb63bbbe01eeed093cb22bb8f5acdc3';",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_users WHERE username = 'example_user';",
  "### TABLEDATA\n\nCREATE TABLE quantum_data (\n    id UUID PRIMARY KEY,\n    sensitive_data VARCHAR(255),\n    encryption_key UUID\n);\n\n\nCREATE TABLE quantum_users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    password_hash VARCHAR(255),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_data WHERE encryption_key = 'a47f10ba-7a60-419c-bf7d-257a98696850';",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_data WHERE data_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_logs WHERE log_id = 500;",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_data WHERE user_id = 123 AND encryption_key = 'abc123';",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_users WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE quantum_users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    security_level INT\n);\n\nCREATE TABLE quantum_data (\n    data_id INT PRIMARY KEY,\n    user_id INT,\n    data_blob BYTEA NOT NULL,\n    encryption_key VARCHAR(50) NOT NULL,\n    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\nCREATE TABLE quantum_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    log_details TEXT,\n    log_time TIMESTAMP NOT NULL,\n    CONSTRAINT fk_user_log FOREIGN KEY (user_id) REFERENCES quantum_users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM quantum_logs WHERE user_id = 789 AND log_time < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM files WHERE file_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM access_logs WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM files WHERE file_size > 1000 AND user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE files (\n    file_id INT PRIMARY KEY,\n    file_name VARCHAR(100) NOT NULL,\n    file_type VARCHAR(50) NOT NULL,\n    file_size INT NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nCREATE TABLE access_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    file_id INT,\n    access_date TIMESTAMP NOT NULL,\n    access_type VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (file_id) REFERENCES files(file_id)\n);\n\nCREATE TABLE encryption_keys (\n    key_id INT PRIMARY KEY,\n    user_id INT,\n    encryption_key VARCHAR(200) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nDELETE FROM access_logs WHERE user_id = 3 AND access_type = 'read';",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nDELETE FROM Quantum_Users WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nDELETE FROM Quantum_Data WHERE data_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nDELETE FROM Quantum_Keys WHERE key_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nDELETE FROM Quantum_Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nDELETE FROM Quantum_Data WHERE data_id = 5 AND user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Quantum_Users (\n user_id INT PRIMARY KEY,\n username STRING UNIQUE,\n password STRING,\n email STRING UNIQUE\n);\n\nCREATE TABLE Quantum_Data (\n data_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n data_content STRING,\n encrypted BOOLEAN\n);\n\nCREATE TABLE Quantum_Keys (\n key_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n encryption_key STRING\n);\n\nCREATE TABLE Quantum_Logs (\n log_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n log_content STRING,\n timestamp TIMESTAMP\n);\n\nCREATE TABLE Quantum_Settings (\n setting_id INT PRIMARY KEY,\n user_id INT REFERENCES Quantum_Users(user_id),\n setting_name STRING,\n setting_value STRING\n);\n\n### STATEMENT\n\nDELETE FROM Quantum_Keys WHERE user_id = 3 AND encryption_key = 'abc123';"
]