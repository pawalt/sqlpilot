[
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction WHERE algorithm_name = 'Shor';",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction WHERE error_threshold < 0.01;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction WHERE algorithm_name = 'Shor';",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction WHERE error_threshold > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction_algorithm WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nDELETE FROM error_correction_codes WHERE code_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction_algorithm WHERE algorithm_name = 'Shor';",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction_algorithm WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nDELETE FROM error_correction_codes WHERE code_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction_algorithm WHERE algorithm_name = 'Shor';",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM quantum_code WHERE code_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM qubit WHERE qubit_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM syndromes WHERE syndrome_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM quantum_code WHERE code_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM qubit WHERE qubit_value < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM syndromes WHERE code_id = 2 AND qubit_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nDELETE FROM QuantumCodeWords WHERE code_word_id=1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nDELETE FROM SyndromeTable WHERE syndrome_id=2;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nDELETE FROM ErrorMatrix WHERE error_id=3;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nDELETE FROM QuantumCodeWords WHERE code_word_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nDELETE FROM SyndromeTable WHERE syndrome_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nDELETE FROM ErrorMatrix WHERE error_type = 'Parity Error';",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction_algorithms WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nDELETE FROM qubits WHERE qubit_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nDELETE FROM stabilizer_codes WHERE code_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nDELETE FROM quantum_error_correction_algorithms WHERE algorithm_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nDELETE FROM qubits WHERE qubit_id = 100 AND is_entangled = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nDELETE FROM stabilizer_codes WHERE code_id = 50;"
]