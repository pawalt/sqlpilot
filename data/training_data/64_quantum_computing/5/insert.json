[
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (1, 'Shor Code', 'Quantum error correction code used in fault-tolerant quantum computing.', 0.01)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (2, 'Surface Code', 'Two-dimensional lattice-based quantum error correction code.', 0.005)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (3, 'Stabilizer Code', 'Stabilizer formalism-based quantum error correction code.', 0.02)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (4, 'Reed-Muller Code', 'Error-correcting code based on polynomial codes.', 0.015)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (5, 'CSS Code', 'Calderbank-Shor-Steane quantum error correction code.', 0.03)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (6, 'Steane Code', 'Seven-qubit quantum error correction code.', 0.025)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (7, 'Toric Code', 'Two-dimensional surface code on a torus.', 0.008)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (8, 'Bacon-Shor Code', 'Quantum error correction code with Bacon-Shor basis.', 0.012)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (9, 'Color Code', 'Quantum error correction code based on the color code construction.', 0.018)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (10, 'Rotated Surface Code', 'Variation of surface code with rotated qubits.', 0.022)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (11, 'Gottesman-Kitaev-Preskill Code', 'Quantum error correction code with GKP encoding.', 0.028)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (12, 'Hypergraph Code', 'Quantum error correction code based on hypergraph states.', 0.013)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (13, 'Topological Color Code', 'Topological quantum error correction code with color code.', 0.017)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (14, 'Majority Logic Decoding', 'Error correction method based on majority logic decoding.', 0.026)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (15, 'Steiner Code', 'Error-correcting code based on Steiner systems.', 0.032)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (16, 'Knill-Laflamme-Milburn Code', 'Error correction code introduced by Knill, Laflamme, and Milburn.', 0.019)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (17, 'Concatenated Code', 'Error correction code using concatenated codes.', 0.014)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (18, 'Bipartite Code', 'Quantum error correction code with bipartite structure.', 0.021)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (19, 'Surface-17 Code', 'Seventeen-qubit variant of surface code.', 0.027)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (20, 'Random Code', 'Randomly generated quantum error correction code.', 0.016)",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (1, 'Shor', 'Factorization algorithm', 0.01);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (2, 'Grover', 'Search algorithm', 0.005);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (3, 'Reed-Solomon', 'Error correction code', 0.02);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (4, 'CSS Code', 'Quantum error correction code', 0.015);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (5, 'Surface Code', 'Topological quantum error correction', 0.03);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (6, 'Steane Code', 'Quantum error correction code', 0.025);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (7, 'Preskill Code', 'Quantum error correction for noisy qubits', 0.035);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (8, 'Bit-Flip Code', 'Error correction code for bit-flip errors', 0.02);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (9, 'Phase-Flip Code', 'Error correction code for phase-flip errors', 0.018);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (10, 'Stabilizer Code', 'Error correction code using stabilizer formalism', 0.03);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (11, 'Cats Code', 'Quantum error correction for superconducting qubits', 0.032);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (12, 'Bacon-Shor Code', 'Quantum error correction code for quantum dots', 0.025);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (13, 'Fowler Code', 'Quantum error correction using surface code', 0.028);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (14, 'Steane-Bacon Code', 'Hybrid quantum error correction code', 0.03);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (15, 'Knill-Laflamme Code', 'Error correction code based on quantum error correction conditions', 0.022);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (16, 'Tyson Code', 'Quantum error correction code for quantum error detection', 0.035);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (17, 'Gottesman-Kitaev-Preskill Code', 'Unified approach to quantum error correction', 0.04);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (18, 'Calderbank-Shor-Steane Code', 'Quantum error correction code based on classical codes', 0.03);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (19, 'Knill Code', 'Quantum error correction for qubits with errors', 0.025);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction (\n  id INT PRIMARY KEY,\n  algorithm_name VARCHAR(255),\n  description TEXT,\n  error_threshold FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction (id, algorithm_name, description, error_threshold) VALUES (20, 'DiVincenzo Code', 'Error correction code for quantum computers', 0.03);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (1, 'Shor', 'Shor''s algorithm for factoring integers');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (2, 'Surface Code', 'Surface code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (3, 'Repetition Code', 'Repetition code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (4, 'Stabilizer Code', 'Stabilizer code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (5, 'Toric Code', 'Toric code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (1, 'Bit Flip', 'Error correction code for correcting bit flip errors');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (2, 'Phase Flip', 'Error correction code for correcting phase flip errors');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (3, 'Bit-Phase Flip', 'Error correction code for correcting both bit and phase flip errors');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (4, 'Shor Code', 'Error correction code based on Shor''s algorithm');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (5, 'Reed-Muller Code', 'Error correction code based on Reed-Muller codes');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (6, 'Graph State', 'Graph state for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (7, 'Color Code', 'Color code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (8, 'Bacon-Shor Code', 'Bacon-Shor code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (9, 'Concatenated Code', 'Concatenated code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (10, 'Steane Code', 'Steane code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (6, 'Quantum Cyclic Code', 'Quantum cyclic code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (7, 'Tanner Code', 'Tanner code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (8, 'Torah Code', 'Torah code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (9, 'Topological Code', 'Topological code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (10, 'XZZX Code', 'XZZX code for error correction in quantum computing');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (1, 'Algorithm 1', 'Description 1');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (2, 'Algorithm 2', 'Description 2');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (3, 'Algorithm 3', 'Description 3');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (4, 'Algorithm 4', 'Description 4');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (5, 'Algorithm 5', 'Description 5');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (1, 'Type 1', 'Properties 1');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (2, 'Type 2', 'Properties 2');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (3, 'Type 3', 'Properties 3');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (4, 'Type 4', 'Properties 4');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (5, 'Type 5', 'Properties 5');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (6, 'Algorithm 6', 'Description 6');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (7, 'Algorithm 7', 'Description 7');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (8, 'Algorithm 8', 'Description 8');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (9, 'Algorithm 9', 'Description 9');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithm (algorithm_id, algorithm_name, algorithm_description) VALUES (10, 'Algorithm 10', 'Description 10');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (6, 'Type 6', 'Properties 6');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (7, 'Type 7', 'Properties 7');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (8, 'Type 8', 'Properties 8');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (9, 'Type 9', 'Properties 9');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithm (\n    algorithm_id INT PRIMARY KEY,\n    algorithm_name VARCHAR(50) NOT NULL,\n    algorithm_description TEXT\n);\n\nCREATE TABLE error_correction_codes (\n    code_id INT PRIMARY KEY,\n    code_type VARCHAR(50) NOT NULL,\n    code_properties TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_correction_codes (code_id, code_type, code_properties) VALUES (10, 'Type 10', 'Properties 10');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code1', 'Type1');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code2', 'Type2');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code3', 'Type3');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code4', 'Type4');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code5', 'Type5');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.1, 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.2, 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.3, 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.4, 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.5, 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Info1', 1, 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Info2', 1, 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Info3', 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Info4', 2, 4);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Info5', 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code A', 'Type X');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code B', 'Type Y');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code C', 'Type Z');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.5, 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.7, 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.9, 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome X', 1, 1);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome Y', 2, 2);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome Z', 3, 3);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code D', 'Type W');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code E', 'Type V');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code F', 'Type U');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.4, 4);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.6, 5);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO qubit (qubit_value, code_id) VALUES (0.8, 6);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome W', 4, 4);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome V', 5, 5);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO syndromes (syndrome_info, code_id, qubit_id) VALUES ('Syndrome U', 6, 6);",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code G', 'Type T');",
  "### TABLEDATA\n\nCREATE TABLE quantum_code (\n    code_id SERIAL PRIMARY KEY,\n    code_name VARCHAR(255) NOT NULL,\n    error_type VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE qubit (\n    qubit_id SERIAL PRIMARY KEY,\n    qubit_value FLOAT NOT NULL,\n    code_id INTEGER NOT NULL\n);\n\nCREATE TABLE syndromes (\n    syndrome_id SERIAL PRIMARY KEY,\n    syndrome_info TEXT NOT NULL,\n    code_id INTEGER NOT NULL,\n    qubit_id INTEGER NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO quantum_code (code_name, error_type) VALUES ('Code H', 'Type S');",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (1, '00000')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (2, '11111')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (3, '01010')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (4, '10101')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (5, '11000')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (6, '00111')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (7, '10010')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (8, '01101')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (9, '10110')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (10, '01001')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (1, '000')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (2, '111')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (3, '010')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (4, '101')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (5, '110')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (6, '001')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (1, 'X', 'Bit flip error')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (2, 'Z', 'Phase flip error')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (3, 'Y', 'Bit-phase flip error')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (1, 'X', 'Apply X gate')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (1, '00000000')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (2, '11111111')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (3, '10101010')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO QuantumCodeWords (code_word_id, code_word) VALUES (4, '01010101')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (1, '000')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (2, '111')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (3, '010')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO SyndromeTable (syndrome_id, syndrome_code) VALUES (4, '101')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (1, 'Single Bit Flip', 'Flip a single bit in the code word')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (2, 'Bit Phase Flip', 'Flip the phase of a bit in the code word')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (3, 'Bit Stuck at 1', 'A bit is stuck at 1 in the code word')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO ErrorMatrix (error_id, error_type, error_description) VALUES (4, 'Bit Stuck at 0', 'A bit is stuck at 0 in the code word')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (1, 'Hamming Distance', 'Correct errors based on Hamming distance')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (2, 'Majority Voting', 'Correct errors using majority voting scheme')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (3, 'Nearest Neighbor', 'Correct errors by selecting nearest neighbor code word')",
  "### TABLEDATA\n\nCREATE TABLE QuantumCodeWords (\n    code_word_id INT PRIMARY KEY,\n    code_word VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SyndromeTable (\n    syndrome_id INT PRIMARY KEY,\n    syndrome_code VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ErrorMatrix (\n    error_id INT PRIMARY KEY,\n    error_type VARCHAR(255) NOT NULL,\n    error_description TEXT\n);\n\nCREATE TABLE CorrectionMatrix (\n    correction_id INT PRIMARY KEY,\n    correction_type VARCHAR(255) NOT NULL,\n    correction_rule TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CorrectionMatrix (correction_id, correction_type, correction_rule) VALUES (4, 'Backtracking', 'Correct errors by backtracking algorithm')",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Shor Code', 'Error correction using Shor code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Surface Code', 'Error correction using Surface code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Topological Code', 'Error correction using Topological code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (0, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (1, false);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (0, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('XZZX Code', '1 1 0 0\n0 1 1 0\n0 0 1 1\n1 0 0 1');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('CSS Code', '1 1 0 0\n0 1 0 1\n1 0 1 0');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Bacon Shor Code', '1 1 0 0\n0 1 1 0\n0 0 1 1\n1 0 0 1');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (0, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (1, false);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (0, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Bit Flip', 'Error caused by bit flip operation');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Phase Flip', 'Error caused by phase flip operation');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Bit-Phase Flip', 'Error caused by bit and phase flip operations');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Reed-Muller Code', 'Error correction using Reed-Muller code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Color Code', 'Error correction using Color code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Surface-17 Code', 'Error correction using Surface-17 code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Steane Code', 'Error correction using Steane code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Fowler Code', 'Error correction using Fowler code');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Shor Code', 'Algorithm based on Shor error correction for quantum systems');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Stabilizer Code', 'Algorithm using stabilizer codes for error correction');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO quantum_error_correction_algorithms (algorithm_name, description) VALUES ('Surface Code', 'Algorithm utilizing surface codes for error detection and correction');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (1, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (0, false);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (1, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO qubits (qubit_value, is_entangled) VALUES (0, false);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Reed-Muller Code', '[1 0 1; 0 1 1]');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('CSS Code', '[1 1 0; 0 1 1]');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO stabilizer_codes (code_name, generator_matrix) VALUES ('Steane Code', '[1 0 1; 1 1 0]');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (1, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (0, false);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (1, true);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO logical_qubits (logical_qubit_value, has_error_correction) VALUES (0, false);",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Bit Flip', 'Syndrome caused by a bit flip error');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Phase Flip', 'Syndrome caused by a phase flip error');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Bit-Phase Flip', 'Syndrome caused by a combined bit-phase flip error');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Depolarizing', 'Syndrome caused by depolarizing noise');",
  "### TABLEDATA\n\nCREATE TABLE quantum_error_correction_algorithms (\n  algorithm_id SERIAL PRIMARY KEY,\n  algorithm_name VARCHAR(50) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE qubits (\n  qubit_id SERIAL PRIMARY KEY,\n  qubit_value INT NOT NULL,\n  is_entangled BOOLEAN\n);\n\nCREATE TABLE stabilizer_codes (\n  code_id SERIAL PRIMARY KEY,\n  code_name VARCHAR(50) NOT NULL,\n  generator_matrix TEXT\n);\n\nCREATE TABLE logical_qubits (\n  logical_qubit_id SERIAL PRIMARY KEY,\n  logical_qubit_value INT NOT NULL,\n  has_error_correction BOOLEAN\n);\n\nCREATE TABLE error_syndromes (\n  syndrome_id SERIAL PRIMARY KEY,\n  syndrome_name VARCHAR(50) NOT NULL,\n  syndrome_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO error_syndromes (syndrome_name, syndrome_description) VALUES ('Stuck Fault', 'Syndrome caused by a stuck fault in the system');"
]