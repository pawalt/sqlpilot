[
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT event_date, data_value FROM historical_data WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT event_description FROM historical_data WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_description, data_value FROM historical_data WHERE event_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE data_value BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date FROM historical_data WHERE event_date >= '2022-01-01' AND event_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(data_value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT event_description FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date, data_value FROM historical_data WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT event_date, data_value FROM historical_data ORDER BY event_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS average_value FROM historical_data GROUP BY event_date;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT event_description, COUNT(*) AS count FROM historical_data GROUP BY event_description HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS average_value, MIN(data_value) AS min_value, MAX(data_value) AS max_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date, data_value FROM historical_data WHERE event_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date, data_value FROM historical_data WHERE event_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_description, data_value FROM historical_data WHERE event_description LIKE 'error%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date, event_description, data_value FROM historical_data WHERE event_description = 'success';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date, event_description, data_value FROM historical_data WHERE data_value = 0;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_date FROM historical_data WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE data_value < 100 AND event_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_description FROM historical_data WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) FROM historical_data WHERE event_date BETWEEN '2022-01-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT event_date, COUNT(*) FROM historical_data GROUP BY event_date;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(data_value) FROM historical_data WHERE event_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE event_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(data_value), MAX(data_value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, data_value FROM historical_data ORDER BY data_value DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT event_date FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, AVG(data_value) FROM historical_data GROUP BY id HAVING AVG(data_value) > 50;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, COUNT(*) AS event_count FROM historical_data GROUP BY id HAVING event_count > 3;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, SUM(data_value) FROM historical_data GROUP BY id ORDER BY SUM(data_value) DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id = 10 UNION SELECT * FROM historical_data WHERE id = 15;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT TOP 5 * FROM historical_data ORDER BY event_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, data_value, event_date FROM historical_data WHERE DATEDIFF('2022-03-01', event_date) > 30;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS avg_value, MAX(data_value) AS max_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT event_date, SUM(data_value) FROM historical_data GROUP BY event_date HAVING SUM(data_value) > 500;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n   id INT PRIMARY KEY,\n   event_date DATE,\n   event_description TEXT,\n   data_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, DATE_ADD(event_date, INTERVAL 1 MONTH) AS next_month FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT date, event_name FROM historical_data WHERE event_type = 'important';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_model WHERE model_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, model_description FROM predictive_model WHERE accuracy > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT id, date, event_type FROM historical_data WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_model WHERE accuracy < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT event_name FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) FROM predictive_model;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM historical_data WHERE event_type = 'warning' ORDER BY date ASC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(accuracy) FROM predictive_model;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(accuracy) FROM predictive_model;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT id, event_name, event_type FROM historical_data WHERE event_type IN ('important', 'warning');",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, model_description, accuracy FROM predictive_model WHERE accuracy BETWEEN 0.7 AND 0.9;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE event_description LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, training_data_source FROM predictive_model WHERE model_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_type, COUNT(*) FROM historical_data GROUP BY event_type;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS average_accuracy FROM predictive_model;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM predictive_model ORDER BY accuracy DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT date, event_name FROM historical_data WHERE event_type = 'important' ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, COUNT(*) AS event_count FROM historical_data GROUP BY event_name;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM predictive_model WHERE accuracy > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM historical_data WHERE event_name LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id IN (SELECT model_id FROM predictive_model WHERE accuracy > 0.8);",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, model_description FROM predictive_model WHERE model_name = 'Linear Regression';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data JOIN predictive_model ON historical_data.id = predictive_model.model_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_type FROM historical_data UNION SELECT model_name, training_data_source FROM predictive_model;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM historical_data WHERE event_name = 'Meeting' AND event_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, COUNT(*) AS event_count FROM historical_data WHERE date = '2022-04-15' GROUP BY event_name;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM historical_data WHERE event_name IN ('Meeting', 'Training');",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_model WHERE model_id NOT IN (SELECT id FROM historical_data WHERE event_type = 'error');",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM historical_data WHERE YEAR(date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS avg_accuracy FROM predictive_model;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, event_description FROM historical_data WHERE event_name = 'Conference' OR event_type = 'important';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT event_name, COUNT(*) AS event_count FROM historical_data GROUP BY event_name HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE event_name = 'Conference' ORDER BY date LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    event_name VARCHAR(100),\n    event_type VARCHAR(50),\n    event_description TEXT\n);\n\nCREATE TABLE predictive_model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    model_description TEXT,\n    training_data_source VARCHAR(100),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE event_type LIKE '%fail%' AND event_type NOT LIKE '%critical%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT id, date FROM historical_data WHERE value > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(value) AS max_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM patterns;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT pattern_type FROM patterns WHERE pattern_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, model_type, accuracy FROM predictive_modeling WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(value) AS average_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name FROM predictive_modeling WHERE accuracy > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rows FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(date) AS earliest_date FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_type FROM predictive_modeling WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(value) AS total_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_type FROM predictive_modeling WHERE accuracy < 0.8;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT(pattern_type) FROM patterns;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_type FROM patterns;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT model_type) AS unique_models FROM predictive_modeling;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS average_accuracy FROM predictive_modeling;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(value) AS average_value FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data JOIN predictive_modeling ON historical_data.id = predictive_modeling.model_id",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(value) AS max_value, MIN(value) AS min_value FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling WHERE accuracy > 0.8",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_records FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE value > 100 ORDER BY date DESC",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT pattern_id, AVG(accuracy) AS avg_accuracy FROM predictive_modeling GROUP BY pattern_id",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT pattern_type FROM patterns",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy, DATE_FORMAT(date, '%Y-%m-%d') AS formatted_date FROM historical_data JOIN predictive_modeling ON historical_data.id = predictive_modeling.model_id",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE MONTH(date) = 1 AND YEAR(date) = 2022",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT pattern_type, COUNT(*) AS num_models FROM patterns JOIN predictive_modeling ON patterns.pattern_id = predictive_modeling.model_id GROUP BY pattern_type",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE value > (SELECT AVG(value) FROM historical_data)",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT pattern_id FROM predictive_modeling WHERE model_type LIKE 'Regression%'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling WHERE model_name LIKE '%Model%'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE EXISTS (SELECT * FROM predictive_modeling WHERE historical_data.id = predictive_modeling.model_id)",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT pattern_type, MAX(accuracy) AS max_accuracy FROM patterns JOIN predictive_modeling ON patterns.pattern_id = predictive_modeling.model_id GROUP BY pattern_type",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(value) AS total_value FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE id IN (SELECT AVG(model_id) FROM predictive_modeling)",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    value FLOAT\n);\n\n\nCREATE TABLE patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_type VARCHAR(50)\n);\n\n\nCREATE TABLE predictive_modeling (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    model_type VARCHAR(50),\n    accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE YEAR(date) = YEAR(CURDATE()) ORDER BY date DESC",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, date FROM historical_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT pattern_name, description FROM patterns WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling WHERE accuracy > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM predictive_modeling WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM analyses WHERE result LIKE '%success%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_name FROM analyses WHERE id = 4;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, date, data_value FROM historical_data ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM patterns ORDER BY pattern_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, pattern_name FROM patterns WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM predictive_modeling WHERE accuracy BETWEEN 0.8 AND 0.9;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, analysis_id FROM analyses WHERE analysis_name = 'Sample Analysis';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS avg_accuracy FROM predictive_modeling;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM analyses;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT pattern_name, COUNT(*) AS pattern_count FROM patterns GROUP BY pattern_name;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(accuracy) AS max_accuracy FROM predictive_modeling;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(data_value) AS min_data_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, model_name, accuracy FROM predictive_modeling WHERE model_name = 'Sample Model';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS avg_data_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE data_value > 100",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, date FROM historical_data WHERE date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(data_value) AS average_value FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT pattern_name, description FROM patterns WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling WHERE accuracy > 0.9",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_name, result FROM analyses WHERE result IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_rows FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT pattern_name FROM patterns",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM predictive_modeling ORDER BY accuracy DESC",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE data_value < 50 AND date <= '2021-06-30'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS average_accuracy FROM predictive_modeling",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, pattern_name, description FROM patterns WHERE LENGTH(description) > 100",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT analysis_id FROM analyses",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling WHERE model_name LIKE '%regression%'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT date, data_value FROM historical_data WHERE YEAR(date) = 2020",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, analysis_name FROM analyses WHERE result LIKE '%positive%'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(data_value) AS max_value FROM historical_data",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT pattern_name, COUNT(*) AS pattern_count FROM patterns GROUP BY pattern_name",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy FROM predictive_modeling WHERE accuracy < 0.8",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT id, analysis_name FROM analyses ORDER BY analysis_name ASC",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n    id INT PRIMARY KEY,\n    date DATE,\n    data_value FLOAT\n);\n\nCREATE TABLE patterns (\n    id INT PRIMARY KEY,\n    pattern_name VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE predictive_modeling (\n    id INT PRIMARY KEY,\n    model_id UUID,\n    model_name VARCHAR(100),\n    accuracy FLOAT\n);\n\nCREATE TABLE analyses (\n    id INT PRIMARY KEY,\n    analysis_id UUID,\n    analysis_name VARCHAR(100),\n    result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date > '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT date, value FROM historical_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT pattern_description FROM patterns WHERE pattern_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT model_name FROM predictive_modeling WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT result_description FROM analysis_results WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT id, pattern_id FROM patterns_data WHERE pattern_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT AVG(value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT MAX(value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT MIN(value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT date FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE value > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM patterns_data INNER JOIN patterns ON patterns_data.pattern_id = patterns.pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM patterns_data WHERE pattern_id = 2 AND id = 3;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date = '2022-01-01' AND value > 50;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT AVG(value) FROM historical_data GROUP BY date;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT pattern_id, COUNT(id) FROM patterns_data GROUP BY pattern_id HAVING COUNT(id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT id, date FROM historical_data WHERE value > 100;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT AVG(value) FROM historical_data GROUP BY date;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data WHERE date >= '2022-01-01' AND date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description FROM patterns WHERE pattern_description LIKE '%pattern%';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name FROM predictive_modeling WHERE model_name = 'Linear Regression';",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT result_id, result_description FROM analysis_results ORDER BY result_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT id FROM patterns_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT AVG(value) AS average_value FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT id, date, value FROM historical_data WHERE id IN (SELECT id FROM patterns_data WHERE pattern_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT pattern_id, COUNT(*) AS pattern_count FROM patterns_data GROUP BY pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data JOIN patterns_data ON historical_data.id = patterns_data.id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM historical_data LEFT JOIN patterns_data ON historical_data.id = patterns_data.id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT * FROM predictive_modeling INNER JOIN patterns_data ON predictive_modeling.model_id = patterns_data.pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT MAX(value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT SUM(value) FROM historical_data;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT pattern_id, CONCAT(pattern_description, ' - Pattern') AS pattern_label FROM patterns;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT pattern_id, AVG(value) AS average_value FROM patterns_data JOIN historical_data ON patterns_data.id = historical_data.id GROUP BY pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, COUNT(*) AS model_count FROM predictive_modeling JOIN patterns_data ON predictive_modeling.model_id = patterns_data.pattern_id GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE historical_data (\n  id INT PRIMARY KEY,\n  date DATE,\n  value FLOAT\n);\n\n\nCREATE TABLE patterns (\n  pattern_id INT PRIMARY KEY,\n  pattern_description VARCHAR(255)\n);\n\n\nCREATE TABLE predictive_modeling (\n  model_id INT PRIMARY KEY,\n  model_name VARCHAR(255)\n);\n\n\nCREATE TABLE analysis_results (\n  result_id INT PRIMARY KEY,\n  result_description TEXT\n);\n\n\nCREATE TABLE patterns_data (\n  pattern_id INT,\n  id INT,\n  FOREIGN KEY (pattern_id) REFERENCES patterns(pattern_id),\n  FOREIGN KEY (id) REFERENCES historical_data(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_results FROM analysis_results;"
]