[
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT * FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, training_accuracy FROM ModelPerformance WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT * FROM ModelPerformance WHERE training_accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, validation_accuracy FROM ModelPerformance WHERE validation_accuracy < 0.8;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, precision FROM ModelPerformance WHERE precision >= 0.7;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, recall FROM ModelPerformance WHERE recall <= 0.5;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, f1_score FROM ModelPerformance WHERE f1_score > 0.6;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_name FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT AVG(training_accuracy) FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT MAX(validation_accuracy) FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(precision) FROM ModelPerformance GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, MIN(recall) FROM ModelPerformance GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT AVG(f1_score) AS avg_f1_score FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name AS model, precision AS model_precision FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, precision, recall, f1_score FROM ModelPerformance WHERE precision = 0.9 AND recall = 0.7;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, validation_accuracy, f1_score FROM ModelPerformance ORDER BY validation_accuracy DESC;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, precision FROM ModelPerformance WHERE validation_accuracy > 0.8 ORDER BY precision DESC;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, training_accuracy FROM ModelPerformance WHERE model_name LIKE 'M%';",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, validation_accuracy FROM ModelPerformance WHERE model_name NOT LIKE '%X%';",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, training_accuracy, validation_accuracy, precision, recall, f1_score FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name FROM ModelPerformance WHERE training_accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, COUNT(*) AS total_models FROM ModelPerformance GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT AVG(training_accuracy) AS avg_training_accuracy, AVG(validation_accuracy) AS avg_validation_accuracy FROM ModelPerformance;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, f1_score FROM ModelPerformance ORDER BY f1_score DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, training_accuracy FROM ModelPerformance WHERE precision > 0.85;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, recall FROM ModelPerformance WHERE model_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, validation_accuracy FROM ModelPerformance ORDER BY validation_accuracy DESC;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, precision, f1_score FROM ModelPerformance WHERE recall < 0.7 AND validation_accuracy > 0.85;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, training_accuracy, validation_accuracy, f1_score FROM ModelPerformance WHERE model_name LIKE 'Logistic%';",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, training_accuracy, validation_accuracy FROM ModelPerformance WHERE precision >= 0.8 AND recall >= 0.75;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, precision, recall, f1_score FROM ModelPerformance WHERE validation_accuracy < 0.9 AND (precision > 0.85 OR recall > 0.8);",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, precision FROM ModelPerformance WHERE precision BETWEEN 0.7 AND 0.9;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, training_accuracy, validation_accuracy, f1_score FROM ModelPerformance WHERE validation_accuracy = 1.0;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, training_accuracy, precision, f1_score FROM ModelPerformance WHERE validation_accuracy < 0.8;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, validation_accuracy FROM ModelPerformance WHERE training_accuracy < 0.7;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, validation_accuracy FROM ModelPerformance WHERE model_id NOT IN (101, 102);",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, training_accuracy, validation_accuracy, f1_score FROM ModelPerformance WHERE model_name = 'Neural Network' AND precision > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, recall FROM ModelPerformance WHERE validation_accuracy > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE ModelPerformance (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy DECIMAL(5,3),\n    validation_accuracy DECIMAL(5,3),\n    precision DECIMAL(5,3),\n    recall DECIMAL(5,3),\n    f1_score DECIMAL(5,3)\n);\n\n### STATEMENT\n\nSELECT model_name, precision, f1_score FROM ModelPerformance WHERE training_accuracy < 0.8 ORDER BY training_accuracy ASC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name FROM model_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT evaluation_id, model_id, evaluation_date FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, AVG(metric_value) AS avg_metric_value FROM model_metrics GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, MAX(metric_value) AS max_metric_value FROM model_metrics GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, MIN(metric_value) AS min_metric_value FROM model_metrics GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, COUNT(*) AS num_metrics FROM model_metrics GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics WHERE metric_value > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_result FROM model_metrics INNER JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_result FROM model_metrics LEFT JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_result FROM model_metrics RIGHT JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_result FROM model_metrics FULL JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value, evaluation_date, evaluation_result FROM model_metrics INNER JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics UNION SELECT * FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics INTERSECT SELECT * FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics EXCEPT SELECT * FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, ROUND(metric_value, 2) AS rounded_metric_value FROM model_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, CAST(metric_value AS INT) AS int_metric_value FROM model_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, SUM(metric_value) AS total_metric_value FROM model_metrics GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics WHERE model_id = 1",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics WHERE metric_value > 0.5",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics WHERE metrics_name LIKE '%accuracy%'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT evaluation_id, model_id, evaluation_date FROM evaluation_results WHERE model_id = 2",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM evaluation_results WHERE evaluation_date = '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT evaluation_id, model_id, evaluation_date FROM evaluation_results WHERE evaluation_result = 'pass'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, AVG(metric_value) FROM model_metrics GROUP BY model_id",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT metrics_name, MAX(metric_value) FROM model_metrics GROUP BY metrics_name",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, AVG(metric_value) FROM model_metrics WHERE model_id = 3 GROUP BY model_id",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, COUNT(*) FROM model_metrics GROUP BY model_id HAVING COUNT(*) > 2",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, AVG(metric_value) FROM model_metrics GROUP BY model_id HAVING AVG(metric_value) > 0.6",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics WHERE model_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM evaluation_results WHERE model_id NOT IN (1, 2)",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, SUM(metric_value) FROM model_metrics GROUP BY model_id HAVING SUM(metric_value) > 5",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics UNION SELECT model_id, evaluation_result AS metrics_name, evaluation_id AS metric_value FROM evaluation_results",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics INTERSECT SELECT model_id, evaluation_result AS metrics_name, evaluation_id AS metric_value FROM evaluation_results",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, metrics_name, metric_value FROM model_metrics EXCEPT SELECT model_id, evaluation_result AS metrics_name, evaluation_id AS metric_value FROM evaluation_results",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, COUNT(*) FROM model_metrics UNION SELECT model_id, COUNT(*) FROM evaluation_results",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    metrics_name TEXT NOT NULL,\n    metric_value FLOAT NOT NULL\n);\n\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT NOT NULL,\n    evaluation_date DATE NOT NULL,\n    evaluation_result TEXT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_id FROM model_metrics",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT id, model_name FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_result FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT evaluation_id, model_id FROM model_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_id, evaluation_accuracy FROM model_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_tracking;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT tracking_date, tracking_metric FROM model_tracking;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT tracking_id, model_id FROM model_tracking;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, performance_metric, evaluation_result FROM model_performance_metrics WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_performance_metrics WHERE performance_metric = 'accuracy';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT evaluation_loss FROM model_evaluations WHERE evaluation_accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_evaluations WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_id, tracking_metric, tracking_value FROM model_tracking WHERE tracking_value < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_performance_metrics WHERE model_name LIKE 'model%';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT MAX(evaluation_accuracy) AS max_accuracy FROM model_evaluations;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(evaluation_accuracy) AS avg_accuracy FROM model_evaluations WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_models FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT MIN(tracking_value) AS min_tracking_value FROM model_tracking;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(evaluation_accuracy) AS avg_accuracy FROM model_performance_metrics JOIN model_evaluations ON model_performance_metrics.id = model_evaluations.model_id GROUP BY model_name HAVING avg_accuracy > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, tracking_metric, AVG(tracking_value) AS avg_tracking_value FROM model_performance_metrics JOIN model_tracking ON model_performance_metrics.id = model_tracking.model_id GROUP BY model_name, tracking_metric HAVING avg_tracking_value > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_performance_metrics WHERE model_name='Linear Regression';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, performance_metric FROM model_performance_metrics WHERE evaluation_result > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, me.evaluation_accuracy FROM model_performance_metrics mpm JOIN model_evaluations me ON mpm.id = me.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(evaluation_accuracy) AS avg_accuracy FROM model_performance_metrics mpm JOIN model_evaluations me ON mpm.id = me.model_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_tracking WHERE tracking_metric LIKE '%loss%';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, tracking_value FROM model_tracking mt JOIN model_performance_metrics mpm ON mt.model_id = mpm.id WHERE tracking_metric='accuracy';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT model_name FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT COUNT(tracking_id) AS total_trackings, AVG(tracking_value) AS avg_value FROM model_tracking GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT t.model_id, t.tracking_date, COUNT(t.tracking_metric) AS metric_count FROM model_tracking t GROUP BY t.model_id, t.tracking_date HAVING metric_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_evaluations WHERE evaluation_accuracy = (SELECT MAX(evaluation_accuracy) FROM model_evaluations);",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, COUNT(*) AS evaluations_count FROM model_performance_metrics mpm JOIN model_evaluations me ON mpm.id = me.model_id GROUP BY model_name HAVING evaluations_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date FROM model_evaluations WHERE evaluation_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, SUM(tracking_value) AS total_tracking_value FROM model_tracking mt JOIN model_performance_metrics mpm ON mt.model_id = mpm.id GROUP BY model_name HAVING total_tracking_value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(evaluation_accuracy) AS avg_accuracy FROM model_performance_metrics mpm JOIN model_evaluations me ON mpm.id = me.model_id GROUP BY model_name HAVING avg_accuracy < 0.7;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_evaluations WHERE evaluation_id IN (SELECT evaluation_id FROM model_evaluations WHERE evaluation_accuracy < 0.5);",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, MAX(tracking_value) AS max_value FROM model_tracking mt JOIN model_performance_metrics mpm ON mt.model_id = mpm.id GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(evaluation_accuracy) AS avg_accuracy FROM model_performance_metrics mpm JOIN model_evaluations me ON mpm.id = me.model_id WHERE evaluation_accuracy IS NOT NULL GROUP BY model_name HAVING avg_accuracy > 0.6;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, me.evaluation_accuracy, mt.tracking_value FROM model_performance_metrics mpm JOIN model_evaluations me ON mpm.id = me.model_id JOIN model_tracking mt ON mpm.id = mt.model_id WHERE me.evaluation_accuracy > 0.7 AND mt.tracking_value < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, MAX(tracking_value) AS max_value FROM model_tracking mt JOIN model_performance_metrics mpm ON mt.model_id = mpm.id GROUP BY model_name HAVING max_value > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    performance_metric VARCHAR(50),\n    evaluation_result FLOAT\n)\n\nCREATE TABLE model_evaluations (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    evaluation_accuracy FLOAT,\n    evaluation_loss FLOAT\n)\n\nCREATE TABLE model_tracking (\n    tracking_id INT PRIMARY KEY,\n    model_id INT,\n    tracking_date DATE,\n    tracking_metric VARCHAR(50),\n    tracking_value FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, tracking_date, tracking_value FROM model_tracking mt JOIN model_performance_metrics mpm ON mt.model_id = mpm.id WHERE tracking_value > (SELECT AVG(tracking_value) FROM model_tracking);",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date FROM model_performance_metrics WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_id, precision, recall FROM evaluation_results WHERE recall > precision;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM validation_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_id, metric_name, metric_value FROM validation_metrics WHERE metric_name = 'accuracy';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model_training_history;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_id, date_trained, training_loss, validation_loss FROM model_training_history WHERE training_loss < validation_loss;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, precision, recall FROM model_performance_metrics INNER JOIN evaluation_results ON model_performance_metrics.id = evaluation_results.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, metric_name, metric_value FROM model_performance_metrics INNER JOIN validation_metrics ON model_performance_metrics.id = validation_metrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, date_trained, training_loss, validation_loss FROM model_performance_metrics INNER JOIN model_training_history ON model_performance_metrics.id = model_training_history.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, er.evaluation_date, vm.metric_name, vm.metric_value FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id INNER JOIN validation_metrics vm ON mpm.id = vm.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, mpm.evaluation_date, mpm.accuracy, er.precision, er.recall FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, mpm.evaluation_date, mpm.accuracy, mth.date_trained, mth.training_loss, mth.validation_loss FROM model_performance_metrics mpm INNER JOIN model_training_history mth ON mpm.id = mth.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, er.evaluation_date, er.precision, er.recall, vm.metric_name, vm.metric_value, mth.date_trained, mth.training_loss, mth.validation_loss FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id INNER JOIN validation_metrics vm ON mpm.id = vm.model_id INNER JOIN model_training_history mth ON mpm.id = mth.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, mpm.evaluation_date, mpm.accuracy, er.precision, er.recall, vm.metric_name, vm.metric_value, mth.date_trained, mth.training_loss, mth.validation_loss FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id INNER JOIN validation_metrics vm ON mpm.id = vm.model_id INNER JOIN model_training_history mth ON mpm.id = mth.model_id WHERE mpm.accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, er.evaluation_date, er.precision, er.recall, vm.metric_name, vm.metric_value, mth.date_trained, mth.training_loss, mth.validation_loss FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id INNER JOIN validation_metrics vm ON mpm.id = vm.model_id INNER JOIN model_training_history mth ON mpm.id = mth.model_id WHERE er.recall > er.precision;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, mpm.evaluation_date, mpm.accuracy, er.precision, er.recall, vm.metric_name, vm.metric_value, mth.date_trained, mth.training_loss, mth.validation_loss FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id INNER JOIN validation_metrics vm ON mpm.id = vm.model_id INNER JOIN model_training_history mth ON mpm.id = mth.model_id WHERE mth.training_loss < mth.validation_loss;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT mpm.model_name, mpm.evaluation_date, mpm.accuracy, er.precision, er.recall, vm.metric_name, vm.metric_value, mth.date_trained, mth.training_loss, mth.validation_loss FROM model_performance_metrics mpm INNER JOIN evaluation_results er ON mpm.id = er.model_id INNER JOIN validation_metrics vm ON mpm.id = vm.model_id INNER JOIN model_training_history mth ON mpm.id = mth.model_id WHERE vm.metric_name = 'accuracy';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics WHERE evaluation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) AS avg_accuracy FROM model_performance_metrics GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, COUNT(*) AS num_evaluations FROM model_performance_metrics GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT m.model_name, e.precision, e.recall FROM evaluation_results e INNER JOIN model_performance_metrics m ON e.model_id = m.id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, metric_name, metric_value FROM model_performance_metrics m INNER JOIN validation_metrics v ON m.id = v.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, date_trained, training_loss, validation_loss FROM model_performance_metrics m INNER JOIN model_training_history h ON m.id = h.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT m.model_name, AVG(h.training_loss) AS avg_training_loss FROM model_performance_metrics m INNER JOIN model_training_history h ON m.id = h.model_id GROUP BY m.model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT m.model_name, v.metric_name, MAX(v.metric_value) AS max_metric_value FROM model_performance_metrics m INNER JOIN validation_metrics v ON m.id = v.model_id GROUP BY m.model_name, v.metric_name;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics UNION ALL SELECT model_name, evaluation_date, accuracy FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics UNION SELECT model_name, evaluation_date, precision AS accuracy FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT model_name FROM model_performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics WHERE model_name LIKE 'Model%';",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics WHERE accuracy BETWEEN 0.7 AND 0.9;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics ORDER BY model_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics ORDER BY accuracy DESC;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, accuracy FROM model_performance_metrics OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE model_performance_metrics (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    evaluation_date DATE,\n    accuracy FLOAT\n)\n\nCREATE TABLE evaluation_results (\n    id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT\n)\n\nCREATE TABLE validation_metrics (\n    id INT PRIMARY KEY,\n    model_id INT,\n    metric_name VARCHAR(255),\n    metric_value FLOAT\n)\n\nCREATE TABLE model_training_history (\n    id INT PRIMARY KEY,\n    model_id INT,\n    date_trained DATE,\n    training_loss FLOAT,\n    validation_loss FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, evaluation_date, AVG(accuracy) AS avg_accuracy FROM model_performance_metrics GROUP BY model_name HAVING avg_accuracy > 0.75;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy FROM model_metrics WHERE accuracy > 0.9;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, training_loss, validation_loss FROM model_metrics WHERE validation_loss < 0.1;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM evaluation_results;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_date, precision, recall FROM evaluation_results WHERE precision > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM prediction_logs;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT evaluation_id, prediction_date, input_features FROM prediction_logs WHERE prediction_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT dataset_name, num_samples, num_features FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM model_parameters WHERE parameter_name = 'learning_rate';",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM model_parameters WHERE parameter_name = 'batch_size';",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy FROM model_metrics WHERE model_name LIKE 'Model%';",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM evaluation_results WHERE evaluation_date <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_id, precision, recall FROM evaluation_results WHERE precision > recall;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, training_loss, validation_loss FROM model_metrics WHERE training_loss < 0.05 AND validation_loss < 0.1;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM prediction_logs WHERE predicted_label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM data_statistics WHERE num_samples > 1000;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM model_parameters WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy FROM model_metrics ORDER BY accuracy DESC;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy FROM model_metrics ORDER BY accuracy ASC;",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_name, training_loss, validation_loss, accuracy FROM model_metrics WHERE accuracy > 0.9",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM model_metrics ORDER BY model_id DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_name, training_loss, validation_loss, accuracy FROM model_metrics WHERE validation_loss < 0.05 AND accuracy > 0.8",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM evaluation_results WHERE precision > 0.7",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_date, precision, recall, f1_score FROM evaluation_results WHERE model_id = 1",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM prediction_logs WHERE prediction_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT prediction_date, COUNT(*) AS num_predictions FROM prediction_logs GROUP BY prediction_date",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_name, training_loss, validation_loss, accuracy FROM model_metrics WHERE model_name LIKE 'model%'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM data_statistics WHERE num_samples > 10000",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT dataset_name, num_samples, num_features, unique_labels FROM data_statistics WHERE dataset_name = 'cifar10'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM model_parameters WHERE model_id = 3",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT * FROM model_parameters WHERE parameter_value->>'learning_rate' = '0.01'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, training_loss, validation_loss FROM model_metrics WHERE model_id IN (SELECT model_id FROM evaluation_results WHERE precision > 0.8)",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT prediction_date, input_features, predicted_label, actual_label FROM prediction_logs WHERE log_id = 10",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_name, training_loss, validation_loss, accuracy FROM model_metrics JOIN evaluation_results ON model_metrics.model_id = evaluation_results.model_id WHERE accuracy > 0.9",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT data_statistics.dataset_name, COUNT(*) AS num_models FROM model_metrics JOIN data_statistics ON model_metrics.model_id = model_parameters.model_id GROUP BY data_statistics.dataset_name",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT evaluation_date, AVG(precision) AS avg_precision FROM evaluation_results GROUP BY evaluation_date HAVING AVG(precision) > 0.7",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, parameter_name, parameter_value FROM model_metrics JOIN model_parameters ON model_metrics.model_id = model_parameters.model_id WHERE parameter_name = 'batch_size'",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_name, training_loss, validation_loss, accuracy FROM model_metrics WHERE training_loss < validation_loss",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT DISTINCT dataset_name FROM data_statistics",
  "### TABLEDATA\n\nCREATE TABLE model_metrics (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255),\n    training_loss FLOAT,\n    validation_loss FLOAT,\n    accuracy FLOAT\n);\n\nCREATE TABLE evaluation_results (\n    evaluation_id INT PRIMARY KEY,\n    model_id INT,\n    evaluation_date DATE,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\nCREATE TABLE prediction_logs (\n    log_id INT PRIMARY KEY,\n    evaluation_id INT,\n    prediction_date DATE,\n    input_features JSON,\n    predicted_label VARCHAR(50),\n    actual_label VARCHAR(50)\n);\n\nCREATE TABLE data_statistics (\n    data_id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    num_samples INT,\n    num_features INT,\n    unique_labels JSON\n);\n\nCREATE TABLE model_parameters (\n    parameter_id INT PRIMARY KEY,\n    model_id INT,\n    parameter_name VARCHAR(50),\n    parameter_value JSON\n);\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM model_parameters WHERE parameter_value->>'optimizer' = 'adam'"
]