[
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name FROM machine_learning_models WHERE model_type = 'classification';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM machine_learning_models WHERE trained_on > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(accuracy) FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM machine_learning_models ORDER BY accuracy DESC;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_type, COUNT(*) FROM machine_learning_models GROUP BY model_type;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) FROM machine_learning_models GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_type, MAX(accuracy) FROM machine_learning_models GROUP BY model_type;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM machine_learning_models WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, trained_on FROM machine_learning_models WHERE model_type = 'regression';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, trained_on FROM machine_learning_models ORDER BY trained_on DESC;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_type FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, accuracy, trained_on FROM machine_learning_models WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, trained_on, accuracy FROM machine_learning_models WHERE accuracy BETWEEN 0.7 AND 0.9;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, trained_on FROM machine_learning_models WHERE accuracy IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, trained_on FROM machine_learning_models WHERE accuracy IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, model_type, trained_on, accuracy FROM machine_learning_models ORDER BY trained_on ASC;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, accuracy FROM machine_learning_models WHERE model_type = 'Regression';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models WHERE accuracy < 0.5 ORDER BY trained_on DESC;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models WHERE model_type = 'Classification' AND accuracy > 0.9 ORDER BY trained_on ASC;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS avg_accuracy, COUNT(*) AS num_models FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on, accuracy FROM machine_learning_models WHERE trained_on BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_type FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_type, COUNT(*) AS num_models FROM machine_learning_models GROUP BY model_type;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_name, MAX(accuracy) AS max_accuracy FROM machine_learning_models;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on, accuracy FROM machine_learning_models WHERE accuracy = (SELECT MAX(accuracy) FROM machine_learning_models);",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, AVG(accuracy) AS avg_accuracy FROM machine_learning_models GROUP BY model_id HAVING AVG(accuracy) > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models WHERE model_type LIKE '%ion';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models WHERE model_name LIKE '%model%';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models UNION SELECT model_id, model_name, trained_on FROM machine_learning_models WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on FROM machine_learning_models WHERE model_type = 'Regression' OR model_type = 'Classification';",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on, accuracy FROM machine_learning_models ORDER BY accuracy DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on, accuracy FROM machine_learning_models ORDER BY trained_on ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on, accuracy FROM machine_learning_models OFFSET 5 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, trained_on, accuracy FROM machine_learning_models WHERE model_name IS NOT NULL AND accuracy IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE machine_learning_models (\n   model_id INT PRIMARY KEY,\n   model_name TEXT,\n   model_type TEXT,\n   trained_on TIMESTAMP,\n   accuracy FLOAT\n);\n\n### STATEMENT\n\nSELECT model_id, model_type, trained_on, accuracy FROM machine_learning_models GROUP BY model_type HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, model_name FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, model_description, created_at FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT config_id, model_id, config_name FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT config_id, config_name, config_value FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, config_name, created_at FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, config_value, updated_at FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, config_name, config_value FROM model_configuration WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, config_name, config_value FROM model_configuration WHERE updated_at < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, config_name, config_value FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id WHERE config_name = 'param1';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, config_value FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id WHERE config_name = 'param2';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, config_name, created_at FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id WHERE model_name LIKE '%model%';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, config_name, updated_at FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id WHERE config_value ->> 'param3' = 'value3';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(model_version) AS avg_version FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, COUNT(config_id) AS num_configs FROM model_configuration GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, MAX(model_version) AS max_version FROM model_metadata GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_id, MIN(created_at) AS earliest_create_date FROM model_metadata GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, COUNT(config_id) AS num_configs FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, MAX(model_version) AS max_version FROM model_metadata GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_version FROM model_metadata WHERE model_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT config_name, config_value FROM model_configuration WHERE model_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, model_version FROM model_metadata WHERE model_id = '123e4567-e89b-12d3-a456-426614174001' AND created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, created_at FROM model_metadata WHERE model_version > 2;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT config_name, config_value FROM model_configuration WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, updated_at FROM model_metadata ORDER BY created_at DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, model_version FROM model_metadata ORDER BY model_version ASC;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, model_version, updated_at FROM model_metadata INNER JOIN model_configuration ON model_metadata.model_id = model_configuration.model_id WHERE model_configuration.config_value -> 'key' = 'value';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, COUNT(*) FROM model_metadata GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(model_version) FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, SUM(model_version) FROM model_metadata GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(model_version) FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(created_at) FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, model_version FROM model_metadata WHERE model_name LIKE '%test%';",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, model_version FROM model_metadata WHERE model_version IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, updated_at FROM model_metadata WHERE updated_at IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_name FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, model_description, model_version FROM model_metadata WHERE model_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE model_metadata (\n    model_id UUID PRIMARY KEY,\n    model_name TEXT,\n    model_description TEXT,\n    model_version INT,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n\nCREATE TABLE model_configuration (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_metadata(model_id),\n    config_name TEXT,\n    config_value JSONB,\n    created_at TIMESTAMP,\n    updated_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, EXTRACT(YEAR FROM created_at) AS year FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_type FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, model_version FROM MachineLearningModels WHERE model_type = 'classification';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ModelConfigurations;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT config_name, config_value FROM ModelConfigurations WHERE model_id = '1e6d60db-2358-4df2-b1fc-70f2f0e0376a';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM TrainingLogs;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT log_text, log_timestamp FROM TrainingLogs WHERE model_id = '1e6d60db-2358-4df2-b1fc-70f2f0e0376a';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_type, created_at FROM MachineLearningModels WHERE model_version > 1;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_version FROM MachineLearningModels WHERE created_at BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_version FROM MachineLearningModels ORDER BY model_version DESC;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_type FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(model_version) FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(created_at) FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(created_at) FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(model_version) FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_type, log_text FROM MachineLearningModels JOIN TrainingLogs ON MachineLearningModels.model_id = TrainingLogs.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModels WHERE model_id IN (SELECT model_id FROM ModelConfigurations WHERE config_name = 'learning_rate');",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, config_name FROM MachineLearningModels JOIN ModelConfigurations ON MachineLearningModels.model_id = ModelConfigurations.model_id WHERE config_value->>'optimizer' = 'adam';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*), model_type FROM MachineLearningModels GROUP BY model_type HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_type FROM MachineLearningModels WHERE model_version > 1;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, created_at FROM MachineLearningModels WHERE model_type = 'classification';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, config_value FROM ModelConfigurations WHERE config_name = 'hyperparameters';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_name, tc.log_text FROM MachineLearningModels ml JOIN TrainingLogs tc ON ml.model_id = tc.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_type, COUNT(tc.log_id) FROM MachineLearningModels ml LEFT JOIN TrainingLogs tc ON ml.model_id = tc.model_id GROUP BY ml.model_type;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModels WHERE model_id IN (SELECT model_id FROM TrainingLogs WHERE log_timestamp >= '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_name, mc.config_name FROM MachineLearningModels ml INNER JOIN ModelConfigurations mc ON ml.model_id = mc.model_id WHERE mc.config_value ->> 'learning_rate' = '0.001';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_name, ml.model_type, tc.log_text FROM MachineLearningModels ml LEFT JOIN TrainingLogs tc ON ml.model_id = tc.model_id WHERE tc.log_timestamp >= '2022-01-01' AND tc.log_text LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_version, DATE_TRUNC('hour', created_at) AS hour_created FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_id, mc.config_name, mc.config_value->'batch_size' AS batch_size FROM MachineLearningModels ml JOIN ModelConfigurations mc ON ml.model_id = mc.model_id WHERE mc.config_value @> '{",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\n'optimizer",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\n: ",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\n'adam'",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\n'}';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, COUNT(log_id) AS num_logs FROM MachineLearningModels LEFT JOIN TrainingLogs ON MachineLearningModels.model_id = TrainingLogs.model_id GROUP BY model_id, model_name HAVING num_logs > 10;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(EXTRACT(EPOCH FROM log_timestamp)) AS avg_epoch FROM MachineLearningModels JOIN TrainingLogs ON MachineLearningModels.model_id = TrainingLogs.model_id GROUP BY model_name HAVING AVG(EXTRACT(EPOCH FROM log_timestamp)) > 3600;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_name, mc.config_name, mc.config_value->>'learning_rate' AS learning_rate FROM MachineLearningModels ml JOIN ModelConfigurations mc ON ml.model_id = mc.model_id WHERE mc.config_value->>'learning_rate'::numeric > 0.001;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_version, TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') AS formatted_created_at FROM MachineLearningModels;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_name, tc.log_text, AGE(tc.log_timestamp, ml.created_at) AS training_duration FROM MachineLearningModels ml JOIN TrainingLogs tc ON ml.model_id = tc.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT ml.model_type, COUNT(tc.log_id) AS num_logs FROM MachineLearningModels ml LEFT JOIN TrainingLogs tc ON ml.model_id = tc.model_id GROUP BY ml.model_type ORDER BY num_logs DESC;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, log_text, log_timestamp FROM MachineLearningModels ml JOIN TrainingLogs tc ON ml.model_id = tc.model_id WHERE log_timestamp >= '2022-01-01'::TIMESTAMP;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, model_version, jsonb_pretty(config_value) AS pretty_config FROM MachineLearningModels ml JOIN ModelConfigurations mc ON ml.model_id = mc.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(EXTRACT(EPOCH FROM AGE(log_timestamp, created_at))) AS avg_training_time FROM MachineLearningModels ml JOIN TrainingLogs tc ON ml.model_id = tc.model_id GROUP BY model_name HAVING AVG(EXTRACT(EPOCH FROM AGE(log_timestamp, created_at))) > 3600;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModels (\n    model_id UUID PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    model_type VARCHAR(50) NOT NULL,\n    model_version INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\nCREATE TABLE ModelConfigurations (\n    config_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    config_name VARCHAR(100) NOT NULL,\n    config_value JSONB\n);\n\nCREATE TABLE TrainingLogs (\n    log_id UUID PRIMARY KEY,\n    model_id UUID REFERENCES MachineLearningModels(model_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT model_name, MAX(EXTRACT(EPOCH FROM AGE(log_timestamp, created_at))) AS max_training_time FROM MachineLearningModels ml JOIN TrainingLogs tc ON ml.model_id = tc.model_id GROUP BY model_name HAVING MAX(EXTRACT(EPOCH FROM AGE(log_timestamp, created_at))) > 3600;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, version FROM model_configuration WHERE id = 'some_id';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT description, trained_on FROM model_metadata WHERE model_id = 'some_model_id';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM dataset_information;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT dataset_name, uploaded_at FROM dataset_information WHERE id = 'some_id';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_results;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT evaluation_metrics, completed_at FROM experiment_results WHERE experiment_id = 'some_experiment_id';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, version, created_at FROM model_configuration WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT description, trained_on, accuracy FROM model_metadata WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT dataset_name, uploaded_at FROM dataset_information WHERE uploaded_at >= '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT evaluation_metrics, completed_at FROM experiment_results WHERE completed_at IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(version) FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(uploaded_at) FROM dataset_information;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(version) FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT model_name FROM model_configuration;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_metadata ORDER BY trained_on DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) FROM model_metadata GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_configuration WHERE version > 1;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, version FROM model_configuration WHERE created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, description, trained_on FROM model_metadata WHERE accuracy > 0.85;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM model_configuration JOIN model_metadata ON model_configuration.id = model_metadata.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id FROM dataset_information WHERE dataset_name LIKE '%mnist%';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM experiment_results WHERE completed_at BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, description FROM model_configuration JOIN model_metadata ON model_configuration.id = model_metadata.model_id;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS avg_accuracy FROM model_metadata;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, MAX(version) AS latest_version FROM model_configuration GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, dataset_name FROM dataset_information WHERE JSONB_ARRAY_LENGTH(columns) > 5;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, experiment_id, completed_at FROM experiment_results ORDER BY completed_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, COUNT(*) AS num_models FROM model_configuration GROUP BY model_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) AS avg_accuracy FROM model_configuration JOIN model_metadata ON model_configuration.id = model_metadata.model_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, model_id, JSONB_OBJECT_KEYS(evaluation_metrics) AS evaluation_metrics_keys FROM experiment_results;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, model_name, trained_on FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.id WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, model_id, JSONB_OBJECT_KEYS(evaluation_metrics) AS evaluation_metrics_keys FROM experiment_results WHERE JSONB_ARRAY_LENGTH(evaluation_metrics_keys) > 2;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) AS avg_accuracy FROM model_metadata JOIN model_configuration ON model_metadata.model_id = model_configuration.id GROUP BY model_name HAVING AVG(accuracy) > 0.85;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT model_name, description FROM model_configuration JOIN model_metadata ON model_configuration.id = model_metadata.model_id WHERE trained_on <= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT id, description, trained_on, accuracy FROM model_metadata WHERE trained_on > model_configuration.created_at;",
  "### TABLEDATA\n\nCREATE TABLE model_configuration (\n    id UUID PRIMARY KEY,\n    model_name VARCHAR(255),\n    version INT,\n    hyperparameters JSONB,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE model_metadata (\n    id UUID PRIMARY KEY,\n    model_id UUID REFERENCES model_configuration(id),\n    description TEXT,\n    trained_on TIMESTAMP,\n    accuracy FLOAT\n);\n\n\nCREATE TABLE dataset_information (\n    id UUID PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    columns JSONB,\n    uploaded_at TIMESTAMP\n);\n\n\nCREATE TABLE experiment_results (\n    id UUID PRIMARY KEY,\n    experiment_id UUID REFERENCES model_metadata(id),\n    evaluation_metrics JSONB,\n    completed_at TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT experiment_id, completed_at FROM experiment_results WHERE JSONB_ARRAY_LENGTH(evaluation_metrics) > 3;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModel;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, hyperparameters FROM MachineLearningModel WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_id, training_data_path FROM MachineLearningModel WHERE model_name = 'Logistic Regression';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelMetrics;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT accuracy, precision, recall FROM ModelMetrics WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelRuns;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_id, start_time, end_time FROM ModelRuns WHERE status = 'complete';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelParameters;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_id, param_name, param_value FROM ModelParameters WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelConfigurations;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_id, config_name, config_details FROM ModelConfigurations WHERE config_name LIKE '%default%';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, hyperparameters FROM MachineLearningModel WHERE model_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT metric_id, model_id, accuracy FROM ModelMetrics WHERE accuracy > 0.85;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT run_id, model_id, status FROM ModelRuns WHERE status = 'running';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT param_id, model_id, param_name, param_value FROM ModelParameters WHERE model_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT config_id, model_id, config_name FROM ModelConfigurations WHERE config_name = 'production';",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModel ORDER BY model_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelMetrics ORDER BY accuracy DESC;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelRuns ORDER BY start_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelParameters ORDER BY model_id, param_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelConfigurations ORDER BY model_id, config_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModel;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM ModelMetrics WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, hyperparameters FROM MachineLearningModel WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT AVG(recall) AS avg_recall FROM ModelMetrics;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_details FROM MachineLearningModel JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, param_name, param_value FROM MachineLearningModel JOIN ModelParameters ON MachineLearningModel.model_id = ModelParameters.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, start_time, end_time, status FROM MachineLearningModel JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, precision, recall, f1_score FROM MachineLearningModel JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status FROM MachineLearningModel JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, param_name, param_value, accuracy, precision, recall, f1_score FROM MachineLearningModel JOIN ModelParameters ON MachineLearningModel.model_id = ModelParameters.model_id JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status, accuracy, precision, recall, f1_score FROM MachineLearningModel JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status, accuracy, precision, recall, f1_score FROM (MachineLearningModel JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id) JOIN (ModelRuns JOIN ModelMetrics ON ModelRuns.model_id = ModelMetrics.model_id) ON MachineLearningModel.model_id = ModelRuns.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status, accuracy, precision, recall, f1_score FROM MachineLearningModel LEFT JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id LEFT JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id LEFT JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status, accuracy, precision, recall, f1_score FROM MachineLearningModel RIGHT JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id RIGHT JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id RIGHT JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status, accuracy, precision, recall, f1_score FROM MachineLearningModel FULL JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id FULL JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id FULL JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, config_name, config_details, start_time, end_time, status, accuracy, precision, recall, f1_score FROM MachineLearningModel INNER JOIN ModelConfigurations ON MachineLearningModel.model_id = ModelConfigurations.model_id INNER JOIN ModelRuns ON MachineLearningModel.model_id = ModelRuns.model_id INNER JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModel WHERE model_id IN (SELECT model_id FROM ModelMetrics WHERE accuracy > 0.8);",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM MachineLearningModel WHERE model_id NOT IN (SELECT model_id FROM ModelMetrics WHERE accuracy <= 0.8);",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) AS avg_accuracy FROM MachineLearningModel JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, MAX(accuracy) AS max_accuracy FROM MachineLearningModel JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id GROUP BY model_name;",
  "### TABLEDATA\n\nCREATE TABLE MachineLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    hyperparameters JSONB,\n    training_data_path VARCHAR(255),\n    model_artifact BYTEA\n);\n\n\nCREATE TABLE ModelMetrics (\n    metric_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    accuracy FLOAT,\n    precision FLOAT,\n    recall FLOAT,\n    f1_score FLOAT\n);\n\n\nCREATE TABLE ModelRuns (\n    run_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    start_time TIMESTAMP,\n    end_time TIMESTAMP,\n    status VARCHAR(50)\n);\n\n\nCREATE TABLE ModelParameters (\n    param_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    param_name VARCHAR(50) NOT NULL,\n    param_value JSONB\n);\n\n\nCREATE TABLE ModelConfigurations (\n    config_id INT PRIMARY KEY,\n    model_id INT REFERENCES MachineLearningModel(model_id),\n    config_name VARCHAR(50) NOT NULL,\n    config_details JSONB\n);\n\n### STATEMENT\n\nSELECT model_name, MIN(accuracy) AS min_accuracy FROM MachineLearningModel JOIN ModelMetrics ON MachineLearningModel.model_id = ModelMetrics.model_id GROUP BY model_name;"
]