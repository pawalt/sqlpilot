<t>CREATE TABLE Machine_Learning_Models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    algorithm VARCHAR(50),
    accuracy FLOAT
);</t><stat>DELETE FROM Machine_Learning_Models WHERE model_id = 1;</stat><divider><t>CREATE TABLE Machine_Learning_Models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    algorithm VARCHAR(50),
    accuracy FLOAT
);</t><stat>delete from machine_learning_models where model_id = 1;</stat><divider><t>CREATE TABLE Machine_Learning_Models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    algorithm VARCHAR(50),
    accuracy FLOAT
);</t><stat>DELETE FROM Machine_Learning_Models WHERE algorithm = 'SVM';</stat><divider><t>CREATE TABLE Machine_Learning_Models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    algorithm VARCHAR(50),
    accuracy FLOAT
);</t><stat>delete from machine_learning_models where algorithm = 'svm';</stat><divider><t>CREATE TABLE Machine_Learning_Models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    algorithm VARCHAR(50),
    accuracy FLOAT
);</t><stat>DELETE FROM Machine_Learning_Models WHERE accuracy < 0.8;</stat><divider><t>CREATE TABLE Machine_Learning_Models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    algorithm VARCHAR(50),
    accuracy FLOAT
);</t><stat>delete from machine_learning_models where accuracy < 0.8;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);

CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);</t><stat>DELETE FROM models WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);

CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);</t><stat>delete from models where id = 1;</stat><divider><t>CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);

CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);</t><stat>DELETE FROM models WHERE id = 1;</stat><divider><t>CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);

CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);</t><stat>delete from models where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);

CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);</t><stat>DELETE FROM datasets WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);

CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);</t><stat>delete from datasets where id = 2;</stat><divider><t>CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);

CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);</t><stat>DELETE FROM datasets WHERE id = 2;</stat><divider><t>CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);

CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);</t><stat>delete from datasets where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);

CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);</t><stat>DELETE FROM models WHERE algorithm = 'svm';</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);

CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);</t><stat>delete from models where algorithm = 'svm';</stat><divider><t>CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);

CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);</t><stat>DELETE FROM models WHERE algorithm = 'svm';</stat><divider><t>CREATE TABLE datasets (id INT PRIMARY KEY, dataset_name VARCHAR(50), num_records INT, num_features INT);

CREATE TABLE models (id INT PRIMARY KEY, model_name VARCHAR(50), algorithm VARCHAR(50), accuracy FLOAT);</t><stat>delete from models where algorithm = 'svm';</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>DELETE FROM model_training_data WHERE id = 1;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>delete from model_training_data where id = 1;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>DELETE FROM model_training_data WHERE id = 1;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>delete from model_training_data where id = 1;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>DELETE FROM model_training_data WHERE id = 1;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>delete from model_training_data where id = 1;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>DELETE FROM model_training_data WHERE id = 1;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>delete from model_training_data where id = 1;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>DELETE FROM model_training_data WHERE id = 1;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>delete from model_training_data where id = 1;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>DELETE FROM model_training_data WHERE id = 1;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>delete from model_training_data where id = 1;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>DELETE FROM model_results WHERE id = 3;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>delete from model_results where id = 3;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>DELETE FROM model_results WHERE id = 3;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>delete from model_results where id = 3;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>DELETE FROM model_results WHERE id = 3;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>delete from model_results where id = 3;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>DELETE FROM model_results WHERE id = 3;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>delete from model_results where id = 3;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>DELETE FROM model_results WHERE id = 3;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>delete from model_results where id = 3;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>DELETE FROM model_results WHERE id = 3;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>delete from model_results where id = 3;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>DELETE FROM model_evaluation WHERE id = 2;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>delete from model_evaluation where id = 2;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>DELETE FROM model_evaluation WHERE id = 2;</stat><divider><t>CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>delete from model_evaluation where id = 2;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>DELETE FROM model_evaluation WHERE id = 2;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );</t><stat>delete from model_evaluation where id = 2;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>DELETE FROM model_evaluation WHERE id = 2;</stat><divider><t>CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>delete from model_evaluation where id = 2;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>DELETE FROM model_evaluation WHERE id = 2;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );</t><stat>delete from model_evaluation where id = 2;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>DELETE FROM model_evaluation WHERE id = 2;</stat><divider><t>CREATE TABLE model_evaluation ( id INT PRIMARY KEY, evaluation JSONB NOT NULL );

CREATE TABLE model_results ( id INT PRIMARY KEY, result JSONB NOT NULL );

CREATE TABLE model_training_data ( id INT PRIMARY KEY, data JSONB NOT NULL );</t><stat>delete from model_evaluation where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM features WHERE id = 1;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from features where id = 1;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM models WHERE id = 2;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from models where id = 2;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>DELETE FROM training_data WHERE label = 0;</stat><divider><t>CREATE TABLE predictions (id INT PRIMARY KEY, data_id INT, prediction FLOAT, created_at TIMESTAMP)

CREATE TABLE training_data (id INT PRIMARY KEY, data_id INT, label INT, features FLOAT[], created_at TIMESTAMP)

CREATE TABLE models (id INT PRIMARY KEY, model_name STRING, accuracy FLOAT, parameters JSON, created_at TIMESTAMP)

CREATE TABLE features (id INT PRIMARY KEY, name STRING, data FLOAT[], created_at TIMESTAMP)</t><stat>delete from training_data where label = 0;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM predictions WHERE prediction_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from predictions where prediction_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM models WHERE model_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from models where model_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>DELETE FROM features WHERE feature_id = 1;</stat><divider><t>CREATE TABLE training_data (
    record_id INT PRIMARY KEY,
    dataset_id INT NOT NULL,
    feature_id INT NOT NULL,
    feature_value FLOAT NOT NULL,
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id),
    FOREIGN KEY (feature_id) REFERENCES features(feature_id)
);


CREATE TABLE predictions (
    prediction_id INT PRIMARY KEY,
    model_id INT NOT NULL,
    dataset_id INT NOT NULL,
    prediction_result FLOAT NOT NULL,
    prediction_date DATE NOT NULL,
    FOREIGN KEY (model_id) REFERENCES models(model_id),
    FOREIGN KEY (dataset_id) REFERENCES datasets(dataset_id)
);


CREATE TABLE features (
    feature_id INT PRIMARY KEY,
    feature_name VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL
);


CREATE TABLE datasets (
    dataset_id INT PRIMARY KEY,
    dataset_name VARCHAR(50) NOT NULL,
    dataset_size INT NOT NULL
);


CREATE TABLE models (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50) NOT NULL,
    algorithm VARCHAR(50) NOT NULL
);
</t><stat>delete from features where feature_id = 1;</stat>