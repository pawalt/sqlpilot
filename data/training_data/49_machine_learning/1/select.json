[
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM LabeledDataForSupervisedLearning LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, label FROM LabeledDataForSupervisedLearning WHERE feature_2 > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM LabeledDataForSupervisedLearning WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(feature_1) AS avg_feature FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, feature_2 FROM LabeledDataForSupervisedLearning WHERE label LIKE 'class%';",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(feature_2) AS min_feature FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT label FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label FROM LabeledDataForSupervisedLearning WHERE feature_1 BETWEEN 0.2 AND 0.5;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(feature_2) AS total_feature FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, feature_2, label FROM LabeledDataForSupervisedLearning ORDER BY feature_2 DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT label, COUNT(*) AS count FROM LabeledDataForSupervisedLearning GROUP BY label;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, label FROM LabeledDataForSupervisedLearning WHERE label IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(feature_1) AS max_feature FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, label FROM LabeledDataForSupervisedLearning WHERE feature_1 = (SELECT MAX(feature_1) FROM LabeledDataForSupervisedLearning);",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_2, label FROM LabeledDataForSupervisedLearning WHERE feature_2 IN (0.3, 0.6, 0.9);",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feature_1, AVG(feature_2) AS avg_feature_2 FROM LabeledDataForSupervisedLearning GROUP BY feature_1;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_2, label FROM LabeledDataForSupervisedLearning WHERE feature_2 < (SELECT AVG(feature_2) FROM LabeledDataForSupervisedLearning);",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, label FROM LabeledDataForSupervisedLearning WHERE id % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_2, label FROM LabeledDataForSupervisedLearning WHERE feature_2 BETWEEN 0.4 AND 0.6;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM LabeledDataForSupervisedLearning WHERE label='positive';",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(feature_1), MAX(feature_2) FROM LabeledDataForSupervisedLearning WHERE label='negative';",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, label FROM LabeledDataForSupervisedLearning WHERE feature_1 > 0.5 AND label='positive';",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(id) AS total_instances FROM LabeledDataForSupervisedLearning WHERE feature_1 < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM LabeledDataForSupervisedLearning ORDER BY feature_2 DESC;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT label FROM LabeledDataForSupervisedLearning WHERE feature_2 BETWEEN 0.3 AND 0.7;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, AVG(feature_1) AS avg_feature1 FROM LabeledDataForSupervisedLearning GROUP BY label HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, feature_2 FROM LabeledDataForSupervisedLearning WHERE feature_1 = feature_2;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM LabeledDataForSupervisedLearning WHERE label IN ('positive', 'negative');",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, COUNT(*) AS frequency FROM LabeledDataForSupervisedLearning GROUP BY label HAVING frequency > 3 ORDER BY frequency DESC;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature_1, label FROM LabeledDataForSupervisedLearning WHERE feature_1 < 0.5 UNION SELECT id, feature_2, label FROM LabeledDataForSupervisedLearning WHERE feature_2 > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT label, COUNT(*) AS total_instances, AVG(feature_2) AS avg_feature2 FROM LabeledDataForSupervisedLearning GROUP BY label ORDER BY total_instances DESC;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, SUM(feature_1) AS total_feature1 FROM LabeledDataForSupervisedLearning WHERE label='positive' GROUP BY id, label;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, feature_1 + feature_2 AS combined_features FROM LabeledDataForSupervisedLearning WHERE feature_1 > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, CASE WHEN feature_1 > 0.5 THEN 'high' ELSE 'low' END AS feature1_category FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, MAX(feature_1) - MIN(feature_1) AS feature1_range FROM LabeledDataForSupervisedLearning GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, COUNT(DISTINCT feature_2) AS distinct_feature2 FROM LabeledDataForSupervisedLearning GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, ROUND(feature_1, 2) AS rounded_feature1 FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, AVG(feature_1) OVER (PARTITION BY label) AS avg_feature1_per_label FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE LabeledDataForSupervisedLearning (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    label VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label, LEAD(feature_2) OVER (PARTITION BY label ORDER BY feature_1) AS next_feature2 FROM LabeledDataForSupervisedLearning;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feature1, feature2 FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label FROM labeled_data WHERE feature1 LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature1 = 'test' AND feature2 = 'data';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT label FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data ORDER BY feature1 DESC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feature1, COUNT(*) FROM labeled_data GROUP BY feature1;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT l.* FROM labeled_data l INNER JOIN metadata m ON l.id = m.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label IN ('positive', 'negative');",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature1 IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT feature1, source FROM labeled_data l LEFT JOIN metadata m ON l.id = m.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(id), MIN(id) FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label FROM labeled_data WHERE feature2 = 'example' OR label = 'negative';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, data_type FROM labeled_data l JOIN metadata m ON l.id = m.id WHERE source = 'internal';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label LIKE '_o%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label FROM labeled_data WHERE feature1 = 'example' ORDER BY id ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id = (SELECT MAX(id) FROM labeled_data);",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label='positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, feature1 FROM labeled_data WHERE feature2='value';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature1 LIKE 'pattern%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT id, label FROM labeled_data WHERE feature1='data1' AND label='positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id FROM labeled_data WHERE label='negative';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rows FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT labeled_data.id, labeled_data.feature1, metadata.data_type FROM labeled_data JOIN metadata ON labeled_data.id = metadata.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT labeled_data.id, labeled_data.feature1, metadata.data_type FROM labeled_data LEFT JOIN metadata ON labeled_data.id = metadata.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rows, MAX(id) AS max_id FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT label, COUNT(*) AS total_rows FROM labeled_data GROUP BY label;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT label, COUNT(*) AS total_rows FROM labeled_data WHERE feature1='data1' GROUP BY label;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(id), COUNT(*) AS total_rows FROM labeled_data WHERE label='positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label='positive' ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT label, COUNT(*) AS total_rows FROM labeled_data GROUP BY label HAVING COUNT(*) > 100;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label='positive' AND feature1 LIKE '%pattern%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT label FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id, COUNT(*) AS total_rows FROM labeled_data GROUP BY label;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id, MIN(id) AS min_id FROM labeled_data WHERE label='positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 VARCHAR(50),\n    feature2 VARCHAR(50),\n    label VARCHAR(50)\n);\n\n\nCREATE TABLE metadata (\n    id INT PRIMARY KEY,\n    data_type VARCHAR(50),\n    source VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rows FROM labeled_data WHERE label='negative';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT id, data FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT f.feature_name, l.label FROM features f JOIN labeled_data l ON f.data_id = l.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT m.model_name, m.accuracy FROM model m;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT l.id, f.feature_name, m.model_name FROM labeled_data l JOIN features f ON l.id = f.data_id JOIN model m ON f.data_id = m.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT id, data FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT feature_name, data FROM features WHERE data_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name FROM model WHERE accuracy > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT id, feature_name FROM features WHERE data_id IN (SELECT id FROM labeled_data WHERE label = 'negative');",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT data_id, AVG(accuracy) FROM features f JOIN model m ON f.data_id = m.id GROUP BY data_id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT id, feature_name FROM features WHERE feature_name LIKE '%word%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT MAX(accuracy) FROM model;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(accuracy) AS average_accuracy FROM model;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT l.id, AVG(m.accuracy) AS average_accuracy FROM labeled_data l JOIN features f ON l.id = f.data_id JOIN model m ON f.data_id = m.id GROUP BY l.id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, data FROM model CROSS JOIN labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT label FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label='positive'",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT data FROM labeled_data WHERE id=10",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM model WHERE accuracy > 0.7",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT feature_name FROM features WHERE data_id IN (SELECT id FROM labeled_data WHERE label='negative')",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT label, COUNT(id) as count FROM labeled_data GROUP BY label HAVING count > 5",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, MAX(accuracy) as max_accuracy FROM model",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data JOIN features ON labeled_data.id = features.data_id",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id = (SELECT MAX(id) FROM labeled_data)",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) as avg_accuracy FROM model",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data INNER JOIN features ON labeled_data.id = features.data_id",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT label, COUNT(id) as count FROM labeled_data GROUP BY label ORDER BY count DESC",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM model WHERE model_name LIKE '%model%'",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT feature_name FROM features WHERE feature_name LIKE '%important%'",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT data_id, COUNT(id) as count FROM features GROUP BY data_id HAVING count > 2",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM model WHERE accuracy BETWEEN 0.6 AND 0.8",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, AVG(accuracy) as avg_accuracy FROM model GROUP BY model_name",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT feature_name, label FROM features JOIN labeled_data ON features.data_id = labeled_data.id",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT label FROM labeled_data",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data VARCHAR(255),\n    label VARCHAR(50)\n)\n\nCREATE TABLE features (\n    id INT PRIMARY KEY,\n    feature_name VARCHAR(50),\n    data_id INT REFERENCES labeled_data(id)\n)\n\nCREATE TABLE model (\n    id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    accuracy FLOAT\n)\n\n### STATEMENT\n\nSELECT model_name, accuracy FROM model WHERE model_name IN ('Model A', 'Model B')",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, feature1, feature2 FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_id, dataset_name, description FROM datasets;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels WHERE label_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature1 > 0 AND feature2 < 10;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE username = 'JohnDoe';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_name FROM datasets WHERE dataset_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_id, label_name FROM labels;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data ORDER BY id ASC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users ORDER BY user_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_id, dataset_name FROM datasets WHERE description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels WHERE label_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature1 >= 0.5;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE user_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_name, description FROM datasets WHERE dataset_name LIKE 'test%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(feature1), MAX(feature2) FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_id, dataset_name, description FROM datasets ORDER BY dataset_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels WHERE label_name LIKE '%good%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label = 'positive' ORDER BY id DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT feature1, feature2, label FROM labeled_data WHERE feature1 > 0.5 OR feature2 < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'j%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_name, description FROM datasets WHERE dataset_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data INNER JOIN users ON labeled_data.id = users.user_id WHERE label = 'negative';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels WHERE label_name = 'spam' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT MAX(feature1) AS max_feature1 FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(feature2) AS avg_feature2 FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_name, COUNT(*) AS total_labels FROM datasets INNER JOIN labeled_data ON labeled_data.label = datasets.dataset_name GROUP BY dataset_name;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT u.username, ld.label FROM users u INNER JOIN labeled_data ld ON u.user_id = ld.id WHERE u.email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_name, COUNT(*) AS label_count FROM labels INNER JOIN labeled_data ON labels.label_name = labeled_data.label WHERE labels.label_id > 3 GROUP BY label_name;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT description FROM datasets WHERE description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT MIN(feature1) AS min_feature1, MAX(feature1) AS max_feature1 FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label, COUNT(*) AS label_count FROM labeled_data GROUP BY label HAVING label_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT dataset_name, COUNT(*) AS total_features FROM datasets INNER JOIN labeled_data ON datasets.dataset_name = labeled_data.label GROUP BY dataset_name HAVING total_features > 10;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature1 + feature2 > 1.0;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE feature2 IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT label_id, label_name FROM labels WHERE label_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    feature1 FLOAT,\n    feature2 FLOAT,\n    label VARCHAR\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE datasets (\n    dataset_id INT PRIMARY KEY,\n    dataset_name VARCHAR,\n    description TEXT\n);\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT u.username, d.dataset_name, ld.label FROM users u INNER JOIN labeled_data ld ON u.user_id = ld.id INNER JOIN datasets d ON ld.label = d.dataset_name;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT id, data FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT username, age FROM users WHERE gender = 'female';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT source_name, data_type FROM data_sources;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, label_id FROM user_labels;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT source_name FROM data_sources WHERE data_type = 'csv';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels WHERE label_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, label_id FROM user_labels WHERE user_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(id) FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT MAX(age) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM users WHERE gender = 'male';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(label_id) FROM user_labels GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT source_name, COUNT(*) FROM data_sources GROUP BY source_name;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY age ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data WHERE label = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT data FROM labeled_data WHERE label = 'negative';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, age FROM users WHERE gender = 'male';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT label_name FROM labels WHERE label_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM data_sources WHERE data_type = 'csv';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, label_id FROM user_labels WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT username, label_name FROM users INNER JOIN user_labels ON users.user_id = user_labels.user_id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT users.username, labels.label_name FROM users JOIN user_labels ON users.user_id = user_labels.user_id JOIN labels ON user_labels.label_id = labels.label_id;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM labeled_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT MIN(id) AS min_id FROM labeled_data;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age FROM users;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT label, COUNT(label) AS label_count FROM labeled_data GROUP BY label;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, gender FROM users GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, label_id FROM user_labels WHERE user_id IN (SELECT user_id FROM users WHERE age > 30);",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT count(*) FROM labeled_data WHERE label = 'positive' AND data_type = 'csv';",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(age) AS total_age FROM users GROUP BY user_id HAVING SUM(age) > 100;",
  "### TABLEDATA\n\nCREATE TABLE labeled_data (\n    id INT PRIMARY KEY,\n    data TEXT,\n    label TEXT\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    age INT,\n    gender TEXT\n);\n\n\nCREATE TABLE labels (\n    label_id INT PRIMARY KEY,\n    label_name TEXT\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name TEXT,\n    data_type TEXT\n);\n\n\nCREATE TABLE user_labels (\n    user_id INT,\n    label_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (label_id) REFERENCES labels(label_id)\n);\n\n### STATEMENT\n\nSELECT username, age, label_name FROM users JOIN user_labels ON users.user_id = user_labels.user_id JOIN labels ON user_labels.label_id = labels.label_id WHERE age >= 25;"
]