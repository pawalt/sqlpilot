[
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id > 5;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT data FROM preprocessed_data WHERE id = 10;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id FROM preprocessed_data WHERE data = 'example';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT data FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE data LIKE '%pattern%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT MIN(id) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT SUM(id) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE data IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT data FROM preprocessed_data WHERE data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, UPPER(data) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, LOWER(data) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, LENGTH(data) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, CONCAT('ID:', id, ' Data:', data) AS information FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, SUBSTR(data, 1, 5) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE id = 10;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id > 100 AND data LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM preprocessed_data WHERE data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT data FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, SUBSTRING(data, 1, 5) AS truncated_data FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, LENGTH(data) AS data_length FROM preprocessed_data WHERE id < 50;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, UPPER(data) AS uppercase_data FROM preprocessed_data WHERE id BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE id IN (1, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE data ILIKE 'pattern%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id AS identifier, data AS information FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE data REGEXP '^A.*';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id BETWEEN 10 AND 20 OR data IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, CONCAT('ID:', id, ' - ', data) AS combined_data FROM preprocessed_data WHERE id < 100;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id < 100 LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE data ~ 'pattern';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id BETWEEN 50 AND 100 AND data NOT LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    data VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, data FROM preprocessed_data WHERE id = (SELECT MAX(id) FROM preprocessed_data);",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT data FROM ModelData WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData WHERE data LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ModelLabels;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT label FROM ModelLabels WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, label FROM ModelLabels WHERE label = 'category';",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ModelLabels ORDER BY id ASC;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData WHERE id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, label FROM ModelLabels WHERE id > 5;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ModelLabels WHERE label LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT data FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT label FROM ModelLabels;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData INNER JOIN ModelLabels ON ModelData.id = ModelLabels.id;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData LEFT JOIN ModelLabels ON ModelData.id = ModelLabels.id;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData RIGHT JOIN ModelLabels ON ModelData.id = ModelLabels.id;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ModelData WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT data FROM ModelData WHERE id > 5 AND id < 10;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData WHERE data LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, label FROM ModelData JOIN ModelLabels ON ModelData.id = ModelLabels.id;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData JOIN ModelLabels ON ModelData.id = ModelLabels.id WHERE ModelData.id = 3;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT count(*) FROM ModelData WHERE data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(id) FROM ModelData;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, COUNT(*) FROM ModelLabels GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT ModelLabels.id, ModelLabels.label, COUNT(*) FROM ModelData JOIN ModelLabels ON ModelData.id = ModelLabels.id GROUP BY ModelLabels.id, ModelLabels.label;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData NATURAL JOIN ModelLabels;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData UNION SELECT id, data, label FROM ModelLabels;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData INTERSECT SELECT id, data, label FROM ModelLabels;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data, label FROM ModelData EXCEPT SELECT id, data, label FROM ModelLabels;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData ORDER BY id ASC;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData LIMIT 5 OFFSET 3;",
  "### TABLEDATA\n\nCREATE TABLE ModelData (\n    id INT PRIMARY KEY,\n    data TEXT\n);\n\nCREATE TABLE ModelLabels (\n    id INT PRIMARY KEY,\n    label TEXT\n);\n\n### STATEMENT\n\nSELECT id, data FROM ModelData WHERE id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, feature_1 FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT feature_1, target FROM preprocessed_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(feature_2) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(feature_1) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(feature_2) FROM preprocessed_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, feature_1, feature_2 FROM preprocessed_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT parameter_name, parameter_value FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT parameter_name FROM model_parameters WHERE parameter_value > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(parameter_value) FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(parameter_value) FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(parameter_value) FROM model_parameters;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT stat_name, stat_value FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT stat_name FROM data_statistics WHERE stat_value < 10.0;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(stat_value) FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(stat_value) FROM data_statistics;",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, feature_1, target FROM preprocessed_data WHERE feature_1 > 0.5 AND target = 'A'",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT feature_1, feature_2 FROM preprocessed_data WHERE feature_2 >= 0.0",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE feature_1 + feature_2 > 1.0",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, target FROM preprocessed_data WHERE id BETWEEN 10 AND 20",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(feature_1), SUM(feature_2) FROM preprocessed_data WHERE target = 'B'",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM preprocessed_data WHERE target = 'A'",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM model_parameters WHERE parameter_value > 0.7",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT parameter_name FROM model_parameters ORDER BY parameter_value DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(stat_value) FROM data_statistics WHERE stat_name = 'max_value'",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(id) FROM preprocessed_data WHERE feature_1 > 0.0",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT target FROM preprocessed_data",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT stat_name FROM data_statistics",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT param.parameter_name, data.feature_1 FROM model_parameters param JOIN preprocessed_data data ON param.parameter_value = data.feature_1",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessed_data WHERE id IN (SELECT MIN(id) FROM preprocessed_data)",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(feature_1) AS mean_feature_1, SUM(feature_2) AS total_feature_2 FROM preprocessed_data GROUP BY target",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, feature_1, feature_2 FROM preprocessed_data WHERE feature_1 IN (SELECT MAX(parameter_value) FROM model_parameters)",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT stat_name, stat_value FROM data_statistics WHERE stat_name LIKE '%_value'",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM model_parameters CROSS JOIN data_statistics",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT param.parameter_name, AVG(data.feature_1) AS avg_feature_1 FROM model_parameters param JOIN preprocessed_data data ON param.parameter_value = data.feature_2 GROUP BY param.parameter_name",
  "### TABLEDATA\n\nCREATE TABLE preprocessed_data (\n    id INT PRIMARY KEY,\n    feature_1 FLOAT,\n    feature_2 FLOAT,\n    target VARCHAR\n);\n\nCREATE TABLE model_parameters (\n    parameter_name VARCHAR PRIMARY KEY,\n    parameter_value FLOAT\n);\n\nCREATE TABLE data_statistics (\n    stat_name VARCHAR PRIMARY KEY,\n    stat_value FLOAT\n);\n\n### STATEMENT\n\nSELECT id, feature_1, feature_2, target FROM preprocessed_data WHERE target LIKE 'A%' ORDER BY feature_1 ASC",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Preprocessed_Data;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT id, data_text FROM Preprocessed_Data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT processed_data FROM Preprocessed_Data WHERE data_text LIKE '%example%';",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM Model_Parameters WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Training_Logs WHERE model_id = 1 ORDER BY training_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, validation_result FROM Validation_Data WHERE model_id = 3 AND validation_result = 'passed';",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT id, data_text, processed_data FROM Preprocessed_Data WHERE id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Model_Parameters WHERE parameter_value > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Training_Logs WHERE model_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT validation_id, model_id FROM Validation_Data WHERE validation_result IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Preprocessed_Data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(parameter_value) AS max_value FROM Model_Parameters GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(parameter_value) AS avg_value FROM Model_Parameters;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT model_id FROM Training_Logs;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Validation_Data WHERE validation_result LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM Preprocessed_Data;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(parameter_value) AS total_value FROM Model_Parameters;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT id, data_text FROM Preprocessed_Data WHERE data_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, COUNT(*) AS total_logs FROM Training_Logs GROUP BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(training_time) AS first_training_time FROM Training_Logs;",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Preprocessed_Data WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT data_text, processed_data FROM Preprocessed_Data",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, parameter_name, parameter_value FROM Model_Parameters WHERE model_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Model_Parameters WHERE parameter_value > 0.5",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, training_time FROM Training_Logs WHERE model_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Training_Logs WHERE EXTRACT(MONTH FROM training_time) = 10",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, validation_result FROM Validation_Data WHERE validation_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT validation_id, validation_result FROM Validation_Data WHERE model_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT pd.data_text, vp.parameter_name FROM Preprocessed_Data pd JOIN Model_Parameters vp ON pd.id = vp.model_id",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT pl.model_id, COUNT(pl.log_id) as num_logs FROM Training_Logs pl GROUP BY pl.model_id",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT avg(vp.parameter_value) as avg_param_value FROM Model_Parameters vp",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT min(training_time) as min_training_time FROM Training_Logs",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) as num_records FROM Preprocessed_Data",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT model_id FROM Training_Logs",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT parameter_name, SUM(parameter_value) as sum_param_value FROM Model_Parameters GROUP BY parameter_name",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM Validation_Data ORDER BY validation_id DESC",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, AVG(CAST(parameter_value as FLOAT)) as avg_param_value FROM Model_Parameters GROUP BY model_id",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, MAX(CAST(parameter_value as FLOAT)) as max_param_value FROM Model_Parameters GROUP BY model_id",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, MIN(CAST(parameter_value as FLOAT)) as min_param_value FROM Model_Parameters GROUP BY model_id",
  "### TABLEDATA\n\nCREATE TABLE Preprocessed_Data (\n    id INT PRIMARY KEY,\n    data_text TEXT,\n    processed_data TEXT\n)\n\nCREATE TABLE Model_Parameters (\n    model_id INT PRIMARY KEY,\n    parameter_name TEXT,\n    parameter_value FLOAT\n)\n\nCREATE TABLE Training_Logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    training_time TIMESTAMP\n)\n\nCREATE TABLE Validation_Data (\n    validation_id INT PRIMARY KEY,\n    model_id INT,\n    validation_result TEXT\n)\n\n### STATEMENT\n\nSELECT model_id, COUNT(*) as num_validations FROM Validation_Data GROUP BY model_id",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessing_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT data_name, data_type FROM preprocessing_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT dataset_name, target_variable FROM training_data;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, algorithm FROM model_details;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM model_performance WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT source_name, source_type FROM data_sources;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, data_type, preprocessing_steps FROM preprocessing_data WHERE data_name LIKE 'example%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT dataset_name, features FROM training_data WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, algorithm, hyperparameters FROM model_details WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT evaluation_metric, metric_value FROM model_performance WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT source_name, source_description FROM data_sources WHERE source_type = 'CSV';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessing_data WHERE id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT dataset_name, target_variable FROM training_data WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, algorithm FROM model_details WHERE algorithm = 'Random Forest';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM model_performance WHERE evaluation_metric = 'accuracy';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT source_name, source_description FROM data_sources WHERE source_name = 'Example';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT id, data_name, data_type FROM preprocessing_data ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT dataset_name, features FROM training_data ORDER BY dataset_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, algorithm FROM model_details ORDER BY model_id;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_metric, metric_value FROM model_performance ORDER BY model_id, evaluation_metric;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessing_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT data_name, preprocessing_steps FROM preprocessing_data WHERE data_type = 'image';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM training_data WHERE target_variable = 'income';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT dataset_name, features FROM training_data WHERE features LIKE '%numeric%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM model_details WHERE algorithm = 'Random Forest';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_name, hyperparameters FROM model_details WHERE algorithm = 'Logistic Regression';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM model_performance WHERE metric_value > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_metric, metric_value FROM model_performance WHERE evaluation_metric = 'accuracy';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM data_sources WHERE source_type = 'database';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT source_name, source_description FROM data_sources WHERE source_type = 'API';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT preprocessing_data.id, data_name, model_name FROM preprocessing_data JOIN model_details ON preprocessing_data.id = model_details.model_id;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT training_data.dataset_name, model_name, metric_value FROM training_data JOIN model_details ON training_data.id = model_details.model_id JOIN model_performance ON model_details.model_id = model_performance.model_id;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessing_data pd JOIN training_data td ON pd.id = td.id JOIN model_details md ON pd.id = md.model_id JOIN model_performance mp ON md.model_id = mp.model_id JOIN data_sources ds ON pd.id = ds.source_id WHERE pd.data_type = 'text' AND td.features LIKE '%categorical%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_id, model_name, algorithm, source_name FROM model_details JOIN data_sources ON model_details.model_id = data_sources.source_id;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT data_name, preprocessing_steps, dataset_name, features, model_name, metric_value FROM preprocessing_data JOIN training_data ON preprocessing_data.id = training_data.id JOIN model_details ON preprocessing_data.id = model_details.model_id JOIN model_performance ON model_details.model_id = model_performance.model_id;",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM preprocessing_data WHERE data_name IN ('data1', 'data2', 'data3');",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT dataset_name, features, target_variable FROM training_data WHERE dataset_name LIKE '%set%';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM model_details WHERE hyperparameters->>'learning_rate' = '0.01';",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT model_id, evaluation_metric, metric_value FROM model_performance WHERE model_id IN (SELECT model_id FROM model_details WHERE algorithm = 'SVM');",
  "### TABLEDATA\n\nCREATE TABLE preprocessing_data (\n    id INT PRIMARY KEY,\n    data_name VARCHAR(255),\n    data_type VARCHAR(50),\n    preprocessing_steps TEXT\n);\n\n\nCREATE TABLE training_data (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255),\n    features TEXT,\n    target_variable VARCHAR(50)\n);\n\n\nCREATE TABLE model_details (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(100),\n    algorithm VARCHAR(50),\n    hyperparameters JSON\n);\n\n\nCREATE TABLE model_performance (\n    model_id INT,\n    evaluation_metric VARCHAR(50),\n    metric_value FLOAT,\n    PRIMARY KEY (model_id, evaluation_metric)\n);\n\n\nCREATE TABLE data_sources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(255),\n    source_type VARCHAR(50),\n    source_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM data_sources WHERE source_description ILIKE '%cloud%';"
]