[
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (1, 'Model A', 'Dense, Conv2D, LSTM', 'Adam', 'Mean Squared Error') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model A', layers = 'Dense, Conv2D, LSTM', optimizer = 'Adam', loss_function = 'Mean Squared Error';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (2, 'Model B', 'Conv2D, Dropout, Dense', 'SGD', 'Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model B', layers = 'Conv2D, Dropout, Dense', optimizer = 'SGD', loss_function = 'Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (3, 'Model C', 'LSTM, Dense, Flatten', 'Adam', 'Binary Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model C', layers = 'LSTM, Dense, Flatten', optimizer = 'Adam', loss_function = 'Binary Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (4, 'Model D', 'Conv2D, MaxPooling2D, Dropout', 'SGD', 'Categorical Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model D', layers = 'Conv2D, MaxPooling2D, Dropout', optimizer = 'SGD', loss_function = 'Categorical Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (5, 'Model E', 'Dense, Dropout, Conv2D', 'Adam', 'Sparse Categorical Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model E', layers = 'Dense, Dropout, Conv2D', optimizer = 'Adam', loss_function = 'Sparse Categorical Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (6, 'Model F', 'LSTM, Flatten, Dense', 'SGD', 'Huber Loss') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model F', layers = 'LSTM, Flatten, Dense', optimizer = 'SGD', loss_function = 'Huber Loss';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (7, 'Model G', 'Conv2D, Dropout, Dense', 'Adam', 'Kullback-Leibler Divergence') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model G', layers = 'Conv2D, Dropout, Dense', optimizer = 'Adam', loss_function = 'Kullback-Leibler Divergence';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (8, 'Model H', 'Dense, Conv2D, MaxPooling2D', 'SGD', 'Squared Hinge') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model H', layers = 'Dense, Conv2D, MaxPooling2D', optimizer = 'SGD', loss_function = 'Squared Hinge';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (9, 'Model I', 'LSTM, Dense, Dropout', 'Adam', 'Poisson') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model I', layers = 'LSTM, Dense, Dropout', optimizer = 'Adam', loss_function = 'Poisson';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (10, 'Model J', 'Conv2D, MaxPooling2D, Dense', 'SGD', 'Perceptual Loss') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model J', layers = 'Conv2D, MaxPooling2D, Dense', optimizer = 'SGD', loss_function = 'Perceptual Loss';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (11, 'Model K', 'Dense, Dropout, LSTM', 'Adam', 'Adaptive Huber') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model K', layers = 'Dense, Dropout, LSTM', optimizer = 'Adam', loss_function = 'Adaptive Huber';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (12, 'Model L', 'Conv2D, Flatten, Dense', 'SGD', 'Categorical Hinge') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model L', layers = 'Conv2D, Flatten, Dense', optimizer = 'SGD', loss_function = 'Categorical Hinge';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (13, 'Model M', 'LSTM, Dense, Conv2D', 'Adam', 'Poisson') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model M', layers = 'LSTM, Dense, Conv2D', optimizer = 'Adam', loss_function = 'Poisson';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (14, 'Model N', 'Conv2D, MaxPooling2D, Dropout', 'SGD', 'Mean Absolute Error') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model N', layers = 'Conv2D, MaxPooling2D, Dropout', optimizer = 'SGD', loss_function = 'Mean Absolute Error';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (15, 'Model O', 'Dense, Conv2D, Dropout', 'Adam', 'Hinge') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model O', layers = 'Dense, Conv2D, Dropout', optimizer = 'Adam', loss_function = 'Hinge';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (16, 'Model P', 'LSTM, Flatten, Dense', 'SGD', 'Squared Logarithmic Error') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model P', layers = 'LSTM, Flatten, Dense', optimizer = 'SGD', loss_function = 'Squared Logarithmic Error';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (17, 'Model Q', 'Conv2D, MaxPooling2D, Dense', 'Adam', 'Categorical Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model Q', layers = 'Conv2D, MaxPooling2D, Dense', optimizer = 'Adam', loss_function = 'Categorical Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (18, 'Model R', 'Dense, Dropout, Conv2D', 'SGD', 'Kullback-Leibler Divergence') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model R', layers = 'Dense, Dropout, Conv2D', optimizer = 'SGD', loss_function = 'Kullback-Leibler Divergence';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (19, 'Model S', 'LSTM, Dense, Dropout', 'Adam', 'Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model S', layers = 'LSTM, Dense, Dropout', optimizer = 'Adam', loss_function = 'Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (20, 'Model T', 'Conv2D, MaxPooling2D, Dense', 'SGD', 'Sparse Categorical Cross Entropy') ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model T', layers = 'Conv2D, MaxPooling2D, Dense', optimizer = 'SGD', loss_function = 'Sparse Categorical Cross Entropy';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (1, 'Model1', 'Layer1, Layer2, Layer3', 'Adam', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model1_updated', optimizer = 'SGD'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (2, 'Model2', 'Layer4, Layer5', 'RMSprop', 'CrossEntropy') ON DUPLICATE KEY UPDATE model_name = 'Model2_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (3, 'Model3', 'Layer6', 'SGD', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model3_updated', layers = 'Layer7, Layer8'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (4, 'Model4', 'Layer9, Layer10', 'Adam', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model4_updated', optimizer = 'RMSprop'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (5, 'Model5', 'Layer11, Layer12, Layer13', 'SGD', 'CrossEntropy') ON DUPLICATE KEY UPDATE model_name = 'Model5_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (6, 'Model6', 'Layer14', 'Adam', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model6_updated', layers = 'Layer15'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (7, 'Model7', 'Layer16, Layer17', 'RMSprop', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model7_updated', optimizer = 'SGD'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (8, 'Model8', 'Layer18', 'SGD', 'CrossEntropy') ON DUPLICATE KEY UPDATE model_name = 'Model8_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (9, 'Model9', 'Layer19, Layer20', 'Adam', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model9_updated', optimizer = 'RMSprop'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (10, 'Model10', 'Layer21, Layer22, Layer23', 'SGD', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model10_updated', layers = 'Layer24'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (11, 'Model11', 'Layer25, Layer26', 'RMSprop', 'CrossEntropy') ON DUPLICATE KEY UPDATE model_name = 'Model11_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (12, 'Model12', 'Layer27', 'SGD', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model12_updated', layers = 'Layer28, Layer29'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (13, 'Model13', 'Layer30, Layer31', 'Adam', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model13_updated', optimizer = 'RMSprop'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (14, 'Model14', 'Layer32, Layer33', 'SGD', 'CrossEntropy') ON DUPLICATE KEY UPDATE model_name = 'Model14_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (15, 'Model15', 'Layer34', 'Adam', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model15_updated', optimizer = 'SGD'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (16, 'Model16', 'Layer35', 'RMSprop', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model16_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (17, 'Model17', 'Layer36, Layer37', 'SGD', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model17_updated', layers = 'Layer38, Layer39'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (18, 'Model18', 'Layer40, Layer41', 'Adam', 'MSE') ON DUPLICATE KEY UPDATE model_name = 'Model18_updated', optimizer = 'RMSprop'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (19, 'Model19', 'Layer42', 'SGD', 'CrossEntropy') ON DUPLICATE KEY UPDATE model_name = 'Model19_updated', loss_function = 'BCE'",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nINSERT INTO DeepLearningModel (model_id, model_name, layers, optimizer, loss_function) VALUES (20, 'Model20', 'Layer43, Layer44', 'Adam', 'MAE') ON DUPLICATE KEY UPDATE model_name = 'Model20_updated', layers = 'Layer45, Layer46'",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (1, 'ImageNet', 'Large image dataset for computer vision tasks', 100000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'ImageNet', dataset_description = 'Updated dataset description', dataset_size = 150000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (2, 'MNIST', 'Handwritten digits dataset', 60000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'MNIST', dataset_description = 'Updated dataset description', dataset_size = 70000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (1, 1, 'ResNet50', 0.85, 0.75) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 1, model_name = 'ResNet50', training_accuracy = 0.88, validation_accuracy = 0.78",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (2, 2, 'CNN', 0.92, 0.87) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 2, model_name = 'CNN', training_accuracy = 0.95, validation_accuracy = 0.89",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (3, 'CIFAR-10', 'Dataset with 60000 32x32 color images', 60000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'CIFAR-10', dataset_description = 'Updated dataset description', dataset_size = 70000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (4, 'FashionMNIST', 'Fashion product images dataset', 70000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'FashionMNIST', dataset_description = 'Updated dataset description', dataset_size = 80000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (3, 3, 'AlexNet', 0.78, 0.72) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 3, model_name = 'AlexNet', training_accuracy = 0.81, validation_accuracy = 0.75",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (4, 4, 'VGG16', 0.88, 0.82) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 4, model_name = 'VGG16', training_accuracy = 0.91, validation_accuracy = 0.85",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (5, 'COCO', 'Common Objects in Context dataset', 118000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'COCO', dataset_description = 'Updated dataset description', dataset_size = 130000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (6, 'PASCAL VOC', 'Visual Object Classes dataset', 17125) ON CONFLICT (id) DO UPDATE SET dataset_name = 'PASCAL VOC', dataset_description = 'Updated dataset description', dataset_size = 20000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (5, 5, 'YoloV3', 0.93, 0.89) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 5, model_name = 'YoloV3', training_accuracy = 0.96, validation_accuracy = 0.92",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (6, 6, 'SSD', 0.91, 0.86) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 6, model_name = 'SSD', training_accuracy = 0.94, validation_accuracy = 0.88",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (7, 'Caltech-256', 'Dataset with 30608 images in 256 categories', 30608) ON CONFLICT (id) DO UPDATE SET dataset_name = 'Caltech-256', dataset_description = 'Updated dataset description', dataset_size = 35000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (8, 'Hollywood2', 'Dataset with actions in Hollywood movies', 82381) ON CONFLICT (id) DO UPDATE SET dataset_name = 'Hollywood2', dataset_description = 'Updated dataset description', dataset_size = 90000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (7, 7, 'RCNN', 0.85, 0.78) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 7, model_name = 'RCNN', training_accuracy = 0.88, validation_accuracy = 0.80",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (8, 8, 'LSTM', 0.78, 0.72) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 8, model_name = 'LSTM', training_accuracy = 0.81, validation_accuracy = 0.75",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (9, 'ILSVRC2012', 'ImageNet Large Scale Visual Recognition Challenge dataset', 1517000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'ILSVRC2012', dataset_description = 'Updated dataset description', dataset_size = 1600000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (10, 'MIRFLICKR', 'Dataset with 1 million images from Flickr', 1000000) ON CONFLICT (id) DO UPDATE SET dataset_name = 'MIRFLICKR', dataset_description = 'Updated dataset description', dataset_size = 1100000",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (9, 9, 'InceptionV3', 0.92, 0.87) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 9, model_name = 'InceptionV3', training_accuracy = 0.95, validation_accuracy = 0.89",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (10, 10, 'EfficientNet', 0.94, 0.91) ON CONFLICT (result_id) DO UPDATE SET dataset_id = 10, model_name = 'EfficientNet', training_accuracy = 0.97, validation_accuracy = 0.93",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (1, 'Dataset A', 'Description for Dataset A', 1000) ON DUPLICATE KEY UPDATE dataset_name='Dataset A', dataset_description='Updated Description for Dataset A', dataset_size=1500;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (2, 'Dataset B', 'Description for Dataset B', 1500) ON DUPLICATE KEY UPDATE dataset_name='Dataset B', dataset_description='Updated Description for Dataset B', dataset_size=2000;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (3, 'Dataset C', 'Description for Dataset C', 2000) ON DUPLICATE KEY UPDATE dataset_name='Dataset C', dataset_description='Updated Description for Dataset C', dataset_size=2500;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (4, 'Dataset D', 'Description for Dataset D', 2500) ON DUPLICATE KEY UPDATE dataset_name='Dataset D', dataset_description='Updated Description for Dataset D', dataset_size=3000;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (5, 'Dataset E', 'Description for Dataset E', 3000) ON DUPLICATE KEY UPDATE dataset_name='Dataset E', dataset_description='Updated Description for Dataset E', dataset_size=3500;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (6, 'Dataset F', 'Description for Dataset F', 3500) ON DUPLICATE KEY UPDATE dataset_name='Dataset F', dataset_description='Updated Description for Dataset F', dataset_size=4000;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (7, 'Dataset G', 'Description for Dataset G', 4000) ON DUPLICATE KEY UPDATE dataset_name='Dataset G', dataset_description='Updated Description for Dataset G', dataset_size=4500;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (8, 'Dataset H', 'Description for Dataset H', 4500) ON DUPLICATE KEY UPDATE dataset_name='Dataset H', dataset_description='Updated Description for Dataset H', dataset_size=5000;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (9, 'Dataset I', 'Description for Dataset I', 5000) ON DUPLICATE KEY UPDATE dataset_name='Dataset I', dataset_description='Updated Description for Dataset I', dataset_size=5500;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (id, dataset_name, dataset_description, dataset_size) VALUES (10, 'Dataset J', 'Description for Dataset J', 5500) ON DUPLICATE KEY UPDATE dataset_name='Dataset J', dataset_description='Updated Description for Dataset J', dataset_size=6000;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (1, 1, 'Model A', 0.85, 0.82) ON DUPLICATE KEY UPDATE model_name='Model A', training_accuracy=0.90, validation_accuracy=0.87;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (2, 2, 'Model B', 0.75, 0.72) ON DUPLICATE KEY UPDATE model_name='Model B', training_accuracy=0.80, validation_accuracy=0.77;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (3, 3, 'Model C', 0.80, 0.78) ON DUPLICATE KEY UPDATE model_name='Model C', training_accuracy=0.85, validation_accuracy=0.82;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (4, 4, 'Model D', 0.90, 0.88) ON DUPLICATE KEY UPDATE model_name='Model D', training_accuracy=0.95, validation_accuracy=0.92;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (5, 5, 'Model E', 0.95, 0.92) ON DUPLICATE KEY UPDATE model_name='Model E', training_accuracy=1.0, validation_accuracy=0.97;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (6, 6, 'Model F', 0.85, 0.82) ON DUPLICATE KEY UPDATE model_name='Model F', training_accuracy=0.90, validation_accuracy=0.87;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (7, 7, 'Model G', 0.75, 0.72) ON DUPLICATE KEY UPDATE model_name='Model G', training_accuracy=0.80, validation_accuracy=0.77;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (8, 8, 'Model H', 0.80, 0.78) ON DUPLICATE KEY UPDATE model_name='Model H', training_accuracy=0.85, validation_accuracy=0.82;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (9, 9, 'Model I', 0.90, 0.88) ON DUPLICATE KEY UPDATE model_name='Model I', training_accuracy=0.95, validation_accuracy=0.92;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nINSERT INTO model_training_results (result_id, dataset_id, model_name, training_accuracy, validation_accuracy) VALUES (10, 10, 'Model J', 0.95, 0.92) ON DUPLICATE KEY UPDATE model_name='Model J', training_accuracy=1.0, validation_accuracy=0.97;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Image Recognition', 1000, '2022-01-10 10:00:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Text Classification', 500, '2022-01-15 08:30:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (1, 'Cat') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(2, 'Dog') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('CNN', 1, 0.85, 0.1) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('LSTM', 2, 0.75, 0.2) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Object Detection', 800, '2022-01-20 15:45:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Anomaly Detection', 300, '2022-01-25 09:20:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(3, 'Tree') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(4, 'Car') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('YOLO', 3, 0.89, 0.05) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('SSD', 4, 0.78, 0.15) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Semantic Segmentation', 600, '2022-02-01 14:30:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Time Series Forecasting', 400, '2022-02-05 11:10:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(5, 'House') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(6, 'Person') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('GRU', 5, 0.68, 0.25) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('LSTM', 6, 0.72, 0.18) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Sentiment Analysis', 700, '2022-02-10 16:20:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Recommendation Systems', 200, '2022-02-15 10:45:00') ON CONFLICT (dataset_name) DO UPDATE SET dataset_size = EXCLUDED.dataset_size, last_updated = EXCLUDED.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(7, 'Book') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES(8, 'Movie') ON CONFLICT (dataset_id, label_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('Neural Collaborative Filtering', 7, 0.95, 0.05) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('Matrix Factorization', 8, 0.82, 0.12) ON CONFLICT (model_name, dataset_id) DO UPDATE SET accuracy = EXCLUDED.accuracy, loss = EXCLUDED.loss;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('MNIST', 60000, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (1, 'Label1');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelA', 1, 0.95, 0.05);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('CIFAR-10', 50000, '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (2, 'Label2');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelB', 2, 0.92, 0.08);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('Fashion-MNIST', 70000, '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (3, 'Label3');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelC', 3, 0.88, 0.12);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('SVHN', 73257, '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (4, 'Label4');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelD', 4, 0.91, 0.09);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('CelebA', 10177, '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (5, 'Label5');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelE', 5, 0.89, 0.11);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('COCO', 118287, '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (6, 'Label6');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelF', 6, 0.82, 0.18);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_datasets (dataset_name, dataset_size, last_updated) VALUES ('ImageNet', 148538712, '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO data_labels (dataset_id, label_name) VALUES (7, 'Label7');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO model_results (model_name, dataset_id, accuracy, loss) VALUES ('ModelG', 7, 0.87, 0.13);",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (1, 'Dataset A', 'This is dataset A');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (2, 'Dataset B', 'This is dataset B');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (3, 'Dataset C', 'This is dataset C');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (4, 'Dataset D', 'This is dataset D');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (5, 'Dataset E', 'This is dataset E');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (6, 'Dataset F', 'This is dataset F');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (7, 'Dataset G', 'This is dataset G');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (8, 'Dataset H', 'This is dataset H');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (9, 'Dataset I', 'This is dataset I');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (10, 'Dataset J', 'This is dataset J');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (11, 'Dataset K', 'This is dataset K');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (12, 'Dataset L', 'This is dataset L');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (13, 'Dataset M', 'This is dataset M');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (14, 'Dataset N', 'This is dataset N');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (15, 'Dataset O', 'This is dataset O');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (16, 'Dataset P', 'This is dataset P');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (17, 'Dataset Q', 'This is dataset Q');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (18, 'Dataset R', 'This is dataset R');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (19, 'Dataset S', 'This is dataset S');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (20, 'Dataset T', 'This is dataset T');",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (1, 'Dataset1', 'Description1') ON CONFLICT (id) DO UPDATE SET dataset_name = 'Dataset1_updated', description = 'Description1_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO model (model_id, model_name, algorithm, accuracy) VALUES (1, 'Model1', 'Algorithm1', 0.85) ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model1_updated', algorithm = 'Algorithm1_updated', accuracy = 0.95;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_metric (metric_id, model_id, loss, accuracy) VALUES (1, 1, 0.1, 0.95) ON CONFLICT (metric_id) DO UPDATE SET model_id = 1, loss = 0.2, accuracy = 0.85;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO prediction (prediction_id, model_id, input_data, output_data, prediction_label) VALUES (1, 1, 'Input1', 'Output1', 'Label1') ON CONFLICT (prediction_id) DO UPDATE SET model_id = 1, input_data = 'Input1_updated', output_data = 'Output1_updated', prediction_label = 'Label1_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (2, 'Dataset2', 'Description2') ON CONFLICT (id) DO UPDATE SET dataset_name = 'Dataset2_updated', description = 'Description2_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO model (model_id, model_name, algorithm, accuracy) VALUES (2, 'Model2', 'Algorithm2', 0.75) ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model2_updated', algorithm = 'Algorithm2_updated', accuracy = 0.85;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_metric (metric_id, model_id, loss, accuracy) VALUES (2, 2, 0.2, 0.85) ON CONFLICT (metric_id) DO UPDATE SET model_id = 2, loss = 0.3, accuracy = 0.75;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO prediction (prediction_id, model_id, input_data, output_data, prediction_label) VALUES (2, 2, 'Input2', 'Output2', 'Label2') ON CONFLICT (prediction_id) DO UPDATE SET model_id = 2, input_data = 'Input2_updated', output_data = 'Output2_updated', prediction_label = 'Label2_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (3, 'Dataset3', 'Description3') ON CONFLICT (id) DO UPDATE SET dataset_name = 'Dataset3_updated', description = 'Description3_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO model (model_id, model_name, algorithm, accuracy) VALUES (3, 'Model3', 'Algorithm3', 0.95) ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model3_updated', algorithm = 'Algorithm3_updated', accuracy = 0.90;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_metric (metric_id, model_id, loss, accuracy) VALUES (3, 3, 0.3, 0.90) ON CONFLICT (metric_id) DO UPDATE SET model_id = 3, loss = 0.4, accuracy = 0.80;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO prediction (prediction_id, model_id, input_data, output_data, prediction_label) VALUES (3, 3, 'Input3', 'Output3', 'Label3') ON CONFLICT (prediction_id) DO UPDATE SET model_id = 3, input_data = 'Input3_updated', output_data = 'Output3_updated', prediction_label = 'Label3_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO dataset (id, dataset_name, description) VALUES (4, 'Dataset4', 'Description4') ON CONFLICT (id) DO UPDATE SET dataset_name = 'Dataset4_updated', description = 'Description4_updated';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO model (model_id, model_name, algorithm, accuracy) VALUES (4, 'Model4', 'Algorithm4', 0.80) ON CONFLICT (model_id) DO UPDATE SET model_name = 'Model4_updated', algorithm = 'Algorithm4_updated', accuracy = 0.75;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_metric (metric_id, model_id, loss, accuracy) VALUES (4, 4, 0.4, 0.75) ON CONFLICT (metric_id) DO UPDATE SET model_id = 4, loss = 0.5, accuracy = 0.65;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nINSERT INTO prediction (prediction_id, model_id, input_data, output_data, prediction_label) VALUES (4, 4, 'Input4', 'Output4', 'Label4') ON CONFLICT (prediction_id) DO UPDATE SET model_id = 4, input_data = 'Input4_updated', output_data = 'Output4_updated', prediction_label = 'Label4_updated';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (1, 'Binary data example 1', '2022-03-01 08:00:00') ON DUPLICATE KEY UPDATE data = VALUES(data), created_at = VALUES(created_at);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (1, '{\"layers\": [\"input\", \"hidden\", \"output\"]}', 1) ON DUPLICATE KEY UPDATE structure = VALUES(structure), training_data_id = VALUES(training_data_id);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (1, 1, '{\"accuracy\": 0.85}') ON DUPLICATE KEY UPDATE result = VALUES(result);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (1, 1, 'Training log for model 1') ON DUPLICATE KEY UPDATE log_info = VALUES(log_info);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (1, 1, '{\"learning_rate\": 0.001}') ON DUPLICATE KEY UPDATE params = VALUES(params);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (2, 'Binary data example 2', '2022-03-02 09:00:00') ON DUPLICATE KEY UPDATE data = VALUES(data), created_at = VALUES(created_at);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (2, '{\"layers\": [\"input\", \"hidden\", \"output\"]}', 2) ON DUPLICATE KEY UPDATE structure = VALUES(structure), training_data_id = VALUES(training_data_id);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (2, 2, '{\"accuracy\": 0.75}') ON DUPLICATE KEY UPDATE result = VALUES(result);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (2, 2, 'Training log for model 2') ON DUPLICATE KEY UPDATE log_info = VALUES(log_info);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (2, 2, '{\"learning_rate\": 0.01}') ON DUPLICATE KEY UPDATE params = VALUES(params);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (3, 'Binary data example 3', '2022-03-03 10:00:00') ON DUPLICATE KEY UPDATE data = VALUES(data), created_at = VALUES(created_at);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (3, '{\"layers\": [\"input\", \"hidden\", \"output\"]}', 3) ON DUPLICATE KEY UPDATE structure = VALUES(structure), training_data_id = VALUES(training_data_id);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (3, 3, '{\"accuracy\": 0.90}') ON DUPLICATE KEY UPDATE result = VALUES(result);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (3, 3, 'Training log for model 3') ON DUPLICATE KEY UPDATE log_info = VALUES(log_info);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (3, 3, '{\"learning_rate\": 0.001}') ON DUPLICATE KEY UPDATE params = VALUES(params);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (4, 'Binary data example 4', '2022-03-04 11:00:00') ON DUPLICATE KEY UPDATE data = VALUES(data), created_at = VALUES(created_at);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (4, '{\"layers\": [\"input\", \"hidden\", \"output\"]}', 4) ON DUPLICATE KEY UPDATE structure = VALUES(structure), training_data_id = VALUES(training_data_id);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (4, 4, '{\"accuracy\": 0.82}') ON DUPLICATE KEY UPDATE result = VALUES(result);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (4, 4, 'Training log for model 4') ON DUPLICATE KEY UPDATE log_info = VALUES(log_info);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (4, 4, '{\"learning_rate\": 0.005}') ON DUPLICATE KEY UPDATE params = VALUES(params);",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (1, 'Some data blob here', '2022-01-01 10:00:00');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (1, '{\"layers\": [\"input\", \"hidden\", \"output\"]}', 1) ON DUPLICATE KEY UPDATE structure = '{\"layers\": [\"input\", \"hidden\", \"output\"]}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (1, 1, '{\"accuracy\": 0.95}') ON DUPLICATE KEY UPDATE result = '{\"accuracy\": 0.95}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (1, 1, 'Training started') ON DUPLICATE KEY UPDATE log_info = 'Training started';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (1, 1, '{\"learning_rate\": 0.001}') ON DUPLICATE KEY UPDATE params = '{\"learning_rate\": 0.001}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (2, 'Another data blob here', '2022-01-02 09:30:00');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (2, '{\"layers\": [\"input\", \"hidden1\", \"hidden2\", \"output\"]}', 2) ON DUPLICATE KEY UPDATE structure = '{\"layers\": [\"input\", \"hidden1\", \"hidden2\", \"output\"]}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (2, 2, '{\"accuracy\": 0.92}') ON DUPLICATE KEY UPDATE result = '{\"accuracy\": 0.92}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (2, 2, 'Training completed successfully') ON DUPLICATE KEY UPDATE log_info = 'Training completed successfully';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (2, 2, '{\"learning_rate\": 0.0001}') ON DUPLICATE KEY UPDATE params = '{\"learning_rate\": 0.0001}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (3, 'Yet another data blob here', '2022-01-03 12:15:00');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (3, '{\"layers\": [\"input\", \"hidden1\", \"hidden2\", \"hidden3\", \"output\"]}', 3) ON DUPLICATE KEY UPDATE structure = '{\"layers\": [\"input\", \"hidden1\", \"hidden2\", \"hidden3\", \"output\"]}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (3, 3, '{\"accuracy\": 0.88}') ON DUPLICATE KEY UPDATE result = '{\"accuracy\": 0.88}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (3, 3, 'Model converged after 100 epochs') ON DUPLICATE KEY UPDATE log_info = 'Model converged after 100 epochs';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (3, 3, '{\"learning_rate\": 0.01}') ON DUPLICATE KEY UPDATE params = '{\"learning_rate\": 0.01}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO deep_learning_data (id, data, created_at) VALUES (4, 'One more data blob here', '2022-01-04 15:45:00');",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO neural_networks (network_id, structure, training_data_id) VALUES (4, '{\"layers\": [\"input\", \"hidden1\", \"output\"]}', 4) ON DUPLICATE KEY UPDATE structure = '{\"layers\": [\"input\", \"hidden1\", \"output\"]}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO model_results (result_id, model_id, result) VALUES (4, 4, '{\"accuracy\": 0.97}') ON DUPLICATE KEY UPDATE result = '{\"accuracy\": 0.97}';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO training_logs (log_id, model_id, log_info) VALUES (4, 4, 'Final model evaluation') ON DUPLICATE KEY UPDATE log_info = 'Final model evaluation';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nINSERT INTO hyperparameters (hyper_id, model_id, params) VALUES (4, 4, '{\"learning_rate\": 0.005}') ON DUPLICATE KEY UPDATE params = '{\"learning_rate\": 0.005}';"
]