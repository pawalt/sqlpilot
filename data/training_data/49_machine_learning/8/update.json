[
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nUPDATE DeepLearningModel SET optimizer='Adam' WHERE model_id=1;",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nUPDATE DeepLearningModel SET loss_function='MSE' WHERE model_id=2;",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nUPDATE DeepLearningModel SET layers='[256, 128, 64]' WHERE model_id=3;",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nUPDATE DeepLearningModel SET model_name = 'Updated Model 1', optimizer = 'SGD' WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nUPDATE DeepLearningModel SET layers = 'CNN, LSTM', optimizer = 'Adam' WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nUPDATE DeepLearningModel SET model_name = 'Updated Model 3', layers = 'RNN', loss_function = 'MSE' WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPDATE deep_learning_datasets SET dataset_name = 'New Dataset Name' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPDATE deep_learning_datasets SET dataset_description = 'Updated Description' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPDATE model_training_results SET validation_accuracy = 0.85 WHERE result_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPDATE deep_learning_datasets SET dataset_description = 'Updated description' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPDATE model_training_results SET training_accuracy = 0.85 WHERE result_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nUPDATE deep_learning_datasets SET dataset_size = dataset_size + 100 WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE deep_learning_datasets SET dataset_size = 200 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE data_labels SET label_name = 'New Label' WHERE label_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE model_results SET accuracy = 0.95, loss = 0.1 WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE deep_learning_datasets SET dataset_size = dataset_size + 100 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE data_labels SET label_name = 'New Label' WHERE label_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPDATE model_results SET accuracy = 0.98, loss = 0.05 WHERE result_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nUPDATE dataset SET description = 'New description' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nUPDATE model SET accuracy = 0.85 WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nUPDATE prediction SET prediction_label = 'Success' WHERE prediction_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nUPDATE dataset SET description = 'Updated dataset description' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nUPDATE model SET accuracy = 0.95, algorithm = 'Random Forest' WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nUPDATE training_metric SET loss = 0.25, accuracy = 0.78 WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nUPDATE deep_learning_data SET created_at = NOW() WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nUPDATE neural_networks SET training_data_id = 3 WHERE network_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nUPDATE model_results SET result = '{\"accuracy\": 0.92}' WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nUPDATE deep_learning_data SET data = 'New Data' WHERE id = 123;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nUPDATE neural_networks SET structure = '{\"layer1\": \"Dense\", \"layer2\": \"Convolutional\"}' WHERE network_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nUPDATE model_results SET result = '{\"accuracy\": 0.95, \"loss\": 0.1}' WHERE model_id = 789;"
]