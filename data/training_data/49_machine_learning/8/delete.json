[
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nDELETE FROM DeepLearningModel WHERE model_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nDELETE FROM DeepLearningModel WHERE model_name = 'example_model';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nDELETE FROM DeepLearningModel WHERE optimizer = 'adam';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nDELETE FROM DeepLearningModel WHERE model_id = 1001 AND model_name = 'model1';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nDELETE FROM DeepLearningModel WHERE optimizer = 'adam' AND loss_function = 'mse';",
  "### TABLEDATA\n\nCREATE TABLE DeepLearningModel (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(50),\n    layers TEXT,\n    optimizer VARCHAR(20),\n    loss_function VARCHAR(20)\n)\n\n### STATEMENT\n\nDELETE FROM DeepLearningModel WHERE layers LIKE '%conv2d%' AND optimizer = 'sgd'",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_datasets WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_datasets WHERE dataset_name = 'MNIST';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nDELETE FROM model_training_results WHERE result_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nDELETE FROM model_training_results WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_datasets WHERE dataset_size > 10000;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    dataset_description TEXT,\n    dataset_size INT\n);\n\nCREATE TABLE model_training_results (\n    result_id INT PRIMARY KEY,\n    dataset_id INT,\n    model_name VARCHAR(255) NOT NULL,\n    training_accuracy FLOAT,\n    validation_accuracy FLOAT\n    FOREIGN KEY (dataset_id) REFERENCES deep_learning_datasets(id)\n);\n\n### STATEMENT\n\nDELETE FROM model_training_results WHERE training_accuracy < 0.9;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_datasets WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM data_labels WHERE label_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM model_results WHERE result_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM model_results WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM data_labels WHERE dataset_id = 1 AND label_name = 'classification';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_datasets (\n    id SERIAL PRIMARY KEY,\n    dataset_name VARCHAR(100) NOT NULL,\n    dataset_size INT NOT NULL,\n    last_updated TIMESTAMP\n);\n\nCREATE TABLE data_labels (\n    label_id SERIAL PRIMARY KEY,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    label_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE model_results (\n    result_id SERIAL PRIMARY KEY,\n    model_name VARCHAR(100) NOT NULL,\n    dataset_id INT REFERENCES deep_learning_datasets(id),\n    accuracy FLOAT NOT NULL,\n    loss FLOAT NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_datasets WHERE dataset_name = 'Image Recognition Dataset';",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nDELETE FROM dataset WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nDELETE FROM model WHERE model_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nDELETE FROM prediction WHERE prediction_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nDELETE FROM training_metric WHERE model_id = 1 AND loss > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nDELETE FROM model WHERE accuracy < 0.7;",
  "### TABLEDATA\n\nCREATE TABLE dataset (\n    id INT PRIMARY KEY,\n    dataset_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\n\nCREATE TABLE model (\n    model_id INT PRIMARY KEY,\n    model_name VARCHAR(255) NOT NULL,\n    algorithm VARCHAR(50),\n    accuracy FLOAT\n);\n\n\nCREATE TABLE training_metric (\n    metric_id INT PRIMARY KEY,\n    model_id INT,\n    loss FLOAT,\n    accuracy FLOAT,\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n\nCREATE TABLE prediction (\n    prediction_id INT PRIMARY KEY,\n    model_id INT,\n    input_data TEXT,\n    output_data TEXT,\n    prediction_label VARCHAR(50),\n    FOREIGN KEY (model_id) REFERENCES model(model_id)\n);\n\n### STATEMENT\n\nDELETE FROM prediction WHERE prediction_label = 'spam';",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_data WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nDELETE FROM neural_networks WHERE network_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nDELETE FROM model_results WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nDELETE FROM model_results WHERE result_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nDELETE FROM training_logs WHERE model_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE deep_learning_data (\n    id INT PRIMARY KEY,\n    data BLOB,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE neural_networks (\n    network_id INT PRIMARY KEY,\n    structure JSON,\n    training_data_id INT,\n    FOREIGN KEY (training_data_id) REFERENCES deep_learning_data(id)\n);\n\nCREATE TABLE model_results (\n    result_id INT PRIMARY KEY,\n    model_id INT,\n    result JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE training_logs (\n    log_id INT PRIMARY KEY,\n    model_id INT,\n    log_info TEXT,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\nCREATE TABLE hyperparameters (\n    hyper_id INT PRIMARY KEY,\n    model_id INT,\n    params JSON,\n    FOREIGN KEY (model_id) REFERENCES neural_networks(network_id)\n);\n\n### STATEMENT\n\nDELETE FROM deep_learning_data WHERE id = 5;"
]