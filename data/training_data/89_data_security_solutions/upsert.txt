<t>CREATE TABLE User (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>INSERT INTO User (id, username, password) VALUES (1, 'john_doe', 'password123') ON DUPLICATE KEY UPDATE username='john_doe', password='password123';</stat><divider><t>CREATE TABLE User (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>insert into user (id, username, password) values (1, 'john_doe', 'password123') on duplicate key update username='john_doe', password='password123';</stat><divider><t>CREATE TABLE User (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>INSERT INTO User (id, username, password) VALUES (2, 'jane_smith', 'pass4321') ON DUPLICATE KEY UPDATE username='jane_smith', password='pass4321';</stat><divider><t>CREATE TABLE User (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>insert into user (id, username, password) values (2, 'jane_smith', 'pass4321') on duplicate key update username='jane_smith', password='pass4321';</stat><divider><t>CREATE TABLE User (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>INSERT INTO User (id, username, password) VALUES (3, 'alice_wonder', 'qwerty123') ON DUPLICATE KEY UPDATE username='alice_wonder', password='qwerty123';</stat><divider><t>CREATE TABLE User (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>insert into user (id, username, password) values (3, 'alice_wonder', 'qwerty123') on duplicate key update username='alice_wonder', password='qwerty123';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'abc123') ON DUPLICATE KEY UPDATE username = VALUES(username), password = VALUES(password)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'abc123') on duplicate key update username = values(username), password = values(password)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'abc123') ON DUPLICATE KEY UPDATE username = VALUES(username), password = VALUES(password)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'abc123') on duplicate key update username = values(username), password = values(password)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'abc123') ON DUPLICATE KEY UPDATE username = VALUES(username), password = VALUES(password)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'abc123') on duplicate key update username = values(username), password = values(password)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'abc123') ON DUPLICATE KEY UPDATE username = VALUES(username), password = VALUES(password)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'abc123') on duplicate key update username = values(username), password = values(password)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'abc123') ON DUPLICATE KEY UPDATE username = VALUES(username), password = VALUES(password)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'abc123') on duplicate key update username = values(username), password = values(password)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'abc123') ON DUPLICATE KEY UPDATE username = VALUES(username), password = VALUES(password)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'abc123') on duplicate key update username = values(username), password = values(password)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO roles (role_id, role_name) VALUES (1, 'admin') ON DUPLICATE KEY UPDATE role_name = VALUES(role_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin') on duplicate key update role_name = values(role_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO roles (role_id, role_name) VALUES (1, 'admin') ON DUPLICATE KEY UPDATE role_name = VALUES(role_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin') on duplicate key update role_name = values(role_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO roles (role_id, role_name) VALUES (1, 'admin') ON DUPLICATE KEY UPDATE role_name = VALUES(role_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin') on duplicate key update role_name = values(role_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO roles (role_id, role_name) VALUES (1, 'admin') ON DUPLICATE KEY UPDATE role_name = VALUES(role_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin') on duplicate key update role_name = values(role_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO roles (role_id, role_name) VALUES (1, 'admin') ON DUPLICATE KEY UPDATE role_name = VALUES(role_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin') on duplicate key update role_name = values(role_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO roles (role_id, role_name) VALUES (1, 'admin') ON DUPLICATE KEY UPDATE role_name = VALUES(role_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin') on duplicate key update role_name = values(role_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read') ON DUPLICATE KEY UPDATE permission_name = VALUES(permission_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'read') on duplicate key update permission_name = values(permission_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read') ON DUPLICATE KEY UPDATE permission_name = VALUES(permission_name)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'read') on duplicate key update permission_name = values(permission_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read') ON DUPLICATE KEY UPDATE permission_name = VALUES(permission_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'read') on duplicate key update permission_name = values(permission_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read') ON DUPLICATE KEY UPDATE permission_name = VALUES(permission_name)</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'read') on duplicate key update permission_name = values(permission_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read') ON DUPLICATE KEY UPDATE permission_name = VALUES(permission_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'read') on duplicate key update permission_name = values(permission_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO permissions (permission_id, permission_name) VALUES (1, 'read') ON DUPLICATE KEY UPDATE permission_name = VALUES(permission_name)</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'read') on duplicate key update permission_name = values(permission_name)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Users (user_id, username, password) VALUES (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into users (user_id, username, password) values (1, 'john_doe', 'password123')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Roles (role_id, role_name) VALUES (1, 'admin')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into roles (role_id, role_name) values (1, 'admin')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>UPSERT INTO Permissions (permission_id, permission_name) VALUES (1, 'create_user')</stat><divider><t>CREATE TABLE UserRoles (user_id INT, role_id INT, PRIMARY KEY (user_id, role_id))

CREATE TABLE Permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE Roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>upsert into permissions (permission_id, permission_name) values (1, 'create_user')</stat>