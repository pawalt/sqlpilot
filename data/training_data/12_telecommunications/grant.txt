<t>CREATE TABLE telecommunications_data (id INT PRIMARY KEY, phone_number VARCHAR(20), call_duration INT, call_date TIMESTAMP)</t><stat>GRANT SELECT ON telecommunications_data TO analyst1</stat><divider><t>CREATE TABLE telecommunications_data (id INT PRIMARY KEY, phone_number VARCHAR(20), call_duration INT, call_date TIMESTAMP)</t><stat>grant select on telecommunications_data to analyst1</stat><divider><t>CREATE TABLE telecommunications_data (id INT PRIMARY KEY, phone_number VARCHAR(20), call_duration INT, call_date TIMESTAMP)</t><stat>GRANT INSERT, UPDATE ON telecommunications_data TO manager1</stat><divider><t>CREATE TABLE telecommunications_data (id INT PRIMARY KEY, phone_number VARCHAR(20), call_duration INT, call_date TIMESTAMP)</t><stat>grant insert, update on telecommunications_data to manager1</stat><divider><t>CREATE TABLE telecommunications_data (id INT PRIMARY KEY, phone_number VARCHAR(20), call_duration INT, call_date TIMESTAMP)</t><stat>GRANT DELETE ON telecommunications_data TO admin1</stat><divider><t>CREATE TABLE telecommunications_data (id INT PRIMARY KEY, phone_number VARCHAR(20), call_duration INT, call_date TIMESTAMP)</t><stat>grant delete on telecommunications_data to admin1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);</t><stat>GRANT SELECT ON customers TO marketing_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);</t><stat>grant select on customers to marketing_team</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);</t><stat>GRANT SELECT ON customers TO marketing_team</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);</t><stat>grant select on customers to marketing_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);</t><stat>GRANT INSERT, UPDATE ON orders TO sales_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);</t><stat>grant insert, update on orders to sales_team</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);</t><stat>GRANT INSERT, UPDATE ON orders TO sales_team</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);</t><stat>grant insert, update on orders to sales_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);</t><stat>GRANT DELETE ON orders TO admin</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);</t><stat>grant delete on orders to admin</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);</t><stat>GRANT DELETE ON orders TO admin</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT REFERENCES customers(customer_id), product_name STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING);</t><stat>grant delete on orders to admin</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>GRANT SELECT ON Customers TO sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>grant select on customers to sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>GRANT SELECT ON Customers TO sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>grant select on customers to sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>GRANT SELECT ON Customers TO sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>grant select on customers to sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>GRANT SELECT ON Customers TO sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>grant select on customers to sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>GRANT SELECT ON Customers TO sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>grant select on customers to sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>GRANT SELECT ON Customers TO sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>grant select on customers to sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>GRANT INSERT, UPDATE, DELETE ON Orders TO sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>grant insert, update, delete on orders to sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>GRANT INSERT, UPDATE, DELETE ON Orders TO sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>grant insert, update, delete on orders to sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>GRANT INSERT, UPDATE, DELETE ON Orders TO sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>grant insert, update, delete on orders to sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>GRANT INSERT, UPDATE, DELETE ON Orders TO sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>grant insert, update, delete on orders to sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>GRANT INSERT, UPDATE, DELETE ON Orders TO sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>grant insert, update, delete on orders to sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>GRANT INSERT, UPDATE, DELETE ON Orders TO sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>grant insert, update, delete on orders to sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>GRANT SELECT, UPDATE ON Products TO sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>grant select, update on products to sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>GRANT SELECT, UPDATE ON Products TO sales_team</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>grant select, update on products to sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>GRANT SELECT, UPDATE ON Products TO sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))</t><stat>grant select, update on products to sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>GRANT SELECT, UPDATE ON Products TO sales_team</stat><divider><t>CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>grant select, update on products to sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>GRANT SELECT, UPDATE ON Products TO sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))</t><stat>grant select, update on products to sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>GRANT SELECT, UPDATE ON Products TO sales_team</stat><divider><t>CREATE TABLE Products (product_id INT PRIMARY KEY, product_name VARCHAR(50), description TEXT, price DECIMAL(10, 2))

CREATE TABLE Orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))

CREATE TABLE Customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), phone_number VARCHAR(15), email VARCHAR(50))</t><stat>grant select, update on products to sales_team</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT SELECT ON TABLE customers TO user1;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant select on table customers to user1;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT INSERT, UPDATE ON TABLE plans TO user2;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant insert, update on table plans to user2;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>GRANT DELETE ON TABLE subscriptions TO user3;</stat><divider><t>CREATE TABLE calls ( call_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, call_duration INT NOT NULL, call_cost DECIMAL(10, 2) NOT NULL, call_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(customer_id) );

CREATE TABLE subscriptions ( subscription_id SERIAL PRIMARY KEY, customer_id INT NOT NULL, plan_id INT NOT NULL, start_date DATE NOT NULL, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (plan_id) REFERENCES plans(plan_id) );

CREATE TABLE plans ( plan_id SERIAL PRIMARY KEY, plan_name VARCHAR(50) NOT NULL, plan_description VARCHAR(255), plan_price DECIMAL(10, 2) NOT NULL, plan_type VARCHAR(20) );

CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, customer_name VARCHAR(50) NOT NULL, phone_number VARCHAR(15) NOT NULL, address VARCHAR(100) NOT NULL );</t><stat>grant delete on table subscriptions to user3;</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON customers TO user1</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on customers to user1</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON contracts TO user2</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on contracts to user2</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )</t><stat>grant select, insert, update, delete on invoices to user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON invoices TO user3</stat><divider><t>CREATE TABLE payments  ( payment_id INT PRIMARY KEY, invoice_id INT, amount DECIMAL(10, 2) NOT NULL, payment_date DATE NOT NULL, FOREIGN KEY (invoice_id) REFERENCES invoices(invoice_id) )

CREATE TABLE devices  ( device_id INT PRIMARY KEY, contract_id INT, model STRING NOT NULL, serial_number STRING NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE invoices  ( invoice_id INT PRIMARY KEY, contract_id INT, amount DECIMAL(10, 2) NOT NULL, due_date DATE NOT NULL, FOREIGN KEY (contract_id) REFERENCES contracts(contract_id) )

CREATE TABLE contracts  ( contract_id INT PRIMARY KEY, customer_id INT, start_date DATE NOT NULL, end_date DATE NOT NULL, FOREIGN KEY (customer_id) REFERENCES customers(id) )

CREATE TABLE customers  ( id INT PRIMARY KEY, name STRING NOT NULL, phone_number STRING NOT NULL, email STRING NOT NULL )</t><stat>grant select, insert, update, delete on invoices to user3</stat>