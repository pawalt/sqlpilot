[
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('John Doe', 'Poor service experience', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Jane Smith', 'Incorrect billing issue', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Alice Johnson', 'Product damaged on delivery', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Bob Wilson', 'Late delivery of order', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Sarah Brown', 'Defective product received', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Michael Lee', 'Missing items in order', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Emily Davis', 'Poor customer service response', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Kevin Clark', 'Wrong item shipped', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Laura Taylor', 'Delayed refund process', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Mark Evans', 'Quality issue with product', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Olivia Parker', 'Order received in damaged condition', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Ryan Adams', 'Incorrect item in shipment', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Sophia White', 'Poor handling of return request', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Nathan Miller', 'Incomplete order delivery', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Grace Wilson', 'Product not as described', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Jack Anderson', 'Faulty product received', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Ava Scott', 'Shipping delay and no updates', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Oscar Hill', 'Missing parts in package', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Lily Moore', 'Customer support unresponsive', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Henry Turner', 'Wrong size delivered', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('John Doe', 'Issue with product delivery', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Alice Smith', 'Defective item received', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Emily Brown', 'Delay in service', 'Resolved', '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Michael Johnson', 'Billing discrepancy', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Sarah Wilson', 'Product damaged during shipping', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Mark Davis', 'Incorrect item received', 'Resolved', '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Emma Rodriguez', 'Poor customer service experience', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('William Taylor', 'Missing parts in package', 'Resolved', '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Olivia Martinez', 'Late delivery', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('James Anderson', 'Quality issue with product', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Sophia Garcia', 'Unresponsive customer support', 'Resolved', '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Benjamin Hernandez', 'Incorrect billing amount', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Ethan Perez', 'Damaged packaging', 'Resolved', '2022-01-18');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Ava Lopez', 'Missing order in shipment', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Daniel Adams', 'Product not as described', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Mia Lewis', 'Poor product quality', 'Resolved', '2022-01-14');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Lucas Hall', 'Delayed response from support team', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Chloe Scott', 'Wrong item delivered', 'Resolved', '2022-01-11');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Jacob Green', 'Shipping error', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n  complaint_id SERIAL PRIMARY KEY,\n  customer_name VARCHAR(50),\n  complaint_text TEXT,\n  status VARCHAR(20) DEFAULT 'Pending',\n  resolved_date DATE\n)\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (customer_name, complaint_text, status, resolved_date) VALUES ('Isabella King', 'Damaged product on arrival', 'Pending', NULL);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('f47c5b7d-3e64-4ba6-a138-01fd9dcaf3f5', 'ee6885da-53d5-4a98-b024-a6dc792958a5', 'Internet connection issue', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('abe8ac0b-d86a-4136-bbdd-85df3fc27048', '1a200aba-0b15-4e93-ac06-325e4c4c3c68', 'Billing discrepancy', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('dbc7d1cb-ff4d-4b09-af28-d7b0c97c4830', 'f4de6c77-d409-4d0f-ad3e-7c9c92f273fc', 'Product quality concern', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('8d432905-ff6c-44ee-92f5-6ed6fceea02b', '00ea0869-0f7a-4b0d-b1c9-4aeb5de0f376', 'Delivery delay', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('8c978fe5-3f53-4c24-bf27-3f423b5c6902', '75a405b5-7bb2-4854-bc44-62eedb3d04e0', 'Service outage', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('a2b3d8e5-7a47-44c2-9287-38e09c96b424', '2aba6899-4d8e-4661-9330-97c17b27823a', 'Website error', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('a61dbd4f-52e3-47ac-968a-64b5a4a06b91', '9c1c3c91-dff7-4b1a-9c82-1ceccf6c44b0', 'Faulty product received', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('2cf63b55-308d-490f-b19c-d85aa3c8dd53', '27a68ac2-48a0-4ede-a77d-571ae08d9b6e', 'Appointment scheduling issue', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('bc1d89d8-ce70-45c2-bd4c-5c7740f4a6bc', '49e8b41e-4bb9-4813-afb8-568b07326c64', 'Incorrect billing amount', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('d3a9d13b-e6d1-4b01-b3a2-ba9b72a47d4d', '6a82be9d-1c9b-4454-aced-e1028e21c708', 'Defective product', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('9474e526-4392-4e6c-8140-2a2e0d0f48f3', 'd5f8862f-5702-44b2-aa8b-32fd01033f99', 'Late delivery', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('d178f57c-5de5-49fd-b758-e588c6dbf1c8', '338efc29-53c6-4893-bff6-c9bb0d66726f', 'Customer support issue', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('dcc61869-3736-449a-ad7d-83f23b3f7a1e', 'cb742bef-9681-4429-a6c1-0bc94b489855', 'Damaged shipment', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('805b0aa4-3325-42f7-9edf-cc349e7471f0', 'e4a4d7c7-4c5a-4020-b01b-84f3b7cee955', 'Installation problem', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('1dc68289-5839-4d1c-8d08-6de83e3d2b6f', '8337e320-ee36-4ee1-9bc7-3deb520f6732', 'Poor service quality', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('5c9964af-06c2-47da-b1b0-0b5e331cb83f', 'b6f3e96a-8cad-474f-a74f-1948fb5ed70b', 'Network connectivity issue', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('2f26568b-e4d7-4447-91fd-7e380ad9668c', '1e606787-8407-4716-9148-1c4b64f66f2a', 'Missing item in order', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('39bc0b20-29f9-46b2-ac3d-89f95e9b374d', 'e6066fa1-8fe6-4448-b7b7-0e97504e98b2', 'Technical issue', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('2f2fd2ac-2de0-4267-9bf5-00bb8f61d9a1', 'bc86d83a-34f9-4b8f-a2b2-9e7e5a8cd21c', 'Defective equipment', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('be5a0617-9413-4981-a6a2-4070fdf0349a', 'e42f6c45-6843-4ed4-914f-0ed30d47873d', 'Slow response time', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('23c507b2-8a27-4d56-9160-e6b2f50b0212', '64551ca0-7c60-4407-aeaa-bf8033d7a1fc', 'Unsatisfactory service received', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('f8976d76-d369-4e3b-a2f2-10158c2d3518', '2c45a4ea-d9ca-4d2f-b170-190f1d7b8cf4', 'Product damaged during shipping', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('7b3e7832-fdd6-47b4-a9c6-be6244040670', '12c717f5-b17f-4cf6-a037-2df43fb32695', 'Late delivery of order', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('6797bb30-0f6d-4c1c-8480-6adcf30a4c82', '54837d2c-d7ec-4b2f-97f3-900e5ae6f0e0', 'Incorrect item received', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('f9778ed6-fb9a-4d93-a032-6128a86c2505', 'c96c9223-a998-4d7b-b9ef-09fcdda70884', 'Customer service issue unresolved', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('a72373c5-e5fe-4302-9c3c-3a9a77740c46', 'b8b1cdeb-3442-40ae-8f5e-1b78e5c1b548', 'Defective product received', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('ed82f36d-11f3-4f46-94f3-f46d14b320e5', 'b8b1cdeb-3442-40ae-8f5e-1b78e5c1b548', 'Exchange request pending', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('c8946397-5481-4686-a08a-53cb2f5c1ef7', 'e8dded27-1b3c-4f2d-9193-9f59f3cec32d', 'Quality of service not up to standard', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('6819a69a-5e21-483b-bb0b-bb1419128087', 'f104f3cf-0f84-4afc-bb80-03da8075ccf2', 'Product missing from order', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('2a869b16-0d21-45b9-98ff-d70067beeaea', 'b74f427f-28f6-4011-b8da-f29df534752b', 'Damaged packaging on delivery', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('bfd74e4d-487b-4e7e-987c-1e1d8c7ea7a4', 'd58691ac-dda0-4730-8821-a2a17d49b3c9', 'Billing discrepancy in invoice', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('efd31117-3d42-4c4d-a9a4-dbfc1d3ba40c', '4f576f64-3b50-498c-809f-1dbbb00269f3', 'Damaged item received', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('c6ae87be-bbb9-4ad4-ba78-1045bddcbb52', 'b74f427f-28f6-4011-b8da-f29df534752b', 'Incorrect order fulfillment', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('09d5b0d7-ef6b-4a5d-b7eb-60fb2b82a24d', '31a9e0b0-6d68-4494-8332-8a7661551621', 'Service appointment not honored', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('c9db5640-3828-4104-8b90-88e842df0ebf', '213eae4d-adcc-4362-9e8f-e9a2cd18a8e1', 'Order cancellation not processed', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('866c81bc-5c91-4c92-81b5-5c90543491b5', '5bbd0888-9207-4878-abc5-d74184c1f4b1', 'Refund not received for returned item', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('3a13e17e-375d-4c60-9bc4-fab0edcfa21e', '9a26ec41-4545-41c8-96be-80a21827b008', 'Poor customer service experience', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('0fa7197b-3727-4475-bbed-01eaacb5f6ca', '77e845f0-9dcd-4945-bb57-2c00e0053c3e', 'Defective product replacement awaited', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n    complaint_id UUID PRIMARY KEY,\n    customer_id UUID NOT NULL,\n    complaint_text TEXT NOT NULL,\n    status VARCHAR(50) DEFAULT 'Open',\n    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nCREATE TABLE resolutions (\n    resolution_id UUID PRIMARY KEY,\n    complaint_id UUID NOT NULL,\n    resolver_id UUID NOT NULL,\n    resolution_text TEXT NOT NULL,\n    resolution_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO complaints (complaint_id, customer_id, complaint_text, status, timestamp) VALUES ('56e6e190-f15f-461f-92ea-54709b646aad', '71ddb582-94fc-4737-a695-212a2b8c11b1', 'Late refund processing for returned item', 'Open', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (1, 101, 'Slow service', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (2, 102, 'Incorrect billing', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (3, 103, 'Product damaged on delivery', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (4, 104, 'Late delivery', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (5, 105, 'Defective product', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (6, 106, 'Missing item in order', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (7, 107, 'Rude customer service', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (8, 108, 'Wrong product delivered', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (9, 109, 'Package not received', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (10, 110, 'Defective packaging', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (11, 111, 'Missing accessories', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (12, 112, 'Late response from customer service', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (13, 113, 'Damaged during shipping', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (14, 114, 'Billing discrepancy', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (15, 115, 'Poor quality product', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (16, 116, 'Out of stock item', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (17, 117, 'Unresponsive customer service', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (18, 118, 'Wrong item color', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (19, 119, 'Late refund', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (20, 120, 'Missing order', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (1, 101, 'Poor service', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (2, 102, 'Wrong order', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (3, 103, 'Late delivery', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (4, 104, 'Damaged product', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (5, 105, 'Missing items', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (6, 106, 'Billing issue', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (7, 107, 'Product not as described', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (8, 108, 'Customer service unresponsive', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (9, 109, 'Refund not processed', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (10, 110, 'Quality issue', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (11, 111, 'Order cancellation problem', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (12, 112, 'Late response from support', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (13, 113, 'Product damaged in transit', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (14, 114, 'Size mismatch', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (15, 115, 'Installation issue', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (16, 116, 'Wrong color', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (17, 117, 'Late response to query', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (18, 118, 'Poor packaging', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (19, 119, 'Faulty product', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE customer_complaints (\n\tcomplaint_id INT PRIMARY KEY,\n\tcustomer_id INT,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50)\n);\n\n\nCREATE TABLE complaints_history (\n\tcomplaint_id INT,\n\tresolved_by_id INT,\n\tresolved_date DATE,\n\tresolution_details TEXT,\n\tFOREIGN KEY (complaint_id) REFERENCES customer_complaints(complaint_id)\n);\n\n\nCREATE TABLE employees (\n\temp_id INT PRIMARY KEY,\n\temp_name VARCHAR(50),\n\temail VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customer_complaints (complaint_id, customer_id, complaint_text, status) VALUES (20, 120, 'Exchange request', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (1, 'John Doe', 'Slow service', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (2, 'Jane Smith', 'Incorrect billing', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (3, 'Alice Johnson', 'Product damaged during delivery', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (4, 'Bob Brown', 'Late delivery', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (5, 'Emily Davis', 'Poor customer service', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (6, 'Michael Wilson', 'Missing items in order', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (7, 'Sarah Lee', 'Defective product received', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (8, 'David Moore', 'Package not delivered', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (9, 'Olivia Taylor', 'Rude staff behavior', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (10, 'William Anderson', 'Wrong order received', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (1, 2, 'Billing issue resolved, refund processed', 'Customer Support', '2022-07-15');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (2, 4, 'Delivery rescheduled, apology letter sent', 'Logistics Department', '2022-07-18');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (3, 6, 'Missing items re-shipped, compensation provided', 'Customer Support', '2022-07-20');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (4, 7, 'Replacement product shipped, return label provided', 'Operations Team', '2022-07-22');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (5, 9, 'Customer offered discount on next purchase', 'Customer Support', '2022-07-25');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (1, 'Shipping Issues');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (2, 'Product Quality');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (3, 'Customer Service');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (4, 'Billing Problems');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (5, 'Order Accuracy');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (1, 1, 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (2, 2, 4);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (3, 3, 1);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (4, 4, 1);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (5, 5, 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (6, 6, 5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (7, 7, 2);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (8, 8, 1);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (9, 9, 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (10, 10, 5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (1, 'John Doe', 'Poor service experience', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (2, 'Alice Smith', 'Product not as described', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (1, 1, 'Offered discount on next purchase', 'Customer Service', '2022-07-15');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (2, 2, 'Refund processed', 'Manager', '2022-07-20');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (1, 'Billing Issues');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (2, 'Product Quality');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (1, 1, 1);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (2, 2, 2);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (3, 'Emily Brown', 'Late delivery of order', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (4, 'Mike Johnson', 'Missing items in package', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (3, 3, 'Apology letter sent', 'Customer Service', '2022-07-18');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (4, 4, 'Replacement items shipped', 'Manager', '2022-07-22');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (3, 'Shipping Problems');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (4, 'Product Defects');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (3, 3, 3);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (4, 4, 4);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (5, 'Sarah Lee', 'Poor customer service', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerComplaints (complaint_id, customer_name, complaint_text, status) VALUES (6, 'David Miller', 'Incorrect billing amount', 'Open');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (5, 5, 'Complimentary voucher issued', 'Customer Service', '2022-07-19');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintResolution (resolution_id, complaint_id, resolution_text, resolved_by, resolution_date) VALUES (6, 6, 'Billing error corrected', 'Accounting Department', '2022-07-21');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (5, 'Customer Service');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintCategories (category_id, category_name) VALUES (6, 'Billing Discrepancy');",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (5, 5, 5);",
  "### TABLEDATA\n\nCREATE TABLE CustomerComplaints (\n    complaint_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    complaint_text TEXT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE ComplaintResolution (\n    resolution_id INT PRIMARY KEY,\n    complaint_id INT,\n    resolution_text TEXT,\n    resolved_by VARCHAR(50),\n    resolution_date DATE,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id)\n);\n\nCREATE TABLE ComplaintCategories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n);\n\nCREATE TABLE ComplaintMapping (\n    mapping_id INT PRIMARY KEY,\n    complaint_id INT,\n    category_id INT,\n    FOREIGN KEY (complaint_id) REFERENCES CustomerComplaints(complaint_id),\n    FOREIGN KEY (category_id) REFERENCES ComplaintCategories(category_id)\n);\n\n### STATEMENT\n\nINSERT INTO ComplaintMapping (mapping_id, complaint_id, category_id) VALUES (6, 6, 6);",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (1, 'Late delivery', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (2, 'Wrong item received', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (3, 'Defective product', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (4, 'Poor customer service', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (5, 'Billing error', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email) VALUES ('Alice', 'alice@example.com');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email) VALUES ('Bob', 'bob@example.com');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email) VALUES ('Charlie', 'charlie@example.com');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email) VALUES ('David', 'david@example.com');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email) VALUES ('Eve', 'eve@example.com');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (complaint_id, date_resolved, resolved_by) VALUES (1, '2022-10-15 10:00:00', 'Customer Support');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (complaint_id, date_resolved, resolved_by) VALUES (2, '2022-10-16 11:30:00', 'Manager John');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (complaint_id, date_resolved, resolved_by) VALUES (3, '2022-10-17 09:45:00', 'Support Agent Jane');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (complaint_id, date_resolved, resolved_by) VALUES (4, '2022-10-18 14:15:00', 'Manager Alice');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (complaint_id, date_resolved, resolved_by) VALUES (5, '2022-10-19 16:30:00', 'Customer Support');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO employees (emp_name, emp_department) VALUES ('John Doe', 'Customer Service');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO employees (emp_name, emp_department) VALUES ('Jane Smith', 'Operations');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO employees (emp_name, emp_department) VALUES ('Alice Johnson', 'Customer Support');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO employees (emp_name, emp_department) VALUES ('Bob Brown', 'Operations');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO employees (emp_name, emp_department) VALUES ('Eve White', 'Customer Service');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_name, department_manager) VALUES ('Customer Service', 'Alice Johnson');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO departments (department_name, department_manager) VALUES ('Operations', 'Bob Brown');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (1, 'Faulty product received', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (2, 'Late delivery', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (3, 'Damaged package', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (1, 'Incorrect item received', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (2, 'Missing parts in package', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (4, 'Poor customer service', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (5, 'Defective product', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (3, 'Billing issue', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (4, 'Wrong size product', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (6, 'Product not as described', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (5, 'Refund not processed', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (7, 'Poor product quality', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (8, 'Shipping delay', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (6, 'Item damaged during shipping', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (7, 'Product expired', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (9, 'Item missing from order', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (8, 'Wrong color product', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (10, 'Item not received', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (9, 'Size issue with clothing', 'Resolved');",
  "### TABLEDATA\n\nCREATE TABLE complaints (\n\tcomplaint_id SERIAL PRIMARY KEY,\n\tcustomer_id INT NOT NULL,\n\tcomplaint_text TEXT,\n\tstatus VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE customers (\n\tcustomer_id SERIAL PRIMARY KEY,\n\tcustomer_name VARCHAR(100) NOT NULL,\n\tcustomer_email VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE resolutions (\n\tresolution_id SERIAL PRIMARY KEY,\n\tcomplaint_id INT NOT NULL,\n\tdate_resolved TIMESTAMP,\n\tresolved_by VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE employees (\n\temp_id SERIAL PRIMARY KEY,\n\temp_name VARCHAR(100) NOT NULL,\n\temp_department VARCHAR(100)\n);\n\nCREATE TABLE departments (\n\tdepartment_id SERIAL PRIMARY KEY,\n\tdepartment_name VARCHAR(100) NOT NULL,\n\tdepartment_manager VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO complaints (customer_id, complaint_text, status) VALUES (11, 'Product damaged on arrival', 'Pending');"
]