[
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, caller_number, receiver_number FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration FROM call_logs WHERE call_duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, call_timestamp, call_type FROM call_logs WHERE call_timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT caller_number FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, caller_number, receiver_number, call_duration, call_type FROM call_logs WHERE call_type = 'Incoming';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS average_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT MAX(call_duration) AS max_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT MIN(call_duration) AS min_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT COUNT(call_id) AS total_calls FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, caller_number, receiver_number, call_duration FROM call_logs ORDER BY call_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, COUNT(*) AS call_count FROM call_logs GROUP BY caller_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, AVG(call_duration) AS average_duration FROM call_logs GROUP BY caller_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, caller_number, call_timestamp FROM call_logs WHERE caller_number LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE receiver_number IN ('9876543210', '8765432109');",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, receiver_number, call_timestamp FROM call_logs WHERE receiver_number = '8765432109';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT call_type FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT DATE(call_timestamp) AS call_date FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, SUM(call_duration) AS total_duration FROM call_logs GROUP BY caller_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, call_timestamp, call_type FROM call_logs WHERE call_type = 'Outgoing' ORDER BY call_timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE call_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration FROM call_logs WHERE call_type = 'Incoming';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS avg_duration FROM call_logs GROUP BY caller_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, COUNT(*) AS call_count FROM call_logs GROUP BY caller_number HAVING call_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT caller_number, receiver_number FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, SUM(call_duration) AS total_duration FROM call_logs GROUP BY caller_number, receiver_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, MAX(call_duration) AS max_duration FROM call_logs GROUP BY caller_number, receiver_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, MIN(call_duration) AS min_duration FROM call_logs GROUP BY caller_number, receiver_number;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, AVG(call_duration) AS avg_duration FROM call_logs GROUP BY caller_number, receiver_number HAVING avg_duration > 100;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT call_id, caller_number, receiver_number, call_timestamp FROM call_logs WHERE call_type = 'Missed' AND call_duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT caller_number, receiver_number, call_type FROM call_logs WHERE caller_number IN ('1234567890', '9876543210');",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, COUNT(*) AS call_count FROM call_logs WHERE call_type = 'Outgoing' GROUP BY caller_number, receiver_number HAVING call_count > 3;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, ROUND(AVG(call_duration), 2) AS avg_duration FROM call_logs GROUP BY caller_number, receiver_number ORDER BY avg_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration, call_timestamp FROM call_logs WHERE DATE(call_timestamp) = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration, call_timestamp FROM call_logs WHERE WEEK(call_timestamp) = WEEK(NOW());",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration, call_timestamp FROM call_logs WHERE MONTH(call_timestamp) = MONTH(NOW());",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration, call_timestamp FROM call_logs WHERE YEAR(call_timestamp) = YEAR(NOW());",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_duration, call_timestamp FROM call_logs WHERE DATE(call_timestamp) BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, call_timestamp, call_type FROM call_logs WHERE call_timestamp BETWEEN '2022-01-01' AND '2022-01-31' AND call_type = 'Incoming';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_number VARCHAR(10),\n  receiver_number VARCHAR(10),\n  call_duration INT,\n  call_timestamp TIMESTAMP,\n  call_type VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT caller_number, receiver_number, AVG(call_duration) AS avg_duration FROM call_logs WHERE caller_number = '1234567890' GROUP BY caller_number, receiver_number HAVING avg_duration > 50;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT call_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT call_timestamp FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_frequency FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT last_call_timestamp FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT call_duration_avg FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_frequency, last_call_timestamp FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration, call_timestamp FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, call_frequency, last_call_timestamp, call_duration_avg FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration, call_timestamp, customer_id, call_frequency, last_call_timestamp, call_duration_avg FROM call_logs, customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE caller_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE caller_id = 123 AND receiver_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE call_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE customer_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE call_frequency > 10;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE last_call_timestamp < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE call_duration_avg > 5;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id FROM call_logs WHERE call_duration > 10 ORDER BY call_timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration FROM call_logs WHERE caller_id = 1 AND receiver_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.call_frequency, cb.call_duration_avg FROM customer_behavior c JOIN call_logs cb ON c.customer_id = cb.caller_id WHERE c.call_frequency > 50;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.call_frequency, cb.call_duration_avg FROM customer_behavior c LEFT JOIN call_logs cb ON c.customer_id = cb.caller_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.call_frequency, cb.call_duration_avg FROM customer_behavior c RIGHT JOIN call_logs cb ON c.customer_id = cb.caller_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(call_duration) AS avg_duration FROM call_logs GROUP BY customer_id HAVING avg_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_timestamp TIMESTAMP\n);\n\nCREATE TABLE customer_behavior (\n  customer_id INT,\n  call_frequency INT,\n  last_call_timestamp TIMESTAMP,\n  call_duration_avg FLOAT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.call_frequency, cb.call_duration_avg FROM customer_behavior c JOIN (SELECT caller_id, AVG(call_duration) AS avg_duration FROM call_logs GROUP BY caller_id HAVING AVG(call_duration) > 20...",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM CallLogs WHERE call_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT call_timestamp, caller_phone_number FROM CallLogs WHERE call_duration > 60;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone_number FROM Customers WHERE customer_email = 'example@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_phone_number LIKE '123%';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, call_type FROM Customers c JOIN CallPatterns p ON c.customer_id = p.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM CallPatterns WHERE call_frequency > 10 ORDER BY call_frequency DESC;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone_number, call_duration FROM Customers c JOIN CallLogs l ON c.customer_phone_number = l.caller_phone_number;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_name LIKE '%John%' ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT pattern_id, call_type FROM CallPatterns WHERE call_type = 'Missed Call';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) FROM CallLogs;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(call_duration) FROM Customers c JOIN CallLogs l ON c.customer_phone_number = l.caller_phone_number GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT pattern_id, customer_name, call_type FROM CallPatterns p JOIN Customers c ON p.customer_id = c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT SUM(call_duration) FROM CallLogs;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_phone_number = '9876543210';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM CallLogs WHERE call_timestamp >= '2022-01-01' AND call_timestamp < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, call_timestamp FROM Customers c JOIN CallLogs l ON c.customer_phone_number = l.caller_phone_number AND c.customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT caller_phone_number) FROM CallLogs;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(call_duration) FROM Customers c JOIN CallLogs l ON c.customer_phone_number = l.caller_phone_number GROUP BY customer_name HAVING AVG(call_duration) > 30;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM CallLogs WHERE call_timestamp BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT caller_phone_number, call_duration FROM CallLogs WHERE call_duration > 300;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone_number FROM Customers WHERE customer_email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT pattern_id, call_type FROM CallPatterns WHERE call_frequency > 10;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cp.call_type FROM Customers c INNER JOIN CallPatterns cp ON c.customer_id = cp.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM CallLogs ORDER BY call_timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT caller_phone_number, MAX(call_duration) AS max_duration FROM CallLogs GROUP BY caller_phone_number;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_phone_number FROM Customers WHERE customer_phone_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cl.call_timestamp FROM Customers c INNER JOIN CallLogs cl ON c.customer_phone_number = cl.caller_phone_number;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT cp.call_type, COUNT(*) AS call_count FROM CallPatterns cp INNER JOIN CallLogs cl ON cp.customer_id = cl.caller_phone_number GROUP BY cp.call_type;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_name = 'John Doe' AND customer_email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_phone_number IN (SELECT caller_phone_number FROM CallLogs);",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS avg_duration FROM CallLogs;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(call_duration) AS total_duration FROM Customers c INNER JOIN CallLogs cl ON c.customer_phone_number = cl.caller_phone_number GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, cl.call_timestamp FROM Customers c INNER JOIN CallLogs cl ON c.customer_phone_number = cl.call_result = 'SUCCESS';",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT cp.call_type, AVG(call_duration) AS avg_duration FROM CallPatterns cp INNER JOIN CallLogs cl ON cp.customer_id = cl.caller_phone_number GROUP BY cp.call_type;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone_number, MAX(call_duration) AS max_duration FROM Customers c INNER JOIN CallLogs cl ON c.customer_phone_number = cl.caller_phone_number GROUP BY customer_name, customer_phone_number;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE LENGTH(customer_email) > 15;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS avg_duration FROM CallLogs WHERE EXTRACT(MONTH FROM call_timestamp) = 5;",
  "### TABLEDATA\n\nCREATE TABLE CallLogs (\n  call_id UUID PRIMARY KEY,\n  call_timestamp TIMESTAMP,\n  caller_phone_number VARCHAR,\n  call_duration INT\n);\n\nCREATE TABLE Customers (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR,\n  customer_phone_number VARCHAR UNIQUE,\n  customer_email VARCHAR\n);\n\nCREATE TABLE CallPatterns (\n  pattern_id UUID PRIMARY KEY,\n  customer_id UUID,\n  call_type VARCHAR,\n  call_frequency INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(*) AS call_count FROM Customers c INNER JOIN CallLogs cl ON c.customer_phone_number = cl.caller_phone_number GROUP BY c.customer_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration FROM call_logs WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE phone_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM call_patterns;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT pattern_id, call_type, average_duration FROM call_patterns WHERE average_duration < 30;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT behavior_id, behavior_description, behavior_date FROM customer_behavior WHERE behavior_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT call_logs.call_id, customers.name, call_logs.call_date FROM call_logs JOIN customers ON call_logs.caller_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT customers.name, call_patterns.call_type, customer_behavior.behavior_description FROM customers JOIN call_patterns ON customers.customer_id = call_patterns.pattern_id JOIN customer_behavior ON customers.customer_id = customer_behavior.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs ORDER BY call_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM call_patterns ORDER BY average_duration ASC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior ORDER BY behavior_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS avg_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(average_duration) AS max_avg_duration FROM call_patterns;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(behavior_date) AS min_behavior_date FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT call_type FROM call_patterns;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS avg_duration_per_customer FROM call_logs GROUP BY caller_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE caller_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration FROM call_logs WHERE call_date >= '2022-01-01' AND call_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.name, c.email, cp.call_type, cp.average_duration FROM customers c JOIN call_patterns cp ON c.customer_id = cp.pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT cl.call_id, cl.call_duration, cb.behavior_description FROM call_logs cl JOIN customer_behavior cb ON cl.caller_id = cb.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT ca.call_date FROM call_logs ca WHERE ca.call_duration >= 60;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM customers WHERE phone_number LIKE '+1%';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, SUM(call_duration) AS total_duration FROM call_logs GROUP BY caller_id, receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT cb.customer_id, cb.behavior_description, COUNT(*) AS behavior_count FROM customer_behavior cb GROUP BY cb.customer_id, cb.behavior_description;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.name, c.email, cb.behavior_description FROM customers c JOIN customer_behavior cb ON c.customer_id = cb.customer_id WHERE cb.behavior_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT cp.call_type, AVG(cp.average_duration) AS avg_duration FROM call_patterns cp GROUP BY cp.call_type;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(call_duration) AS longest_call FROM call_logs GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.name, cp.call_type, cb.behavior_description FROM customers c JOIN call_patterns cp ON c.customer_id = cp.pattern_id JOIN customer_behavior cb ON c.customer_id = cb.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE call_date BETWEEN '2021-10-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(cl.call_duration) AS total_duration FROM customers c JOIN call_logs cl ON c.customer_id = cl.caller_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.name, cp.call_type, COUNT(*) AS call_count FROM customers c JOIN call_logs cl ON c.customer_id = cl.caller_id JOIN call_patterns cp ON cl.call_duration > cp.average_duration GROUP BY c.name, cp.call_type;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.name AS caller_name, COUNT(DISTINCT cl.receiver_id) AS unique_receivers FROM customers c JOIN call_logs cl ON c.customer_id = cl.caller_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT cb.behavior_description, COUNT(*) AS behavior_count FROM customer_behavior cb WHERE cb.behavior_date BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY cb.behavior_description;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(cl.call_duration) AS avg_call_duration FROM customers c JOIN call_logs cl ON c.customer_id = cl.caller_id GROUP BY c.name HAVING AVG(cl.call_duration) > 50;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.name, SUM(cp.average_duration) AS total_avg_duration FROM customers c JOIN call_patterns cp ON c.customer_id = cp.pattern_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n  call_id INT PRIMARY KEY,\n  caller_id INT,\n  receiver_id INT,\n  call_duration INT,\n  call_date DATE\n);\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE call_patterns (\n  pattern_id INT PRIMARY KEY,\n  call_type TEXT,\n  average_duration INT\n);\n\nCREATE TABLE customer_behavior (\n  behavior_id INT PRIMARY KEY,\n  customer_id INT,\n  behavior_description TEXT,\n  behavior_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.name, cb2.behavior_description FROM customers c JOIN customer_behavior cb1 ON c.customer_id = cb1.customer_id JOIN customer_behavior cb2 ON cb1.customer_id = cb2.customer_id AND cb1.behavior_date < cb2.behavior_date;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id FROM call_logs WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT call_id, call_time FROM call_logs WHERE caller_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customer WHERE registration_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_patterns;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT pattern_description, occurrence_count FROM call_patterns WHERE associated_customer_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_ratings;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT call_id, rating FROM call_ratings WHERE rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_history;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT caller_id, receiver_id, call_duration FROM call_history WHERE call_time >= '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE call_time BETWEEN '2022-01-01 00:00:00' AND '2022-01-31 23:59:59';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_patterns WHERE pattern_description ILIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_ratings WHERE feedback IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT caller_id FROM call_history;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS avg_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(call_duration) AS max_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(call_duration) AS min_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_calls FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT call_id, call_duration FROM call_logs WHERE call_duration > 10;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE registration_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name, customer.email, call_logs.call_time FROM customer JOIN call_logs ON customer.customer_id = call_logs.caller_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_patterns WHERE occurrence_count > 5 ORDER BY pattern_description ASC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT caller_id, receiver_id FROM call_logs WHERE call_duration < 30;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT call_logs.call_id, call_ratings.rating FROM call_logs LEFT JOIN call_ratings ON call_logs.call_id = call_ratings.call_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_calls FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name, COUNT(call_logs.call_id) AS total_calls FROM customer LEFT JOIN call_logs ON customer.customer_id = call_logs.caller_id GROUP BY customer.name;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name AS caller_name, call_history.call_time AS last_call_time FROM call_history JOIN customer ON call_history.caller_id = customer.customer_id GROUP BY caller_name ORDER BY last_call_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customer WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT pattern_description, COUNT(*) AS total_occurrences FROM call_patterns GROUP BY pattern_description HAVING total_occurrences > 3;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(call_duration) AS average_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name, AVG(call_logs.call_duration) AS average_call_duration FROM customer JOIN call_logs ON customer.customer_id = call_logs.caller_id GROUP BY customer.name;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name AS caller_name, call_history.receiver_id AS receiver_id, COUNT(call_history.call_id) AS total_calls FROM call_history JOIN customer ON call_history.caller_id = customer.customer_id GROUP BY caller_name, receiver_id;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(call_duration) AS longest_call_duration FROM call_logs;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name AS receiver_name, SUM(call_logs.call_duration) AS total_duration FROM customer JOIN call_logs ON customer.customer_id = call_logs.receiver_id GROUP BY receiver_name ORDER BY total_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name, AVG(call_ratings.rating) AS average_rating FROM customer JOIN call_ratings ON customer.customer_id = call_ratings.call_id GROUP BY customer.name;",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM call_logs WHERE call_time BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE call_logs (\n    call_id UUID PRIMARY KEY,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n\nCREATE TABLE customer (\n    customer_id UUID PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    registration_date DATE\n);\n\n\nCREATE TABLE call_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    associated_customer_id UUID,\n    occurrence_count INT\n);\n\n\nCREATE TABLE call_ratings (\n    rating_id UUID PRIMARY KEY,\n    call_id UUID,\n    rating INT,\n    feedback TEXT\n);\n\n\nCREATE TABLE call_history (\n    history_id UUID PRIMARY KEY,\n    call_id UUID,\n    caller_id UUID,\n    receiver_id UUID,\n    call_duration INT,\n    call_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer.name, call_ratings.feedback FROM customer JOIN call_ratings ON customer.customer_id = call_ratings.call_id WHERE call_ratings.rating > 3 ORDER BY customer.name;"
]