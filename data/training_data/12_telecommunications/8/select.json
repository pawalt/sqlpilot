[
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, usage_amount FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, service_provided FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, usage_amount, billing_date FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, usage_amount FROM billing_invoicing WHERE billing_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, service_provided FROM billing_invoicing WHERE usage_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, billing_date FROM billing_invoicing WHERE service_provided = 'Internet';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, usage_amount FROM billing_invoicing WHERE service_provided = 'Phone' AND billing_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, service_provided FROM billing_invoicing WHERE billing_date >= '2022-01-01' AND billing_date <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing WHERE usage_amount < 50 OR usage_amount > 200;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, billing_date FROM billing_invoicing WHERE customer_name IN ('Alice', 'Bob', 'Eve');",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, service_provided FROM billing_invoicing WHERE service_provided IN ('Internet', 'Phone');",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing WHERE billing_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, usage_amount FROM billing_invoicing ORDER BY usage_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, service_provided FROM billing_invoicing ORDER BY billing_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, billing_date FROM billing_invoicing ORDER BY billing_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(customer_id) FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount FROM billing_invoicing WHERE billing_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM billing_invoicing WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, service_provided FROM billing_invoicing WHERE usage_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(customer_id) AS total_customers FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, service_provided FROM billing_invoicing WHERE billing_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(usage_amount) AS avg_usage FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(usage_amount) AS total_usage FROM billing_invoicing GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT service_provided FROM billing_invoicing;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount, service_provided, billing_date FROM billing_invoicing ORDER BY billing_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount, service_provided, billing_date FROM billing_invoicing ORDER BY usage_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount, service_provided, billing_date FROM billing_invoicing LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount, service_provided, billing_date FROM billing_invoicing OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount, service_provided, billing_date FROM billing_invoicing LIMIT 5 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(usage_amount) AS avg_usage FROM billing_invoicing GROUP BY customer_name HAVING avg_usage > 500;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount FROM billing_invoicing WHERE service_provided IN ('Service A', 'Service B');",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, usage_amount FROM billing_invoicing WHERE service_provided NOT IN ('Service C');",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS num_transactions FROM billing_invoicing GROUP BY customer_name HAVING num_transactions > 2;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, MAX(usage_amount) AS max_usage FROM billing_invoicing GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_name, MIN(usage_amount) AS min_usage FROM billing_invoicing GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE billing_invoicing (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255),\n    usage_amount DECIMAL,\n    service_provided VARCHAR(255),\n    billing_date DATE\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, AVG(usage_amount) AS avg_usage FROM billing_invoicing GROUP BY customer_id HAVING avg_usage > 2000;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT bill_id, customer_id, usage_type FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT service_type FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing WHERE usage_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Invoice;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT invoice_id, total_amount FROM Invoice;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Invoice WHERE payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing JOIN Invoice ON Billing.bill_id = Invoice.bill_id;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT b.bill_id, b.customer_id, i.total_amount FROM Billing b JOIN Invoice i ON b.bill_id = i.bill_id;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing WHERE service_type = 'Internet';",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SUM(usage_amount) AS total_usage_amount FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(total_amount) AS average_total_amount FROM Invoice;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_billing_records FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(total_amount) AS max_total_amount FROM Invoice;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(usage_amount) AS min_usage_amount FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing ORDER BY usage_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Invoice ORDER BY total_amount ASC;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT service_type, AVG(usage_amount) AS avg_usage_amount FROM Billing GROUP BY service_type;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_invoices FROM Invoice GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing WHERE usage_amount BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT service_type, SUM(service_fee) AS total_service_fees FROM Billing GROUP BY service_type;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing INNER JOIN Invoice ON Billing.bill_id = Invoice.bill_id WHERE Billing.usage_amount > 1000 AND Invoice.payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, usage_type, total_amount FROM Billing INNER JOIN Invoice ON Billing.bill_id = Invoice.bill_id WHERE Invoice.total_amount > Billing.usage_amount * Billing.service_fee;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM Billing WHERE customer_id NOT IN (SELECT customer_id FROM Invoice WHERE payment_status = 'Paid');",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT service_type, SUM(usage_amount) AS total_usage FROM Billing GROUP BY service_type ORDER BY total_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT billing.bill_id, total_amount FROM Billing LEFT JOIN Invoice ON Billing.bill_id = Invoice.bill_id WHERE Invoice.bill_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(usage_amount) AS avg_usage, AVG(service_fee) AS avg_fee FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT service_type FROM Billing UNION SELECT usage_type FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT bill_id, customer_id, usage_type, service_type, (usage_amount * service_fee) AS total_cost FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing WHERE usage_type = 'Social Media' AND usage_amount > 500 ORDER BY usage_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(total_amount) AS highest_total_amount FROM Invoice GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Invoice WHERE total_amount > (SELECT AVG(total_amount) FROM Invoice);",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT service_type, COUNT(*) AS billing_count FROM Billing GROUP BY service_type HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_amount) AS total_spent FROM Invoice GROUP BY customer_id ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing WHERE usage_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(total_amount) AS avg_total FROM Invoice GROUP BY customer_id HAVING AVG(total_amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT service_type FROM Billing WHERE service_type LIKE '%Hosting%';",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Billing WHERE customer_id IN (SELECT customer_id FROM Invoice WHERE payment_status = 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT bill_id, usage_amount, service_fee, usage_amount * service_fee AS total_fee FROM Billing;",
  "### TABLEDATA\n\nCREATE TABLE Billing (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  usage_type VARCHAR(50),\n  service_type VARCHAR(50),\n  usage_amount DECIMAL,\n  service_fee DECIMAL\n);\n\nCREATE TABLE Invoice (\n  invoice_id INT PRIMARY KEY,\n  bill_id INT,\n  total_amount DECIMAL,\n  payment_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, usage_type, SUM(total_amount) AS total_spent FROM Billing INNER JOIN Invoice ON Billing.bill_id = Invoice.bill_id GROUP BY customer_id, usage_type;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT * FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT service_id, service_name FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT service_id, service_description FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT * FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT record_id, customer_id FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT record_id, service_id FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT record_id, usage_date FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT record_id, usage_quantity FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_id, customers.customer_name, services.service_name, usage_records.usage_quantity FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, usage_records.usage_quantity FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT services.service_name, usage_records.usage_quantity FROM services JOIN usage_records ON services.service_id = usage_records.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, usage_records.usage_date, services.service_name FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, MAX(usage_records.usage_quantity) AS max_usage FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT services.service_name, SUM(usage_records.usage_quantity) AS total_usage FROM services JOIN usage_records ON services.service_id = usage_records.service_id GROUP BY services.service_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, services.service_name, usage_records.usage_date, usage_records.usage_quantity FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE customers.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, services.service_name, usage_records.usage_date, usage_records.usage_quantity FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE services.service_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, services.service_name, usage_records.usage_date, usage_records.usage_quantity FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE usage_records.usage_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customer_name FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE address IS NOT NULL AND address <> '';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id JOIN services s ON ur.service_id = s.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.customer_name FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id WHERE ur.usage_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.service_name, ur.usage_date FROM customers c, services s, usage_records ur WHERE c.customer_id = ur.customer_id AND s.service_id = ur.service_id AND ur.usage_date >= '2022-01-01' AND ur.usage_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.service_name FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id JOIN services s ON ur.service_id = s.service_id WHERE s.service_description LIKE '%cloud%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(ur.record_id) AS Number_of_Records FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(ur.record_id) AS Number_of_Records FROM customers c LEFT JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name HAVING COUNT(ur.record_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(ur.usage_quantity) AS Total_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(ur.usage_quantity) AS Max_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MIN(ur.usage_quantity) AS Min_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(ur.usage_quantity) AS Avg_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(ur.usage_date) AS Latest_Usage_Date FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MIN(ur.usage_date) AS Earliest_Usage_Date FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(DISTINCT ur.service_id) AS Number_of_Services_Used FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, service_name, SUM(usage_quantity) AS Total_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id JOIN services s ON ur.service_id = s.service_id GROUP BY c.customer_name, service_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, service_name, AVG(usage_quantity) AS Avg_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id JOIN services s ON ur.service_id = s.service_id GROUP BY c.customer_name, service_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(ur.record_id) AS Number_of_Records, MAX(ur.usage_date) AS Latest_Usage_Date, AVG(ur.usage_quantity) AS Avg_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_description TEXT\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    service_id INT NOT NULL,\n    usage_date DATE NOT NULL,\n    usage_quantity INT NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, service_name, COUNT(ur.record_id) AS Number_of_Records, MAX(ur.usage_date) AS Latest_Usage_Date, AVG(usage_quantity) AS Avg_Usage FROM customers c JOIN usage_records ur ON c.customer_id = ur.customer_id JOIN services s ON ur.service_id = s.service_id GROUP BY c.customer_name, service_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT service_name, service_description FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT service_id, service_price FROM services WHERE service_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, service_id, usage_date FROM usage_records WHERE usage_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM invoices;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, invoice_date, total_amount FROM invoices WHERE total_amount < 100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, service_name, service_price FROM customers c INNER JOIN services s ON c.customer_id = s.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, s.service_name, u.usage_date FROM customers c INNER JOIN services s ON c.customer_id = s.service_id INNER JOIN usage_records u ON c.customer_id = u.customer_id WHERE u.usage_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, i.invoice_date, i.total_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id WHERE i.total_amount > 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, s.service_name, u.usage_date, i.total_amount FROM customers c INNER JOIN services s ON c.customer_id = s.service_id INNER JOIN usage_records u ON c.customer_id = u.customer_id INNER JOIN invoices i ON c.customer_id = i.customer_id WHERE u.usage_date >= '2022-01-01' AND i.total_amount < 500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, i.total_amount FROM customers c LEFT JOIN invoices i ON c.customer_id = i.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT s.service_name, u.usage_hours FROM services s INNER JOIN usage_records u ON s.service_id = u.service_id WHERE u.usage_hours > 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT c.customer_name, i.total_amount FROM customers c LEFT JOIN invoices i ON c.customer_id = i.customer_id WHERE i.invoice_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT service_name, service_description, service_price FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT invoice_date, total_amount FROM invoices;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM services WHERE service_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name FROM customers INNER JOIN services ON customers.customer_id = services.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, total_amount FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, invoice_date FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id WHERE invoice_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, total_amount FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id WHERE total_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN usage_records ON customers.customer_id = usage_records.customer_id WHERE usage_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_hours, total_amount FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN usage_records ON customers.customer_id = usage_records.customer_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, service_description FROM customers INNER JOIN services ON customers.customer_id = services.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, invoice_date FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON invoice_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, total_amount FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id WHERE service_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, total_amount FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN usage_records ON customers.customer_id = usage_records.customer_id WHERE usage_hours >= 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, invoice_date FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id WHERE total_amount < 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, invoice_date FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id WHERE invoice_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_hours FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN usage_records ON customers.customer_id = usage_records.customer_id WHERE service_price > 200;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_description TEXT,\n    service_price DECIMAL(10, 2)\n)\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    usage_date DATE,\n    usage_hours INT\n)\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_name, service_name, total_amount FROM customers INNER JOIN services ON customers.customer_id = services.service_id INNER JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customer_name, service_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT service_name, service_fee FROM services;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT record_id, customer_id, service_id FROM usage_records;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM invoices;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT invoice_id, customer_id, invoice_date FROM invoices;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_id, invoice_id, payment_date FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT service_name, service_fee FROM services WHERE service_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date, usage_amount FROM customers c INNER JOIN usage_records u ON c.customer_id = u.customer_id INNER JOIN services s ON u.service_id = s.service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, invoice_date, total_amount FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT invoice_date, total_amount, payment_date, payment_amount FROM invoices i INNER JOIN payments p ON i.invoice_id = p.invoice_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date, usage_amount FROM customers c INNER JOIN usage_records u ON c.customer_id = u.customer_id INNER JOIN services s ON u.service_id = s.service_id WHERE u.usage_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT service_name, service_fee FROM services WHERE service_fee < 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(record_id) AS total_records FROM usage_records GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT service_id, SUM(usage_amount) AS total_amount FROM usage_records GROUP BY service_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_amount) AS total_paid FROM customers c INNER JOIN invoices i ON c.customer_id = i.customer_id INNER JOIN payments p ON i.invoice_id = p.invoice_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE 'A%' ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE customer_email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE usage_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(usage_amount) AS total_usage FROM usage_records GROUP BY customer_id HAVING total_usage > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, invoice_date, total_amount FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id WHERE invoice_date BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(payment_amount) AS total_payments FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN payments ON invoices.invoice_id = payments.invoice_id GROUP BY customers.customer_id HAVING total_payments > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, count(invoice_id) AS num_invoices FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id GROUP BY customers.customer_id HAVING num_invoices > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, MAX(usage_amount) AS max_usage FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id GROUP BY customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(service_fee) AS avg_service_fee FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN services ON services.service_id = invoices.service_id GROUP BY customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(usage_amount) AS total_usage, SUM(payment_amount) total_payments FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN usage_records ON usage_records.customer_id = customers.customer_id JOIN payments ON payments.invoice_id = invoices.invoice_id GROUP BY customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(DISTINCT service_id) AS num_services_used FROM customers JOIN usage_records ON customers.customer_id = usage SOURCE service_id GROUP BY customers.customer_id HAVING num_services_used > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(usage_amount) AS avg_usage FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id GROUP BY customers.customer_id HAVING avg_usage > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date, usage_amount FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE usage_date BETWEEN '2023-01-01' AND '2023-06-30';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, invoice_date, total_amount FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id WHERE total_amount IN (SELECT MAX(total_amount) FROM invoices);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_records FROM usage_records GROUP BY customer_id HAVING num_records > 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, AVG(usage_amount) AS avg_usage FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id GROUP BY customers.customer_id HAVING avg_usage < 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date, usage_amount FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE service_fee > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, invoice_date, total_amount FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id WHERE total_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS num_payments FROM customers JOIN invoices ON customers.customer_id = invoices.customer_id JOIN payments ON invoices.invoice_id = payments.invoice_id GROUP BY customers.customer_id HAVING num_payments > 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255) NOT NULL,\n    service_fee DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE usage_records (\n    record_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    service_id INT REFERENCES services(service_id),\n    usage_date DATE,\n    usage_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE invoices (\n    invoice_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    invoice_date DATE,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    invoice_id INT REFERENCES invoices(invoice_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, service_name, usage_date, usage_amount FROM customers JOIN usage_records ON customers.customer_id = usage_records.customer_id JOIN services ON services.service_id = usage_records.service_id WHERE usage_amount < 20;"
]