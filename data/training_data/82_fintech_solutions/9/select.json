[
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_id, report_date, net_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_expenses FROM financial_reports WHERE net_profit > 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE total_revenue < total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_id, report_name FROM financial_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports ORDER BY net_profit DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue FROM financial_reports ORDER BY total_revenue ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT DISTINCT report_date FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT SUM(total_revenue) AS total_revenue_sum FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT AVG(net_profit) AS average_net_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT MAX(total_expenses) AS highest_expenses FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT MIN(total_revenue) AS lowest_revenue FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT COUNT(report_id) AS total_reports FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue + total_expenses AS total_profit FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue - total_expenses AS net_result FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_id, report_date, total_revenue FROM financial_reports WHERE total_revenue IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, CASE WHEN net_profit > 0 THEN 'Profitable' ELSE 'Not Profitable' END AS performance FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue * 0.1 AS profit_margin FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE total_revenue > total_expenses AND net_profit > 0",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports WHERE total_revenue > 10000",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date, total_revenue FROM financial_reports WHERE report_date >= '2022-01-01' AND report_date <= '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, total_revenue, total_expenses FROM financial_reports WHERE total_revenue - total_expenses > 5000",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT SUM(total_revenue) AS total_revenue_sum FROM financial_reports",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT AVG(net_profit) AS average_net_profit FROM financial_reports",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports ORDER BY net_profit DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE total_revenue > total_expenses ORDER BY total_revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT DATE_FORMAT(report_date, '%Y-%m-%d') AS formatted_date, total_revenue, net_profit FROM financial_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE report_name LIKE 'Quarterly%'",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE total_revenue > 50000 AND net_profit > 10000",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE total_revenue - total_expenses BETWEEN 5000 AND 10000",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_date, total_revenue, total_expenses, net_profit FROM financial_reports WHERE YEAR(report_date) = 2022",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE MONTH(report_date) = 3",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE DAY(report_date) = 15",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE MONTH(report_date) IN (1, 4, 7)",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE YEAR(report_date) = 2022 AND MONTH(report_date) = 2",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE total_revenue > 20000 ORDER BY total_revenue DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE net_profit > 5000 ORDER BY net_profit DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id INT PRIMARY KEY,\n report_name VARCHAR(255) NOT NULL,\n report_date DATE,\n total_revenue DECIMAL(10, 2),\n total_expenses DECIMAL(10, 2),\n net_profit DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses, net_profit FROM financial_reports WHERE report_date IS NOT NULL ORDER BY report_date ASC",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date FROM financial_reports WHERE report_status='published';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, revenue FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT SUM(revenue) AS total_revenue FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT AVG(expenses) AS average_expenses FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date, report_status FROM financial_reports WHERE report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT dashboard_id, user_id, profit FROM financial_dashboard WHERE profit > 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_name, report_status FROM financial_reports WHERE report_name LIKE '%quarterly%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(profit) AS total_profit FROM financial_dashboard GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_date, count(report_id) AS total_reports FROM financial_reports GROUP BY report_date;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT DISTINCT report_status FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT MIN(revenue) AS min_revenue, MAX(revenue) AS max_revenue FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_date, SUM(profit) AS total_profit FROM financial_reports INNER JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id GROUP BY report_date;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(profit) AS average_profit FROM financial_dashboard GROUP BY user_id HAVING average_profit > 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_name, report_date, report_status FROM financial_reports ORDER BY report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT count(report_id) AS total_reports, AVG(revenue) AS average_revenue FROM financial_reports JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_name, report_date, profit FROM financial_reports INNER JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id WHERE profit > 5000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(expenses) AS total_expenses FROM financial_dashboard WHERE user_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id FROM financial_reports UNION SELECT dashboard_id FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date > '2022-01-01' AND report_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date FROM financial_reports WHERE report_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT dashboard_id, user_id, revenue FROM financial_dashboard WHERE profit > 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id WHERE financial_dashboard.revenue > financial_dashboard.expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT SUM(revenue) AS total_revenue FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date, revenue, expenses, profit FROM financial_reports JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id WHERE financial_reports.report_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date >= '2022-06-01' AND report_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) AS avg_revenue FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_status IN ('approved', 'rejected');",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT COUNT(report_id) AS num_reports FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT MAX(profit) AS max_profit FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT MIN(expenses) AS min_expenses FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_id AS ID, report_name AS Name, report_date AS Date FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_dashboard WHERE user_id = 'e7c3521e-6bcb-4fd5-9b8c-e34e3a7610c9';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports ORDER BY report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_name LIKE '%quarterly%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT dashboard_id, SUM(revenue) AS total_revenue FROM financial_dashboard GROUP BY dashboard_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n report_id UUID PRIMARY KEY,\n report_name STRING,\n report_date DATE,\n report_status STRING\n)\n\n\nCREATE TABLE financial_dashboard (\n dashboard_id UUID PRIMARY KEY,\n user_id UUID,\n revenue DECIMAL,\n expenses DECIMAL,\n profit DECIMAL\n)\n\n### STATEMENT\n\nSELECT AVG(profit) AS avg_profit FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_name, total_revenue FROM financial_reports WHERE total_revenue > 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM performance_metrics WHERE metric_value < 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM decision_making;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_date, decision_rating FROM decision_making WHERE decision_rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_name, analysis_date FROM financial_reports WHERE analysis_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_date FROM performance_metrics WHERE metric_date BETWEEN '2020-01-01' AND '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_description FROM decision_making WHERE decision_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT MAX(total_revenue) FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(metric_value) FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name FROM decision_making ORDER BY decision_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_id, report_name, total_revenue FROM financial_reports WHERE total_revenue IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(metric_value), SUM(metric_value) FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_id, decision_name, decision_date FROM decision_making WHERE decision_rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT MIN(total_expenses) FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_id, report_name FROM financial_reports WHERE report_name LIKE '%quarterly%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM performance_metrics WHERE metric_value < 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_rating FROM decision_making WHERE decision_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM performance_metrics WHERE metric_description LIKE '%profit%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_rating FROM decision_making WHERE decision_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT MAX(total_revenue) AS max_revenue FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(total_expenses) AS avg_expenses FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT metric_name, metric_value, metric_date FROM performance_metrics WHERE metric_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_description FROM decision_making WHERE decision_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses FROM financial_reports WHERE total_revenue > total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE analysis_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_rating FROM decision_making ORDER BY decision_rating DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(metric_value) AS avg_metric_value, MIN(metric_value) AS min_metric_value, MAX(metric_value) AS max_metric_value FROM performance_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS number_of_reports FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses FROM financial_reports WHERE total_revenue > (SELECT AVG(total_revenue) FROM financial_reports);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, decision_date, decision_rating FROM decision_making WHERE decision_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM performance_metrics WHERE metric_name LIKE '%cost%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT report_name, total_revenue, total_expenses FROM financial_reports ORDER BY report_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(total_revenue) AS avg_revenue, AVG(total_expenses) AS avg_expenses FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id INT PRIMARY KEY,\n    report_name TEXT NOT NULL,\n    analysis_date DATE,\n    total_revenue DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    metric_name TEXT NOT NULL,\n    metric_value DECIMAL,\n    metric_date DATE,\n    metric_description TEXT\n);\n\nCREATE TABLE decision_making (\n    decision_id INT PRIMARY KEY,\n    decision_name TEXT NOT NULL,\n    decision_date DATE,\n    decision_description TEXT,\n    decision_rating INT\n);\n\n### STATEMENT\n\nSELECT decision_name, COUNT(*) AS decision_count FROM decision_making GROUP BY decision_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_id, report_name, report_date FROM financial_reports WHERE report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_data FROM financial_reports WHERE report_name LIKE 'Annual%';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_role FROM financial_users;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_email FROM financial_users WHERE user_role = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_metrics WHERE metric_value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT metric_name, metric_description FROM financial_metrics WHERE metric_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_email, user_role FROM financial_users WHERE user_email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_date, report_data FROM financial_reports ORDER BY report_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_owner FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_layout FROM financial_dashboard WHERE dashboard_owner = 3;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_role FROM financial_users WHERE user_role IN ('Admin', 'Finance');",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_layout FROM financial_dashboard WHERE dashboard_layout IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_date, report_data FROM financial_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_email FROM financial_users ORDER BY user_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM financial_metrics WHERE metric_value BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_role FROM financial_users WHERE user_role != 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_owner FROM financial_dashboard WHERE dashboard_owner = (SELECT user_id FROM financial_users WHERE user_email = 'john.doe@example.com');",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_data FROM financial_reports WHERE report_data ->> 'status' = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_role, COUNT(*) FROM financial_users GROUP BY user_role;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports WHERE report_data @> '{\"type\": \"quarterly\"}' AND report_data ->> 'status' = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports WHERE report_data->>'currency' = 'USD';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_layout FROM financial_dashboard WHERE dashboard_owner = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_email FROM financial_users WHERE user_role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_date, report_data FROM financial_reports JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT metric_name, metric_value FROM financial_metrics ORDER BY metric_value DESC;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_role FROM financial_users WHERE user_id NOT IN (SELECT dashboard_owner FROM financial_dashboard);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_data->'revenue' AS revenue FROM financial_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, dashboard_name FROM financial_users JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_role, COUNT(*) AS count FROM financial_users GROUP BY user_name, user_role HAVING count(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_name FROM financial_users;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT AVG(metric_value) AS avg_metric_value FROM financial_metrics;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT report_name, report_date FROM financial_reports WHERE report_data->'status' = 'completed' AND report_data->'revenue' >= 100000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, dashboard_name FROM financial_users LEFT JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, user_email, dashboard_name FROM financial_users FULL JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT financial_reports.report_name, financial_dashboard.dashboard_name FROM financial_reports INNER JOIN financial_dashboard ON financial_reports.report_id = financial_dashboard.dashboard_id;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, dashboard_name FROM financial_users RIGHT JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, COUNT(*) AS num_dashboards FROM financial_users LEFT JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, COUNT(*) AS num_dashboards FROM financial_users RIGHT JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\nreport_id SERIAL PRIMARY KEY,\nreport_name VARCHAR(100) NOT NULL,\nreport_date DATE NOT NULL,\nreport_data JSONB\n)\n\nCREATE TABLE financial_metrics (\nmetric_id SERIAL PRIMARY KEY,\nmetric_name VARCHAR(100) NOT NULL,\nmetric_description TEXT,\nmetric_value DECIMAL\n)\n\nCREATE TABLE financial_users (\nuser_id SERIAL PRIMARY KEY,\nuser_name VARCHAR(100) NOT NULL,\nuser_email VARCHAR(255) UNIQUE,\nuser_role VARCHAR(50)\n)\n\nCREATE TABLE financial_dashboard (\ndashboard_id SERIAL PRIMARY KEY,\ndashboard_name VARCHAR(100) NOT NULL,\ndashboard_layout JSON,\ndashboard_owner INTEGER REFERENCES financial_users(user_id)\n)\n\n### STATEMENT\n\nSELECT user_name, COUNT(*) AS num_dashboards FROM financial_users FULL JOIN financial_dashboard ON financial_users.user_id = financial_dashboard.dashboard_owner GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT report_title, report_date FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT report_content FROM financial_reports WHERE report_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_owner FROM financial_dashboard;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT dashboard_content FROM financial_dashboard WHERE dashboard_owner = 'John';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM income_statement;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT statement_date, total_revenue FROM income_statement;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT total_expenses FROM income_statement WHERE statement_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM balance_sheet;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT sheet_date, total_assets FROM balance_sheet;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT total_liabilities FROM balance_sheet WHERE sheet_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM cash_flow_statement;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT cashflow_date, net_cashflow FROM cash_flow_statement;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(total_revenue) AS total_revenue FROM income_statement;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(total_expenses) AS avg_expenses FROM income_statement;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(total_assets) AS max_assets FROM balance_sheet;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(total_liabilities) AS min_liabilities FROM balance_sheet;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_reports FROM financial_reports;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date > '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT report_title, report_date FROM financial_reports WHERE report_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_owner FROM financial_dashboard WHERE dashboard_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT statement_date, total_revenue FROM income_statement WHERE total_revenue > 10000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT sheet_date, total_assets FROM balance_sheet WHERE total_assets > total_liabilities;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM cash_flow_statement WHERE cashflow_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT report_title, report_date FROM financial_reports WHERE report_content IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT dashboard_name, dashboard_owner FROM financial_dashboard WHERE dashboard_content @> '{\"type\": \"graph\"}';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT statement_date, total_expenses FROM income_statement WHERE statement_date BETWEEN '2020-01-01' AND '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM balance_sheet WHERE total_assets > 100000;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports JOIN income_statement ON financial_reports.report_date = income_statement.statement_date;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_dashboard JOIN balance_sheet ON financial_dashboard.dashboard_owner = balance_sheet.sheet_date;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports JOIN cash_flow_statement ON financial_reports.report_date = cash_flow_statement.cashflow_date;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_dashboard JOIN income_statement ON financial_dashboard.dashboard_owner = income_statement.total_revenue;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM balance_sheet JOIN cash_flow_statement ON balance_sheet.sheet_date = cash_flow_statement.cashflow_date;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_reports WHERE report_date = (SELECT MAX(report_date) FROM financial_reports);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM financial_dashboard WHERE JSONB_ARRAY_LENGTH(dashboard_content->'graphs') > 0;",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM income_statement WHERE total_revenue = (SELECT MAX(total_revenue) FROM income_statement);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM balance_sheet WHERE sheet_date = (SELECT MIN(sheet_date) FROM balance_sheet);",
  "### TABLEDATA\n\nCREATE TABLE financial_reports (\n    report_id UUID PRIMARY KEY,\n    report_title STRING NOT NULL,\n    report_date DATE NOT NULL,\n    report_content STRING\n);\n\nCREATE TABLE financial_dashboard (\n    dashboard_id UUID PRIMARY KEY,\n    dashboard_name STRING NOT NULL,\n    dashboard_owner STRING NOT NULL,\n    dashboard_content JSONB\n);\n\nCREATE TABLE income_statement (\n    statement_id UUID PRIMARY KEY,\n    statement_date DATE NOT NULL,\n    total_revenue DECIMAL NOT NULL,\n    total_expenses DECIMAL NOT NULL\n);\n\nCREATE TABLE balance_sheet (\n    sheet_id UUID PRIMARY KEY,\n    sheet_date DATE NOT NULL,\n    total_assets DECIMAL NOT NULL,\n    total_liabilities DECIMAL NOT NULL\n);\n\nCREATE TABLE cash_flow_statement (\n    cashflow_id UUID PRIMARY KEY,\n    cashflow_date DATE NOT NULL,\n    net_cashflow DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM cash_flow_statement WHERE net_cashflow = (SELECT MAX(net_cashflow) FROM cash_flow_statement);"
]