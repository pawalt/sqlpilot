[
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (1, 'John Doe', 5000.00, '2022-08-15', 720)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (2, 'Alice Smith', 8000.00, '2022-09-20', 680)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (3, 'Bob Johnson', 3000.00, '2022-07-10', 750)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (4, 'Emma Brown', 6000.00, '2022-08-25', 700)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (5, 'David Wilson', 7000.00, '2022-09-05', 720)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (6, 'Sophia White', 4000.00, '2022-07-15', 680)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (7, 'James Anderson', 9000.00, '2022-08-30', 750)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (8, 'Olivia Martinez', 2000.00, '2022-09-10', 700)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (9, 'Michael Taylor', 5500.00, '2022-07-20', 720)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (10, 'Emily Garcia', 7500.00, '2022-08-10', 680)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (11, 'William Rodriguez', 3500.00, '2022-09-15', 750)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (12, 'Ava Hernandez', 6500.00, '2022-07-25', 700)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (13, 'Ethan Lopez', 7000.00, '2022-08-05', 720)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (14, 'Isabella Gonzalez', 4200.00, '2022-09-20', 680)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (15, 'Mia Perez', 8200.00, '2022-07-10', 750)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (16, 'Alexander Torres', 3100.00, '2022-08-25', 700)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (17, 'Sofia Ramirez', 7200.00, '2022-09-05', 720)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (18, 'Daniel Lewis', 4300.00, '2022-07-15', 680)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (19, 'Victoria Walker', 9300.00, '2022-08-30', 750)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (20, 'Liam Young', 2400.00, '2022-09-10', 700)",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (1, 'John Doe', 5000.00, '2022-01-15', 720) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'John Doe', loan_amount = 5000.00, loan_date = '2022-01-15', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (2, 'Alice Smith', 10000.00, '2022-02-20', 680) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Alice Smith', loan_amount = 10000.00, loan_date = '2022-02-20', credit_score = 680;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (3, 'Bob Johnson', 7500.00, '2022-03-10', 700) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Bob Johnson', loan_amount = 7500.00, loan_date = '2022-03-10', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (4, 'Sarah Brown', 6000.00, '2022-04-05', 710) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Sarah Brown', loan_amount = 6000.00, loan_date = '2022-04-05', credit_score = 710;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (5, 'Michael Williams', 9000.00, '2022-05-12', 730) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Michael Williams', loan_amount = 9000.00, loan_date = '2022-05-12', credit_score = 730;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (6, 'Emily Davis', 8500.00, '2022-06-18', 690) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Emily Davis', loan_amount = 8500.00, loan_date = '2022-06-18', credit_score = 690;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (7, 'James Wilson', 7000.00, '2022-07-25', 720) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'James Wilson', loan_amount = 7000.00, loan_date = '2022-07-25', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (8, 'Ava Anderson', 9500.00, '2022-08-30', 740) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Ava Anderson', loan_amount = 9500.00, loan_date = '2022-08-30', credit_score = 740;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (9, 'Oliver Perez', 8200.00, '2022-09-05', 710) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Oliver Perez', loan_amount = 8200.00, loan_date = '2022-09-05', credit_score = 710;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (10, 'Sophia Thomas', 11000.00, '2022-10-14', 760) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Sophia Thomas', loan_amount = 11000.00, loan_date = '2022-10-14', credit_score = 760;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (11, 'Noah Hernandez', 7800.00, '2022-11-20', 690) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Noah Hernandez', loan_amount = 7800.00, loan_date = '2022-11-20', credit_score = 690;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (12, 'Mia Scott', 9200.00, '2022-12-25', 730) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Mia Scott', loan_amount = 9200.00, loan_date = '2022-12-25', credit_score = 730;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (13, 'Ethan Carter', 7700.00, '2023-01-01', 710) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Ethan Carter', loan_amount = 7700.00, loan_date = '2023-01-01', credit_score = 710;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (14, 'Isabella Murphy', 10500.00, '2023-02-05', 750) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Isabella Murphy', loan_amount = 10500.00, loan_date = '2023-02-05', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (15, 'Jack Turner', 8200.00, '2023-03-12', 700) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Jack Turner', loan_amount = 8200.00, loan_date = '2023-03-12', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (16, 'Chloe Baker', 9400.00, '2023-04-18', 740) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Chloe Baker', loan_amount = 9400.00, loan_date = '2023-04-18', credit_score = 740;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (17, 'Ryan Hill', 7900.00, '2023-05-25', 680) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Ryan Hill', loan_amount = 7900.00, loan_date = '2023-05-25', credit_score = 680;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (18, 'Lily Reed', 10200.00, '2023-06-30', 760) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Lily Reed', loan_amount = 10200.00, loan_date = '2023-06-30', credit_score = 760;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (19, 'Owen King', 8300.00, '2023-07-05', 720) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Owen King', loan_amount = 8300.00, loan_date = '2023-07-05', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE LoanCreditData (\n  loan_id INT PRIMARY KEY,\n  borrower_name TEXT,\n  loan_amount DECIMAL,\n  loan_date DATE,\n  credit_score INT\n)\n\n### STATEMENT\n\nUPSERT INTO LoanCreditData (loan_id, borrower_name, loan_amount, loan_date, credit_score) VALUES (20, 'Hannah Stewart', 9600.00, '2023-08-14', 750) ON CONFLICT (loan_id) DO UPDATE SET borrower_name = 'Hannah Stewart', loan_amount = 9600.00, loan_date = '2023-08-14', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (1, 101, 5000.00, 4.5) ON DUPLICATE KEY UPDATE loan_amount = 5000.00, interest_rate = 4.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (2, 102, 7500.00, 3.8) ON DUPLICATE KEY UPDATE loan_amount = 7500.00, interest_rate = 3.8;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (3, 103, 10000.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 10000.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (4, 104, 6000.00, 4.2) ON DUPLICATE KEY UPDATE loan_amount = 6000.00, interest_rate = 4.2;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (5, 105, 9000.00, 3.5) ON DUPLICATE KEY UPDATE loan_amount = 9000.00, interest_rate = 3.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (6, 106, 8000.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 8000.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (7, 107, 12000.00, 3.2) ON DUPLICATE KEY UPDATE loan_amount = 12000.00, interest_rate = 3.2;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (8, 108, 9500.00, 3.9) ON DUPLICATE KEY UPDATE loan_amount = 9500.00, interest_rate = 3.9;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (9, 109, 8500.00, 4.1) ON DUPLICATE KEY UPDATE loan_amount = 8500.00, interest_rate = 4.1;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (10, 110, 7000.00, 3.7) ON DUPLICATE KEY UPDATE loan_amount = 7000.00, interest_rate = 3.7;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (11, 111, 9500.00, 4.3) ON DUPLICATE KEY UPDATE loan_amount = 9500.00, interest_rate = 4.3;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (12, 112, 8000.00, 3.6) ON DUPLICATE KEY UPDATE loan_amount = 8000.00, interest_rate = 3.6;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (13, 113, 10500.00, 4.2) ON DUPLICATE KEY UPDATE loan_amount = 10500.00, interest_rate = 4.2;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (14, 114, 8500.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 8100.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (15, 115, 9500.00, 3.8) ON DUPLICATE KEY UPDATE loan_amount = 9500.00, interest_rate = 3.8;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (16, 116, 7000.00, 3.4) ON DUPLICATE KEY UPDATE loan_amount = 7000.00, interest_rate = 3.4;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (17, 117, 12000.00, 4.1) ON DUPLICATE KEY UPDATE loan_amount = 12000.00, interest_rate = 4.1;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (18, 118, 10000.00, 3.9) ON DUPLICATE KEY UPDATE loan_amount = 10000.00, interest_rate = 3.9;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (19, 119, 8500.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 8500.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (20, 120, 9000.00, 3.6) ON DUPLICATE KEY UPDATE loan_amount = 9000.00, interest_rate = 3.6;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (1, 101, 5000.00, 5.0) ON DUPLICATE KEY UPDATE loan_amount = 5000.00, interest_rate = 5.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (2, 102, 8000.00, 6.5) ON DUPLICATE KEY UPDATE loan_amount = 8000.00, interest_rate = 6.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (3, 103, 10000.00, 7.0) ON DUPLICATE KEY UPDATE loan_amount = 10000.00, interest_rate = 7.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (4, 104, 6000.00, 4.5) ON DUPLICATE KEY UPDATE loan_amount = 6000.00, interest_rate = 4.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (5, 105, 9000.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 9000.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (6, 106, 7000.00, 5.5) ON DUPLICATE KEY UPDATE loan_amount = 7000.00, interest_rate = 5.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (7, 107, 12000.00, 6.0) ON DUPLICATE KEY UPDATE loan_amount = 12000.00, interest_rate = 6.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (8, 108, 8500.00, 5.0) ON DUPLICATE KEY UPDATE loan_amount = 8500.00, interest_rate = 5.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (9, 109, 9500.00, 6.5) ON DUPLICATE KEY UPDATE loan_amount = 9500.00, interest_rate = 6.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (10, 110, 11000.00, 7.0) ON DUPLICATE KEY UPDATE loan_amount = 11000.00, interest_rate = 7.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (11, 111, 4000.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 4000.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (12, 112, 7500.00, 4.5) ON DUPLICATE KEY UPDATE loan_amount = 7500.00, interest_rate = 4.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (13, 113, 8500.00, 5.5) ON DUPLICATE KEY UPDATE loan_amount = 8500.00, interest_rate = 5.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (14, 114, 10000.00, 6.0) ON DUPLICATE KEY UPDATE loan_amount = 10000.00, interest_rate = 6.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (15, 115, 9500.00, 5.0) ON DUPLICATE KEY UPDATE loan_amount = 9500.00, interest_rate = 5.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (16, 116, 8000.00, 6.5) ON DUPLICATE KEY UPDATE loan_amount = 8000.00, interest_rate = 6.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (17, 117, 12000.00, 7.0) ON DUPLICATE KEY UPDATE loan_amount = 12000.00, interest_rate = 7.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (18, 118, 7000.00, 4.5) ON DUPLICATE KEY UPDATE loan_amount = 7000.00, interest_rate = 4.5;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (19, 119, 9000.00, 4.0) ON DUPLICATE KEY UPDATE loan_amount = 9000.00, interest_rate = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL\n);\n\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT NOT NULL,\n    risk_level VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, interest_rate) VALUES (20, 120, 6000.00, 5.5) ON DUPLICATE KEY UPDATE loan_amount = 6000.00, interest_rate = 5.5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Alice', '123-456-7890', 'alice@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (1, 1000.00, '2022-01-01') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (1, 700, '2022-01-01') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Bob', '222-333-4444', 'bob@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '333-444-5555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (2, 1500.00, '2022-01-02') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 2500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (2, 800, '2022-01-02') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 850;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Charlie', '333-444-5555', 'charlie@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '444-555-6666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (3, 2000.00, '2022-01-03') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (3, 750, '2022-01-03') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 800;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('David', '444-555-6666', 'david@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '555-666-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (4, 2500.00, '2022-01-04') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 3500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (4, 780, '2022-01-04') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 820;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Eve', '555-666-7777', 'eve@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '666-777-8888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (5, 3000.00, '2022-01-05') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 4000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (5, 720, '2022-01-05') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 760;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Frank', '666-777-8888', 'frank@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '777-888-9999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (6, 3500.00, '2022-01-06') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 4500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (6, 790, '2022-01-06') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 830;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Alice Smith', '123-456-7890', 'alice@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Alice Smith', customer_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (1, 1000.00, '2022-01-15') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (1, 750, '2022-01-15') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Bob Johnson', '555-123-4567', 'bob@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Bob Johnson', customer_phone = '555-123-4567';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (2, 2000.00, '2022-01-20') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (2, 800, '2022-01-20') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 800;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Carol Williams', '777-999-1234', 'carol@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Carol Williams', customer_phone = '777-999-1234';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (3, 1500.00, '2022-01-25') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 1500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (3, 700, '2022-01-25') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('David Brown', '222-333-4444', 'david@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'David Brown', customer_phone = '222-333-4444';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (4, 3000.00, '2022-01-30') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (4, 650, '2022-01-30') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 650;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Eve Green', '888-222-3333', 'eve@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Eve Green', customer_phone = '888-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (5, 2500.00, '2022-02-05') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 2500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (5, 700, '2022-02-05') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Frank Lee', '999-888-7777', 'frank@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Frank Lee', customer_phone = '999-888-7777';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (6, 3500.00, '2022-02-10') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 3500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (6, 750, '2022-02-10') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_phone, customer_email) VALUES ('Grace Taylor', '111-222-3333', 'grace@example.com') ON CONFLICT (customer_email) DO UPDATE SET customer_name = 'Grace Taylor', customer_phone = '111-222-3333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO loans (customer_id, loan_amount, loan_date) VALUES (7, 4000.00, '2022-02-15') ON CONFLICT (customer_id, loan_date) DO UPDATE SET loan_amount = 4000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_phone VARCHAR(20) NOT NULL,\n    customer_email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE loans (\n    loan_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    loan_amount DECIMAL(10, 2) NOT NULL,\n    loan_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE credit_reports (\n    report_id SERIAL PRIMARY KEY,\n    customer_id INT NOT NULL,\n    credit_score INT NOT NULL,\n    report_date DATE NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (customer_id, credit_score, report_date) VALUES (7, 800, '2022-02-15') ON CONFLICT (customer_id, report_date) DO UPDATE SET credit_score = 800;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (1, 101, 5000.00, '2022-07-15', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (2, 102, 7000.00, '2022-08-20', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (3, 103, 3000.00, '2022-09-10', 'rejected') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (4, 104, 6000.00, '2022-10-05', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (5, 105, 4000.00, '2022-11-15', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (6, 106, 8000.00, '2022-12-20', 'rejected') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (7, 107, 2000.00, '2023-01-10', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (8, 108, 10000.00, '2023-02-05', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (9, 109, 15000.00, '2023-03-15', 'rejected') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (10, 110, 12000.00, '2023-04-20', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (11, 111, 9000.00, '2023-05-10', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (12, 112, 11000.00, '2023-06-05', 'rejected') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (13, 113, 7000.00, '2023-07-15', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (14, 114, 8000.00, '2023-08-20', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (15, 115, 9500.00, '2023-09-10', 'rejected') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (16, 116, 6000.00, '2023-10-05', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (17, 117, 4500.00, '2023-11-15', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (18, 118, 8500.00, '2023-12-20', 'rejected') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (19, 119, 5000.00, '2024-01-10', 'pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (20, 120, 7000.00, '2024-02-05', 'approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), loan_status = VALUES(loan_status);",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (1, 101, 5000.00, '2022-01-01', 'active') ON DUPLICATE KEY UPDATE loan_amount=5000.00, loan_date='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (101, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE email='john.doe@example.com', phone_number='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (customer_id, credit_score, credit_rating) VALUES (101, 750, 'Good') ON DUPLICATE KEY UPDATE credit_score=750, credit_rating='Good';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date, payment_status) VALUES (1, 1, 1000.00, '2022-01-15', 'paid') ON DUPLICATE KEY UPDATE payment_amount=1000.00, payment_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (2, 102, 7000.00, '2022-02-01', 'active') ON DUPLICATE KEY UPDATE loan_amount=7000.00, loan_date='2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com', '456-789-0123') ON DUPLICATE KEY UPDATE email='jane.smith@example.com', phone_number='456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (customer_id, credit_score, credit_rating) VALUES (102, 800, 'Excellent') ON DUPLICATE KEY UPDATE credit_score=800, credit_rating='Excellent';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date, payment_status) VALUES (2, 2, 1500.00, '2022-02-15', 'paid') ON DUPLICATE KEY UPDATE payment_amount=1500.00, payment_date='2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (3, 103, 10000.00, '2022-03-01', 'active') ON DUPLICATE KEY UPDATE loan_amount=10000.00, loan_date='2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (103, 'Alice', 'Johnson', 'alice.johnson@example.com', '789-012-3456') ON DUPLICATE KEY UPDATE email='alice.johnson@example.com', phone_number='789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (customer_id, credit_score, credit_rating) VALUES (103, 700, 'Fair') ON DUPLICATE KEY UPDATE credit_score=700, credit_rating='Fair';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date, payment_status) VALUES (3, 3, 2000.00, '2022-03-15', 'pending') ON DUPLICATE KEY UPDATE payment_amount=2000.00, payment_date='2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (4, 101, 8000.00, '2022-04-01', 'active') ON DUPLICATE KEY UPDATE loan_amount=8000.00, loan_date='2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (104, 'Michael', 'Brown', 'michael.brown@example.com', '012-345-6789') ON DUPLICATE KEY UPDATE email='michael.brown@example.com', phone_number='012-345-6789';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (customer_id, credit_score, credit_rating) VALUES (104, 850, 'Excellent') ON DUPLICATE KEY UPDATE credit_score=850, credit_rating='Excellent';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date, payment_status) VALUES (4, 4, 3000.00, '2022-04-15', 'pending') ON DUPLICATE KEY UPDATE payment_amount=3000.00, payment_date='2022-04-15';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date, loan_status) VALUES (5, 102, 6000.00, '2022-05-01', 'active') ON DUPLICATE KEY UPDATE loan_amount=6000.00, loan_date='2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (105, 'Sarah', 'Lee', 'sarah.lee@example.com', '123-234-5678') ON DUPLICATE KEY UPDATE email='sarah.lee@example.com', phone_number='123-234-5678';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (customer_id, credit_score, credit_rating) VALUES (105, 720, 'Good') ON DUPLICATE KEY UPDATE credit_score=720, credit_rating='Good';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL,\n    loan_date DATE,\n    loan_status VARCHAR(10)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE credit_scores (\n    customer_id INT PRIMARY KEY,\n    credit_score INT,\n    credit_rating VARCHAR(10)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    payment_status VARCHAR(10)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date, payment_status) VALUES (5, 5, 2500.00, '2022-05-15', 'paid') ON DUPLICATE KEY UPDATE payment_amount=2500.00, payment_date='2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (1, 101, 5000.00, '2022-01-15') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (2, 102, 7000.00, '2022-02-20') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (3, 103, 10000.00, '2022-03-25') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (4, 104, 8000.00, '2022-04-30') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (5, 105, 6000.00, '2022-05-05') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (6, 106, 9000.00, '2022-06-10') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (7, 107, 12000.00, '2022-07-15') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (8, 108, 15000.00, '2022-08-20') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (9, 109, 20000.00, '2022-09-25') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (10, 110, 18000.00, '2022-10-30') ON CONFLICT (loan_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, loan_amount = EXCLUDED.loan_amount, loan_date = EXCLUDED.loan_date",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (1, 101, 5000.00, '2022-01-01') ON DUPLICATE KEY UPDATE loan_amount = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, address) VALUES (101, 'John Doe', 30, '123 Main St') ON DUPLICATE KEY UPDATE age = 30;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (customer_id, credit_score, credit_rating, credit_limit) VALUES (101, 750, 'Excellent', 10000.00) ON DUPLICATE KEY UPDATE credit_limit = 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO payments (payment_id, loan_id, customer_id, payment_date, payment_amount) VALUES (1, 1, 101, '2022-02-01', 1000.00) ON DUPLICATE KEY UPDATE payment_amount = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risks (loan_id, risk_factor, risk_description) VALUES (1, 'High', 'Potential default risk') ON DUPLICATE KEY UPDATE risk_description = 'Potential default risk';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (2, 102, 7000.00, '2022-02-15') ON DUPLICATE KEY UPDATE loan_amount = 7000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, address) VALUES (102, 'Alice Smith', 25, '456 Elm St') ON DUPLICATE KEY UPDATE age = 25;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (customer_id, credit_score, credit_rating, credit_limit) VALUES (102, 700, 'Good', 8000.00) ON DUPLICATE KEY UPDATE credit_rating = 'Good';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO payments (payment_id, loan_id, customer_id, payment_date, payment_amount) VALUES (2, 2, 102, '2022-03-01', 1500.00) ON DUPLICATE KEY UPDATE payment_amount = 1500.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risks (loan_id, risk_factor, risk_description) VALUES (2, 'Medium', 'Moderate default risk') ON DUPLICATE KEY UPDATE risk_factor = 'Medium';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (3, 103, 10000.00, '2022-03-15') ON DUPLICATE KEY UPDATE loan_amount = 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, address) VALUES (103, 'Eve Johnson', 35, '789 Oak St') ON DUPLICATE KEY UPDATE customer_name = 'Eve Johnson';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (customer_id, credit_score, credit_rating, credit_limit) VALUES (103, 680, 'Fair', 6000.00) ON DUPLICATE KEY UPDATE credit_score = 680;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO payments (payment_id, loan_id, customer_id, payment_date, payment_amount) VALUES (3, 3, 103, '2022-04-01', 2000.00) ON DUPLICATE KEY UPDATE payment_amount = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risks (loan_id, risk_factor, risk_description) VALUES (3, 'Low', 'Low default risk') ON DUPLICATE KEY UPDATE risk_description = 'Low default risk';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loans (loan_id, customer_id, loan_amount, loan_date) VALUES (4, 104, 8000.00, '2022-04-15') ON DUPLICATE KEY UPDATE loan_amount = 8000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, address) VALUES (104, 'Bob Brown', 40, '101 Pine St') ON DUPLICATE KEY UPDATE address = '101 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (customer_id, credit_score, credit_rating, credit_limit) VALUES (104, 720, 'Good', 9000.00) ON DUPLICATE KEY UPDATE credit_limit = 9000.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO payments (payment_id, loan_id, customer_id, payment_date, payment_amount) VALUES (4, 4, 104, '2022-05-01', 1200.00) ON DUPLICATE KEY UPDATE payment_amount = 1200.00;",
  "### TABLEDATA\n\nCREATE TABLE loans (\n  loan_id INT PRIMARY KEY,\n  customer_id INT,\n  loan_amount DECIMAL,\n  loan_date DATE\n);\n\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  address VARCHAR(100)\n);\n\n\nCREATE TABLE credit_scores (\n  customer_id INT PRIMARY KEY,\n  credit_score INT,\n  credit_rating VARCHAR(10),\n  credit_limit DECIMAL\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  loan_id INT,\n  customer_id INT,\n  payment_date DATE,\n  payment_amount DECIMAL\n);\n\n\nCREATE TABLE risks (\n  loan_id INT PRIMARY KEY,\n  risk_factor VARCHAR(50),\n  risk_description TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risks (loan_id, risk_factor, risk_description) VALUES (4, 'Medium', 'Moderate default risk') ON DUPLICATE KEY UPDATE risk_factor = 'Medium';"
]