[
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, company_name FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, industry_standard FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE industry_standard = 'ISO 9001';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, report_date FROM compliance_reports WHERE company_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, company_name, compliance_status FROM compliance_reports WHERE report_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE industry_standard IN ('ISO 14001', 'ISO 45001');",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, industry_standard FROM compliance_reports WHERE compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, company_name, compliance_status FROM compliance_reports WHERE industry_standard = 'ISO 27001';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, company_name FROM compliance_reports WHERE compliance_status = false;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, industry_standard FROM compliance_reports WHERE compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE company_name = 'Company XYZ';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE industry_standard LIKE 'ISO%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports ORDER BY report_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, company_name, compliance_status FROM compliance_reports ORDER BY company_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT DISTINCT industry_standard FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(id), MAX(id), MIN(id) FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE company_name='ABC Company';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT id, report_date, industry_standard FROM compliance_reports WHERE compliance_status=true;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, COUNT(*) AS total_reports FROM compliance_reports GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT MAX(report_date) AS latest_report_date FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, industry_standard, compliance_status FROM compliance_reports WHERE industry_standard='ISO 9001';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT DISTINCT industry_standard FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, COUNT(*) AS total_reports FROM compliance_reports WHERE compliance_status=true GROUP BY company_name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports ORDER BY report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, SUM(CAST(compliance_status AS INT)) AS total_compliant_reports FROM compliance_reports GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id, MAX(id) AS max_id, MIN(id) AS min_id FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM compliance_reports WHERE company_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT DISTINCT company_name, industry_standard FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, AVG(id) AS avg_id FROM compliance_reports GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, industry_standard, compliance_status FROM compliance_reports ORDER BY company_name ASC, report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, industry_standard, COUNT(*) AS total_reports FROM compliance_reports GROUP BY company_name, industry_standard;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id, COUNT(*) AS total_reports FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT company_name, industry_standard, compliance_status FROM compliance_reports WHERE company_name IN ('ABC Company', 'XYZ Inc.');",
  "### TABLEDATA\n\nCREATE TABLE compliance_reports (\n  id INT PRIMARY KEY,\n  report_date DATE,\n  company_name VARCHAR(255),\n  industry_standard VARCHAR(100),\n  compliance_status BOOLEAN\n)\n\n### STATEMENT\n\nSELECT MIN(report_date) AS earliest_report_date FROM compliance_reports;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT * FROM company;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT name, industry FROM company;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT id, name FROM company WHERE industry = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_report;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company_id, report_date FROM compliance_report;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT report_id, compliance_status FROM compliance_report WHERE compliance_status = 'Not Compliant';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.report_date FROM company c JOIN compliance_report cr ON c.id = cr.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name AS Company_Name, cr.report_date AS Report_Date FROM company c JOIN compliance_report cr ON c.id = cr.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.compliance_status FROM company c LEFT JOIN compliance_report cr ON c.id = cr.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.report_date FROM company c RIGHT JOIN compliance_report cr ON c.id = cr.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.compliance_status FROM company c INNER JOIN compliance_report cr ON c.id = cr.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.report_date FROM company c JOIN compliance_report cr ON c.id = cr.company_id WHERE c.industry = 'Healthcare';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.compliance_status FROM company c INNER JOIN compliance_report cr ON c.id = cr.company_id WHERE cr.compliance_status = 'Compliant';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.report_date FROM company c JOIN compliance_report cr ON c.id = cr.company_id ORDER BY cr.report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.compliance_status FROM company c JOIN compliance_report cr ON c.id = cr.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS Total_Companies FROM company;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT AVG(report_id) AS Avg_Report_ID FROM compliance_report;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(*) AS Total_Reports FROM company c JOIN compliance_report cr ON c.id = cr.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(report_date) AS Latest_Report_Date FROM company c JOIN compliance_report cr ON c.id = cr.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.report_date FROM company c JOIN compliance_report cr ON c.id = cr.company_id HAVING COUNT(cr.report_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT c.name, cr.compliance_status FROM company c JOIN compliance_report cr ON c.id = cr.company_id LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT * FROM company WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT name, industry FROM company WHERE industry = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM company;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT * FROM company JOIN compliance_report ON company.id = compliance_report.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, compliance_report.report_date FROM company JOIN compliance_report ON company.id = compliance_report.company_id WHERE compliance_report.compliance_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name AS CompanyName, COUNT(*) AS TotalReports FROM company JOIN compliance_report ON company.id = compliance_report.company_id GROUP BY company.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, COUNT(*) AS TotalReports FROM company JOIN compliance_report ON company.id = compliance_report.company_id GROUP BY company.name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_report WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT * FROM compliance_report WHERE compliance_status IN ('Approved', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, COUNT(*) AS TotalReports FROM company JOIN compliance_report ON company.id = compliance_report.company_id WHERE compliance_report.report_date >= '2022-01-01' GROUP BY company.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, MAX(compliance_report.report_date) AS LatestReportDate FROM company JOIN compliance_report ON company.id = compliance_report.company_id GROUP BY company.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, AVG(DATEDIFF(NOW(), compliance_report.report_date)) AS AvgDaysSinceReport FROM company JOIN compliance_report ON company.id = compliance_report.company_id GROUP BY company.name;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT industry, COUNT(*) AS TotalCompanies FROM company GROUP BY industry;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT industry, AVG(report_date) AS AvgReportDate FROM company JOIN compliance_report ON company.id = compliance_report.company_id GROUP BY industry;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, compliance_status FROM company LEFT JOIN compliance_report ON company.id = compliance_report.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, compliance_status FROM company RIGHT JOIN compliance_report ON company.id = compliance_report.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, COALESCE(compliance_report.compliance_status, 'Not Available') AS Status FROM company LEFT JOIN compliance_report ON company.id = compliance_report.company_id;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, compliance_report.report_date, compliance_report.compliance_status FROM company INNER JOIN compliance_report ON company.id = compliance_report.company_id WHERE company.name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, compliance_report.report_date FROM company LEFT JOIN compliance_report ON company.id = compliance_report.company_id WHERE compliance_report.report_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE company (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    industry VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE compliance_report (\n    report_id INT PRIMARY KEY,\n    company_id INT NOT NULL,\n    report_date DATE,\n    compliance_status VARCHAR(50) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES company(id)\n);\n\n### STATEMENT\n\nSELECT company.name, COUNT(*) FROM company JOIN compliance_report ON company.id = compliance_report.company_id GROUP BY company.name ORDER BY COUNT(*) DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceReports;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, reporting_date FROM ComplianceReports;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Companies;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_id, industry FROM Companies;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceLogs;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, log_date FROM ComplianceLogs;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, log_description FROM ComplianceLogs;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT cr.report_id, c.company_name, cr.reporting_date FROM ComplianceReports cr JOIN Companies c ON cr.company_id = c.company_id;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT cr.report_id, cl.log_date, cl.log_description FROM ComplianceReports cr JOIN ComplianceLogs cl ON cr.report_id = cl.report_id;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT cr.report_id, c.company_name, c.industry, cr.reporting_date, cr.compliance_status FROM ComplianceReports cr JOIN Companies c ON cr.company_id = c.company_id;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.company_name, COUNT(cr.report_id) AS num_reports FROM Companies c LEFT JOIN ComplianceReports cr ON c.company_id = cr.company_id GROUP BY c.company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.company_name, MAX(cr.reporting_date) AS latest_report_date FROM Companies c LEFT JOIN ComplianceReports cr ON c.company_id = cr.company_id GROUP BY c.company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.company_name, AVG(cr.compliance_status::int) AS avg_compliance_status FROM Companies c LEFT JOIN ComplianceReports cr ON c.company_id = cr.company_id GROUP BY c.company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.company_name, cr.report_id FROM Companies c CROSS JOIN ComplianceReports cr;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT cr.report_id, cr.reporting_date FROM ComplianceReports cr WHERE cr.compliance_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT cr.report_id, cr.reporting_date FROM ComplianceReports cr WHERE cr.compliance_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, log_date, log_description FROM ComplianceLogs WHERE log_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, industry FROM Companies WHERE industry = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_reports FROM ComplianceReports;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(CAST(compliance_status AS INT)) AS avg_compliance_status FROM ComplianceReports;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT cr.report_id, cr.reporting_date, cl.log_date, cl.log_description FROM ComplianceReports cr LEFT JOIN ComplianceLogs cl ON cr.report_id = cl.report_id;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceReports WHERE reporting_date > '2021-01-01' AND compliance_status = true;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, industry FROM Companies WHERE company_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT report_id, reporting_date FROM ComplianceReports WHERE company_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY reporting_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceLogs WHERE log_date BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, compliance_status FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceLogs JOIN ComplianceReports ON ComplianceLogs.report_id = ComplianceReports.report_id;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT industry FROM Companies;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ComplianceReports WHERE company_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, MAX(reporting_date) AS latest_report_date FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF('day', reporting_date, CURRENT_DATE)) AS average_report_age FROM ComplianceReports;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, COUNT(*) AS num_reports FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT industry, COUNT(*) AS num_companies FROM Companies GROUP BY industry ORDER BY num_companies DESC;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, AVG(DATEDIFF('day', reporting_date, CURRENT_DATE)) AS average_report_age FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, COUNT(*) FROM Companies LEFT JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT industry, AVG(DATEDIFF('day', reporting_date, CURRENT_DATE)) AS average_report_age FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY industry;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, COUNT(*) AS num_logs FROM Companies LEFT JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id LEFT JOIN ComplianceLogs ON ComplianceReports.report_id = ComplianceLogs.report_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT industry, MAX(reporting_date) AS latest_report_date FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY industry;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, MAX(reporting_date) - MIN(reporting_date) AS report_date_range FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, SUM(CASE WHEN compliance_status = true THEN 1 ELSE 0 END) AS num_compliant_reports, SUM(CASE WHEN compliance_status = false THEN 1 ELSE 0 END) AS num_non_compliant_reports FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE ComplianceReports (\n  report_id UUID PRIMARY KEY,\n  company_id UUID,\n  reporting_date DATE,\n  compliance_status BOOLEAN\n);\n\nCREATE TABLE Companies (\n  company_id UUID PRIMARY KEY,\n  company_name VARCHAR(255),\n  industry VARCHAR(255)\n);\n\nCREATE TABLE ComplianceLogs (\n  log_id UUID PRIMARY KEY,\n  report_id UUID,\n  log_date TIMESTAMP,\n  log_description TEXT\n);\n\n### STATEMENT\n\nSELECT company_name, COUNT(DISTINCT report_id) AS num_unique_reports FROM Companies JOIN ComplianceReports ON Companies.company_id = ComplianceReports.company_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulations;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT id, name FROM companies;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reports WHERE submitted = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT id, date FROM reports WHERE company_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM violations WHERE report_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT id, description FROM violations;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT name, industry FROM companies WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT r.id, r.name, v.description FROM regulations r JOIN violations v ON r.id = v.id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, r.date FROM companies c JOIN reports r ON c.id = r.company_id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT r.date, v.description FROM reports r JOIN violations v ON r.id = v.report_id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, v.description FROM companies c JOIN reports r ON c.id = r.company_id JOIN violations v ON r.id = v.report_id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, r.date, v.description FROM companies c JOIN reports r ON c.id = r.company_id JOIN violations v ON r.id = v.report_id WHERE r.submitted = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT r.id, c.name, v.description FROM reports r JOIN companies c ON r.company_id = c.id JOIN violations v ON r.id = v.report_id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(r.id) AS num_reports FROM companies c JOIN reports r ON c.id = r.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name AS company_name, COUNT(v.id) AS num_violations FROM companies c JOIN reports r ON c.id = r.company_id JOIN violations v ON r.id = v.report_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(CASE WHEN r.submitted = TRUE THEN 1 ELSE 0 END) AS num_submitted_reports FROM companies c JOIN reports r ON c.id = r.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(CASE WHEN r.submitted = TRUE THEN 1 ELSE 0 END) AS avg_submitted_reports FROM companies c JOIN reports r ON c.id = r.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, MIN(r.date) AS earliest_report_date FROM companies c JOIN reports r ON c.id = r.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(r.date) AS latest_report_date FROM companies c JOIN reports r ON c.id = r.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulations;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT name, description FROM regulations WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT name, industry FROM companies INNER JOIN reports ON companies.id = reports.company_id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM companies WHERE industry = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT name, date FROM companies INNER JOIN reports ON companies.id = reports.company_id WHERE submitted = true;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reports WHERE company_id IN (SELECT id FROM companies WHERE industry = 'Healthcare');",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reports WHERE submitted = false;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT r.name AS regulation_name, c.name AS company_name FROM regulations r INNER JOIN companies c ON r.id = c.id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM regulations WHERE id IN (SELECT report_id FROM violations);",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM reports WHERE date BETWEEN '2021-01-01' AND '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT name, description FROM regulations WHERE description LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM companies WHERE industry = (SELECT industry FROM companies WHERE name = 'Company A');",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM violations GROUP BY report_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name AS company_name, COUNT(v.id) AS total_violations FROM companies c LEFT JOIN reports r ON c.id = r.company_id LEFT JOIN violations v ON r.id = v.report_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('day', NOW()::timestamp - date)) AS avg_submission_delay FROM reports;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM companies WHERE id = ANY(SELECT company_id FROM reports WHERE submitted = false);",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name AS company_name, COUNT(DISTINCT r.id) AS total_reports FROM companies c LEFT JOIN reports r ON c.id = r.company_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT industry, MAX(COUNT(id)) AS total_reports FROM companies GROUP BY industry;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT company_id, COUNT(DISTINCT report_id) AS total_violations FROM violations GROUP BY company_id;",
  "### TABLEDATA\n\nCREATE TABLE regulations (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   description TEXT\n);\n\nCREATE TABLE companies (\n   id INT PRIMARY KEY,\n   name VARCHAR(50) NOT NULL,\n   industry VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE reports (\n   id INT PRIMARY KEY,\n   company_id INT REFERENCES companies(id),\n   date DATE,\n   submitted BOOLEAN\n);\n\nCREATE TABLE violations (\n   id INT PRIMARY KEY,\n   report_id INT REFERENCES reports(id),\n   description TEXT\n);\n\n### STATEMENT\n\nSELECT c.name AS company_name, COUNT(DISTINCT v.id) AS total_violations FROM companies c LEFT JOIN reports r ON c.id = r.company_id LEFT JOIN violations v ON r.id = v.report_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Company;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, location FROM Company;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_id, company_name FROM Company WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT employee_name, position FROM Employee;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT employee_id, company_id FROM Employee WHERE position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Report;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT report_date, report_text FROM Report;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT report_id, employee_id FROM Report WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceStandard;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_name FROM ComplianceStandard;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_id FROM ComplianceStandard WHERE standard_name = 'ISO 9001';",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ComplianceReport;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT report_id, standard_id, compliance_level FROM ComplianceReport WHERE compliance_level > 3;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT report_id, standard_id FROM ComplianceReport WHERE compliance_level = 5;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT c.report_id, c.standard_id, r.employee_id FROM ComplianceReport c JOIN Report r ON c.report_id = r.report_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, c.standard_name, cr.compliance_level FROM Employee e JOIN ComplianceReport cr ON e.employee_id = cr.report_id JOIN ComplianceStandard c ON cr.standard_id = c.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, r.report_date, cr.compliance_level FROM Employee e JOIN Report r ON e.employee_id = r.employee_id JOIN ComplianceReport cr ON r.report_id = cr.report_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, e.position, cr.compliance_level FROM Employee e JOIN ComplianceReport cr ON e.employee_id = cr.report_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Company WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT employee_name, position FROM Employee WHERE company_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Report WHERE report_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, location, employee_name, position FROM Company JOIN Employee ON Company.company_id = Employee.company_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT report_id, report_text FROM Report JOIN ComplianceReport ON Report.report_id = ComplianceReport.report_id WHERE compliance_level > 3;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT c.company_name, e.employee_name, r.report_date FROM Company c JOIN Employee e ON c.company_id = e.company_id JOIN Report r ON e.employee_id = r.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, compliance_level FROM ComplianceStandard JOIN ComplianceReport ON ComplianceStandard.standard_id = ComplianceReport.standard_id WHERE ComplianceReport.compliance_level < 2;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT c.company_name, e.employee_name, r.report_text, cs.standard_name FROM Company c JOIN Employee e ON c.company_id = e.company_id JOIN Report r ON e.employee_id = r.employee_id JOIN ComplianceReport cr ON r.report_id = cr.report_id JOIN ComplianceStandard cs ON cr.standard_id = cs.standard_id;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_id, count(employee_id) as employee_count FROM Employee GROUP BY company_id HAVING employee_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT standard_name, AVG(compliance_level) as avg_compliance_level FROM ComplianceStandard JOIN ComplianceReport ON ComplianceStandard.standard_id = ComplianceReport.standard_id GROUP BY standard_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, COUNT(report_id) as report_count FROM Company LEFT JOIN Employee ON Company.company_id = Employee.company_id LEFT JOIN Report ON Employee.employee_id = Report.employee_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, MAX(report_date) as latest_report_date FROM Company LEFT JOIN Employee ON Company.company_id = Employee.company_id LEFT JOIN Report ON Employee.employee_id = Report.employee_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, MAX(report_date) as latest_report_date FROM Company LEFT JOIN Employee ON Company.company_id = Employee.company_id LEFT JOIN Report ON Employee.employee_id = Report.employee_id WHERE report_date >= '2022-01-01' GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT company_name FROM Company;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, SUM(compliance_level) as total_compliance FROM Company LEFT JOIN Employee ON Company.company_id = Employee.company_id LEFT JOIN Report ON Employee.employee_id = Report.employee_id LEFT JOIN ComplianceReport ON Report.report_id = ComplianceReport.report_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, MAX(compliance_level) as max_compliance_level FROM Company LEFT JOIN Employee ON Company.company_id = Employee.company_id LEFT JOIN Report ON Employee.employee_id = Report.employee_id LEFT JOIN ComplianceReport ON Report.report_id = ComplianceReport.report_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT company_name, AVG(compliance_level) as avg_compliance_level FROM Company LEFT JOIN Employee ON Company.company_id = Employee.company_id LEFT JOIN Report ON Employee.employee_id = Report.employee_id LEFT JOIN ComplianceReport ON Report.report_id = ComplianceReport.report_id GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT cs.standard_name, SUM(cr.compliance_level) as total_compliance_level FROM ComplianceStandard cs JOIN ComplianceReport cr ON cs.standard_id = cr.standard_id GROUP BY cs.standard_name;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT e.employee_name, COUNT(r.report_id) as report_count FROM Employee e LEFT JOIN Report r ON e.employee_id = r.employee_id GROUP BY e.employee_name HAVING report_count > 2;",
  "### TABLEDATA\n\nCREATE TABLE Company (\n    company_id INT PRIMARY KEY,\n    company_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Employee (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(255) NOT NULL,\n    company_id INT NOT NULL,\n    position VARCHAR(255) NOT NULL,\n    FOREIGN KEY (company_id) REFERENCES Company(company_id)\n);\n\nCREATE TABLE Report (\n    report_id INT PRIMARY KEY,\n    employee_id INT NOT NULL,\n    report_date DATE NOT NULL,\n    report_text TEXT NOT NULL,\n    FOREIGN KEY (employee_id) REFERENCES Employee(employee_id)\n);\n\nCREATE TABLE ComplianceStandard (\n    standard_id INT PRIMARY KEY,\n    standard_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ComplianceReport (\n    report_id INT NOT NULL,\n    standard_id INT NOT NULL,\n    compliance_level INT NOT NULL,\n    FOREIGN KEY (report_id) REFERENCES Report(report_id),\n    FOREIGN KEY (standard_id) REFERENCES ComplianceStandard(standard_id)\n);\n\n### STATEMENT\n\nSELECT c.company_name, COUNT(e.employee_id) as employee_count FROM Company c LEFT JOIN Employee e ON c.company_id = e.company_id GROUP BY c.company_name HAVING employee_count < 5;"
]