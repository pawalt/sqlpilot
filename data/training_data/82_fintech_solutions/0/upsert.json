[
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('1', '123e4567-e89b-12d3-a456-426614174000', 100.50, '2021-10-01 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('2', '223e4567-e89b-12d3-a456-426614174000', 200.75, '2021-10-02 09:45:00')",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('3', '323e4567-e89b-12d3-a456-426614174000', 150.25, '2021-10-03 12:15:00')",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('4', '423e4567-e89b-12d3-a456-426614174000', 75.80, '2021-10-04 14:20:00')",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('5', '523e4567-e89b-12d3-a456-426614174000', 300.00, '2021-10-05 17:30:00')",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('6', '623e4567-e89b-12d3-a456-426614174000', 125.50, '2021-10-06 11:45:00')",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUP...",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bee', '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bee', 100.50, '2022-01-01 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 200.0, transaction_date = '2022-02-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('2da03a8c-af9b-4a3a-b276-39da3dd3349c', '2da03a8c-af9b-4a3a-b276-39da3dd3349c', 150.75, '2022-01-02 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 250.0, transaction_date = '2022-02-02 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('3fb0970c-fb99-4a11-bdf8-ea334f17fdac', '3fb0970c-fb99-4a11-bdf8-ea334f17fdac', 200.00, '2022-01-03 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 300.0, transaction_date = '2022-02-03 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('4fd5ff62-0db6-4017-b2e3-872b1b9e9bc0', '4fd5ff62-0db6-4017-b2e3-872b1b9e9bc0', 250.25, '2022-01-04 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 350.0, transaction_date = '2022-02-04 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('5e6a6577-758c-494d-b7e3-3ffd2d03a2ce', '5e6a6577-758c-494d-b7e3-3ffd2d03a2ce', 300.50, '2022-01-05 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 400.0, transaction_date = '2022-02-05 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('6dd6a9ee-710d-4f5c-a8e9-0d597999129f', '6dd6a9ee-710d-4f5c-a8e9-0d597999129f', 350.75, '2022-01-06 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 450.0, transaction_date = '2022-02-06 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('7a7179c8-ef2f-4378-b456-0d1d5d1ff989', '7a7179c8-ef2f-4378-b456-0d1d5d1ff989', 400.00, '2022-01-07 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 500.0, transaction_date = '2022-02-07 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('898a8470-302a-465e-afdc-3535ce0370eb', '898a8470-302a-465e-afdc-3535ce0370eb', 450.25, '2022-01-08 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 550.0, transaction_date = '2022-02-08 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('9cdc5172-9179-4171-a5c5-5b64934fd893', '9cdc5172-9179-4171-a5c5-5b64934fd893', 500.50, '2022-01-09 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 600.0, transaction_date = '2022-02-09 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('aeebbfb8-8bb0-4162-af16-6d3ae1486e67', 'aeebbfb8-8bb0-4162-af16-6d3ae1486e67', 550.75, '2022-01-10 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 650.0, transaction_date = '2022-02-10 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('b8e48ab2-43e0-4756-a0b5-9c734a9e6f15', 'b8e48ab2-43e0-4756-a0b5-9c734a9e6f15', 600.00, '2022-01-11 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 700.0, transaction_date = '2022-02-11 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('c8adfa2a-2d05-401d-a41c-bb715d9e6d1a', 'c8adfa2a-2d05-401d-a41c-bb715d9e6d1a', 650.25, '2022-01-12 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 750.0, transaction_date = '2022-02-12 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('d5f9f4a8-7d63-4bb7-9871-c0e20520c7ed', 'd5f9f4a8-7d63-4bb7-9871-c0e20520c7ed', 700.50, '2022-01-13 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 800.0, transaction_date = '2022-02-13 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('e04ee151-18ff-4398-877e-4413b981beae', 'e04ee151-18ff-4398-877e-4413b981beae', 750.75, '2022-01-14 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 850.0, transaction_date = '2022-02-14 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('f5d1cc92-4bed-4aaa-af8c-904956e2d7fa', 'f5d1cc92-4bed-4aaa-af8c-904956e2d7fa', 800.00, '2022-01-15 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 900.0, transaction_date = '2022-02-15 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('g32fe47a-c0b0-40cf-9893-d4b530eb56e5', 'g32fe47a-c0b0-40cf-9893-d4b530eb56e5', 850.25, '2022-01-16 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 950.0, transaction_date = '2022-02-16 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('h5b8f60d-d69a-4210-b846-08bb057337db', 'h5b8f60d-d69a-4210-b846-08bb057337db', 900.50, '2022-01-17 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 1000.0, transaction_date = '2022-02-17 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('i9ff47e5-3548-4a7b-b646-b62f5a7dc385', 'i9ff47e5-3548-4a7b-b646-b62f5a7dc385', 950.75, '2022-01-18 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 1050.0, transaction_date = '2022-02-18 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    customer_id UUID,\n    amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES ('j83df7c9-b109-4f19-a709-34cdfed3bb2d', 'j83df7c9-b109-4f19-a709-34cdfed3bb2d', 1000.00, '2022-01-19 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET amount = 1100.0, transaction_date = '2022-02-19 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (1, 101, 50.00, '2022-10-10') ON DUPLICATE KEY UPDATE amount = 50.00, transaction_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (2, 102, 75.50, '2022-10-11') ON DUPLICATE KEY UPDATE amount = 75.50, transaction_date = '2022-10-11';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (3, 103, 100.25, '2022-10-12') ON DUPLICATE KEY UPDATE amount = 100.25, transaction_date = '2022-10-12';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (4, 104, 125.75, '2022-10-13') ON DUPLICATE KEY UPDATE amount = 125.75, transaction_date = '2022-10-13';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (5, 105, 150.50, '2022-10-14') ON DUPLICATE KEY UPDATE amount = 150.50, transaction_date = '2022-10-14';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (6, 106, 175.25, '2022-10-15') ON DUPLICATE KEY UPDATE amount = 175.25, transaction_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (7, 107, 200.75, '2022-10-16') ON DUPLICATE KEY UPDATE amount = 200.75, transaction_date = '2022-10-16';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (8, 108, 225.50, '2022-10-17') ON DUPLICATE KEY UPDATE amount = 225.50, transaction_date = '2022-10-17';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (9, 109, 250.25, '2022-10-18') ON DUPLICATE KEY UPDATE amount = 250.25, transaction_date = '2022-10-18';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (10, 110, 275.75, '2022-10-19') ON DUPLICATE KEY UPDATE amount = 275.75, transaction_date = '2022-10-19';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (1, 1, 1000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 1000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (2, 2, 2000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 2000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (3, 3, 3000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 3000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (4, 4, 4000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 4000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (5, 5, 5000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 5000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (6, 6, 6000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 6000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (7, 7, 7000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 7000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (8, 8, 8000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 8000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (9, 9, 9000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 9000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nINSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (10, 10, 10000.00, NOW()) ON DUPLICATE KEY UPDATE account_balance = 10000.00, last_updated = NOW();",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (1, 1001, 50.00, '2022-01-01') ON DUPLICATE KEY UPDATE amount = amount + 50.00, transaction_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (101, 1, 5000.00, '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1000.00, last_updated = '2022-01-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (2, 1002, 75.00, '2022-01-02') ON DUPLICATE KEY UPDATE amount = amount + 75.00, transaction_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (102, 2, 8000.00, '2022-01-02 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1500.00, last_updated = '2022-01-02 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (3, 1003, 100.00, '2022-01-03') ON DUPLICATE KEY UPDATE amount = amount + 100.00, transaction_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (103, 3, 6000.00, '2022-01-03 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1200.00, last_updated = '2022-01-03 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (4, 1004, 125.00, '2022-01-04') ON DUPLICATE KEY UPDATE amount = amount + 125.00, transaction_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (104, 4, 7000.00, '2022-01-04 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1300.00, last_updated = '2022-01-04 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (5, 1005, 150.00, '2022-01-05') ON DUPLICATE KEY UPDATE amount = amount + 150.00, transaction_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (105, 5, 7500.00, '2022-01-05 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1400.00, last_updated = '2022-01-05 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (6, 1006, 175.00, '2022-01-06') ON DUPLICATE KEY UPDATE amount = amount + 175.00, transaction_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (106, 6, 8000.00, '2022-01-06 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1450.00, last_updated = '2022-01-06 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (7, 1007, 200.00, '2022-01-07') ON DUPLICATE KEY UPDATE amount = amount + 200.00, transaction_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (107, 7, 8500.00, '2022-01-07 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1600.00, last_updated = '2022-01-07 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (8, 1008, 225.00, '2022-01-08') ON DUPLICATE KEY UPDATE amount = amount + 225.00, transaction_date = '2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (108, 8, 9000.00, '2022-01-08 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1750.00, last_updated = '2022-01-08 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (9, 1009, 250.00, '2022-01-09') ON DUPLICATE KEY UPDATE amount = amount + 250.00, transaction_date = '2022-01-09';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (109, 9, 9500.00, '2022-01-09 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 1800.00, last_updated = '2022-01-09 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (customer_id, transaction_id, amount, transaction_date) VALUES (10, 1010, 275.00, '2022-01-10') ON DUPLICATE KEY UPDATE amount = amount + 275.00, transaction_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (customer_id INT, transaction_id INT, amount DECIMAL(10,2), transaction_date DATE);\n\nCREATE TABLE account_information (account_id INT, customer_id INT, account_balance DECIMAL(10,2), last_updated TIMESTAMP);\n\n### STATEMENT\n\nUPSERT INTO account_information (account_id, customer_id, account_balance, last_updated) VALUES (110, 10, 10000.00, '2022-01-10 12:00:00') ON DUPLICATE KEY UPDATE account_balance = account_balance + 2000.00, last_updated = '2022-01-10 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (1, 101, 50.25, '2022-01-15') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (2, 102, 100.50, '2022-01-20') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (3, 103, 75.75, '2022-02-05') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (4, 104, 120.00, '2022-02-10') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (5, 105, 90.50, '2022-03-01') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (6, 106, 60.75, '2022-03-05') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (7, 107, 85.25, '2022-03-10') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (8, 108, 110.00, '2022-04-01') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (9, 109, 70.50, '2022-04-05') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (10, 110, 95.75, '2022-04-10') ON CONFLICT (transaction_id) DO UPDATE SET amount = EXCLUDED.amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (1, 101, 500.25, 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (2, 102, 1000.50, 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (3, 103, 750.75, 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (4, 104, 1200.00, 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (5, 105, 900.50, 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (6, 106, 600.75, 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (7, 107, 850.25, 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (8, 108, 1100.00, 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (9, 109, 700.50, 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (10, 110, 950.75, 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance, account_type = EXCLUDED.account_type;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (1, 1, 'Transaction successful', '2022-01-15 12:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (2, 2, 'Transaction failed', '2022-01-20 14:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (3, 3, 'Transaction pending', '2022-02-05 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (4, 4, 'Transaction completed', '2022-02-10 15:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (5, 5, 'Transaction processed', '2022-03-01 11:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (6, 6, 'Transaction approved', '2022-03-05 09:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (7, 7, 'Transaction declined', '2022-03-10 16:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (8, 8, 'Transaction verified', '2022-04-01 13:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (9, 9, 'Transaction canceled', '2022-04-05 10:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (10, 10, 'Transaction completed', '2022-04-10 14:00:00') ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (1, 101, 100.50, '2022-01-01') ON DUPLICATE KEY UPDATE amount = 100.50, transaction_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (2, 102, 150.75, '2022-01-02') ON DUPLICATE KEY UPDATE amount = 150.75, transaction_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (3, 103, 200.00, '2022-01-03') ON DUPLICATE KEY UPDATE amount = 200.00, transaction_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (4, 104, 250.25, '2022-01-04') ON DUPLICATE KEY UPDATE amount = 250.25, transaction_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (5, 105, 300.50, '2022-01-05') ON DUPLICATE KEY UPDATE amount = 300.50, transaction_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (6, 106, 350.75, '2022-01-06') ON DUPLICATE KEY UPDATE amount = 350.75, transaction_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (7, 107, 400.00, '2022-01-07') ON DUPLICATE KEY UPDATE amount = 400.00, transaction_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (8, 108, 450.25, '2022-01-08') ON DUPLICATE KEY UPDATE amount = 450.25, transaction_date = '2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (9, 109, 500.50, '2022-01-09') ON DUPLICATE KEY UPDATE amount = 500.50, transaction_date = '2022-01-09';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_transactions (transaction_id, customer_id, amount, transaction_date) VALUES (10, 110, 550.75, '2022-01-10') ON DUPLICATE KEY UPDATE amount = 550.75, transaction_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (101, 1, 1000.50, 'Savings') ON DUPLICATE KEY UPDATE account_balance = 1000.50, account_type = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (102, 2, 1500.75, 'Checking') ON DUPLICATE KEY UPDATE account_balance = 1500.75, account_type = 'Checking';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (103, 3, 2000.00, 'Savings') ON DUPLICATE KEY UPDATE account_balance = 2000.00, account_type = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (104, 4, 2500.25, 'Checking') ON DUPLICATE KEY UPDATE account_balance = 2500.25, account_type = 'Checking';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (105, 5, 3000.50, 'Savings') ON DUPLICATE KEY UPDATE account_balance = 3000.50, account_type = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (106, 6, 3500.75, 'Checking') ON DUPLICATE KEY UPDATE account_balance = 3500.75, account_type = 'Checking';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (107, 7, 4000.00, 'Savings') ON DUPLICATE KEY UPDATE account_balance = 4000.00, account_type = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (108, 8, 4500.25, 'Checking') ON DUPLICATE KEY UPDATE account_balance = 4500.25, account_type = 'Checking';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (109, 9, 5000.50, 'Savings') ON DUPLICATE KEY UPDATE account_balance = 5000.50, account_type = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (account_id, customer_id, account_balance, account_type) VALUES (110, 10, 5500.75, 'Checking') ON DUPLICATE KEY UPDATE account_balance = 5500.75, account_type = 'Checking';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (1, 1, 'Transaction successful', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE log_description = 'Transaction successful', log_date = '2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (2, 2, 'Transaction failed', '2022-01-02 10:00:00') ON DUPLICATE KEY UPDATE log_description = 'Transaction failed', log_date = '2022-01-02 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (3, 3, 'Transaction pending', '2022-01-03 10:00:00') ON DUPLICATE KEY UPDATE log_description = 'Transaction pending', log_date = '2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (4, 4, 'Transaction processed', '2022-01-04 10:00:00') ON DUPLICATE KEY UPDATE log_description = 'Transaction processed', log_date = '2022-01-04 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date DATE\n);\n\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL,\n    account_type VARCHAR(50)\n);\n\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    log_description TEXT,\n    log_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transactions_log (log_id, transaction_id, log_description, log_date) VALUES (5, 5, 'Transaction completed', '2022-01-05 10:00:00') ON DUPLICATE KEY UPDATE log_description = 'Transaction completed', log_date = '2022-01-05 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_email) DO UPDATE SET customer_name = excluded.customer_name, customer_phone = excluded.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (1, 'Savings', 1000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, transaction_type, amount, transaction_date) VALUES (1, 'Deposit', 500.00, '2022-01-15 10:00:00') ON CONFLICT (account_id, transaction_type, transaction_date) DO UPDATE SET amount = excluded.amount;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, transaction_status, remark) VALUES (1, 'Success', 'Deposit successful') ON CONFLICT (transaction_id) DO UPDATE SET transaction_status = excluded.transaction_status, remark = excluded.remark;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Alice Smith', 'alice.smith@example.com', '234-567-8901') ON CONFLICT (customer_email) DO UPDATE SET customer_name = excluded.customer_name, customer_phone = excluded.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (2, 'Checking', 1500.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, transaction_type, amount, transaction_date) VALUES (2, 'Withdrawal', 200.00, '2022-01-16 15:30:00') ON CONFLICT (account_id, transaction_type, transaction_date) DO UPDATE SET amount = excluded.amount;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, transaction_status, remark) VALUES (2, 'Success', 'Withdrawal successful') ON CONFLICT (transaction_id) DO UPDATE SET transaction_status = excluded.transaction_status, remark = excluded.remark;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Emma Johnson', 'emma.johnson@example.com', '345-678-9012') ON CONFLICT (customer_email) DO UPDATE SET customer_name = excluded.customer_name, customer_phone = excluded.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (3, 'Savings', 2000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, transaction_type, amount, transaction_date) VALUES (3, 'Deposit', 700.00, '2022-01-17 12:15:00') ON CONFLICT (account_id, transaction_type, transaction_date) DO UPDATE SET amount = excluded.amount;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, transaction_status, remark) VALUES (3, 'Success', 'Deposit successful') ON CONFLICT (transaction_id) DO UPDATE SET transaction_status = excluded.transaction_status, remark = excluded.remark;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Michael Brown', 'michael.brown@example.com', '456-789-0123') ON CONFLICT (customer_email) DO UPDATE SET customer_name = excluded.customer_name, customer_phone = excluded.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (4, 'Checking', 2500.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, transaction_type, amount, transaction_date) VALUES (4, 'Withdrawal', 300.00, '2022-01-18 08:45:00') ON CONFLICT (account_id, transaction_type, transaction_date) DO UPDATE SET amount = excluded.amount;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, transaction_status, remark) VALUES (4, 'Success', 'Withdrawal successful') ON CONFLICT (transaction_id) DO UPDATE SET transaction_status = excluded.transaction_status, remark = excluded.remark;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, customer_email, customer_phone) VALUES ('Sophia Wilson', 'sophia.wilson@example.com', '567-890-1234') ON CONFLICT (customer_email) DO UPDATE SET customer_name = excluded.customer_name, customer_phone = excluded.customer_phone;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts (customer_id, account_type, balance) VALUES (5, 'Savings', 3000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (account_id, transaction_type, amount, transaction_date) VALUES (5, 'Deposit', 900.00, '2022-01-19 17:00:00') ON CONFLICT (account_id, transaction_type, transaction_date) DO UPDATE SET amount = excluded.amount;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, transaction_status, remark) VALUES (5, 'Success', 'Deposit successful') ON CONFLICT (transaction_id) DO UPDATE SET transaction_status = excluded.transaction_status, remark = excluded.remark;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_name, customer_email, customer_phone) VALUES ('John Doe', 'john.doe@example.com', '+1234567890') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '+1111111111';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_name, customer_email, customer_phone) VALUES ('Alice Smith', 'alice.smith@example.com', '+9876543210') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '+9999999999';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_name, customer_email, customer_phone) VALUES ('Bob Johnson', 'bob.johnson@example.com', '+5678901234') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '+8888888888';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts(customer_id, account_type, balance) VALUES (1, 'Savings', 5000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = 6000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts(customer_id, account_type, balance) VALUES (2, 'Checking', 3000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = 4000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts(customer_id, account_type, balance) VALUES (3, 'Investment', 10000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = 12000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions(account_id, transaction_type, amount, transaction_date) VALUES (1, 'Deposit', 1000.00, '2022-01-10 08:00:00') ON CONFLICT (account_id, transaction_type, amount, transaction_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions(account_id, transaction_type, amount, transaction_date) VALUES (2, 'Withdrawal', 500.00, '2022-01-12 10:00:00') ON CONFLICT (account_id, transaction_type, amount, transaction_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions(account_id, transaction_type, amount, transaction_date) VALUES (3, 'Transfer', 2000.00, '2022-01-15 15:00:00') ON CONFLICT (account_id, transaction_type, amount, transaction_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history(transaction_id, transaction_status, remark) VALUES (1, 'Success', 'Deposit completed successfully') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history(transaction_id, transaction_status, remark) VALUES (2, 'Success', 'Withdrawal processed') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history(transaction_id, transaction_status, remark) VALUES (3, 'Pending', 'Transfer in progress') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_name, customer_email, customer_phone) VALUES ('Emma Brown', 'emma.brown@example.com', '+4444444444') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '+3333333333';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_name, customer_email, customer_phone) VALUES ('Michael White', 'michael.white@example.com', '+2222222222') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '+6666666666';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_name, customer_email, customer_phone) VALUES ('Jennifer Davis', 'jennifer.davis@example.com', '+7777777777') ON CONFLICT (customer_email) DO UPDATE SET customer_phone = '+5555555555';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts(customer_id, account_type, balance) VALUES (4, 'Savings', 8000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = 9000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts(customer_id, account_type, balance) VALUES (5, 'Checking', 4000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = 5000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO accounts(customer_id, account_type, balance) VALUES (6, 'Investment', 15000.00) ON CONFLICT (customer_id, account_type) DO UPDATE SET balance = 17000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions(account_id, transaction_type, amount, transaction_date) VALUES (4, 'Deposit', 2000.00, '2022-01-18 12:00:00') ON CONFLICT (account_id, transaction_type, amount, transaction_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions(account_id, transaction_type, amount, transaction_date) VALUES (5, 'Withdrawal', 1000.00, '2022-01-20 14:00:00') ON CONFLICT (account_id, transaction_type, amount, transaction_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(100),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE accounts (\n    account_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    account_type VARCHAR(20),\n    balance DECIMAL(10, 2)\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES accounts(account_id),\n    transaction_type VARCHAR(15),\n    amount DECIMAL(10, 2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE transaction_history (\n    history_id SERIAL PRIMARY KEY,\n    transaction_id INT REFERENCES transactions(transaction_id),\n    transaction_status VARCHAR(15),\n    remark TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions(account_id, transaction_type, amount, transaction_date) VALUES (6, 'Transfer', 3000.00, '2022-01-25 18:00:00') ON CONFLICT (account_id, transaction_type, amount, transaction_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (1, 101, 50.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (1, 101, 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (101, 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (1, 1, 50.00, '2022-01-01') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (1, 'Savings', '2022-01-01') ON CONFLICT (account_id) DO UPDATE SET account_type = EXCLUDED.account_type, opening_date = EXCLUDED.opening_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (2, 102, 75.00, '2022-01-02') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (2, 102, 2000.00) ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (2, 2, 75.00, '2022-01-02') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (2, 'Checking', '2022-01-02') ON CONFLICT (account_id) DO UPDATE SET account_type = EXCLUDED.account_type, opening_date = EXCLUDED.opening_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (3, 103, 100.00, '2022-01-03') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (3, 103, 1500.00) ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (103, 'Mike', 'Johnson', 'mike.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (3, 3, 100.00, '2022-01-03') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (3, 'Savings', '2022-01-03') ON CONFLICT (account_id) DO UPDATE SET account_type = EXCLUDED.account_type, opening_date = EXCLUDED.opening_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (4, 104, 125.00, '2022-01-04') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (4, 104, 3000.00) ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (104, 'Sarah', 'Wilson', 'sarah.wilson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (4, 4, 125.00, '2022-01-04') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (4, 'Checking', '2022-01-04') ON CONFLICT (account_id) DO UPDATE SET account_type = EXCLUDED.account_type, opening_date = EXCLUDED.opening_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (5, 105, 150.00, '2022-01-05') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = EXCLUDED.transaction_amount, transaction_date = EXCLUDED.transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (5, 105, 2500.00) ON CONFLICT (account_id) DO UPDATE SET account_balance = EXCLUDED.account_balance;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (1, 101, 50.20, '2023-04-15') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 50.20, transaction_date = '2023-04-15';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (201, 101, 500.10) ON CONFLICT (account_id) DO UPDATE SET account_balance = 500.10;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (101, 'John', 'Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (1, 201, 50.20, '2023-04-15') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 50.20, transaction_date = '2023-04-15';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (201, 'Savings', '2023-04-15') ON CONFLICT (account_id) DO UPDATE SET account_type = 'Savings', opening_date = '2023-04-15';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (2, 102, 75.30, '2023-04-16') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 75.30, transaction_date = '2023-04-16';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (202, 102, 700.50) ON CONFLICT (account_id) DO UPDATE SET account_balance = 700.50;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (2, 202, 75.30, '2023-04-16') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 75.30, transaction_date = '2023-04-16';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (202, 'Checking', '2023-04-16') ON CONFLICT (account_id) DO UPDATE SET account_type = 'Checking', opening_date = '2023-04-16';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (3, 103, 100.00, '2023-04-17') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 100.00, transaction_date = '2023-04-17';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (203, 103, 1000.00) ON CONFLICT (account_id) DO UPDATE SET account_balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (103, 'Alice', 'Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (3, 203, 100.00, '2023-04-17') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 100.00, transaction_date = '2023-04-17';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (203, 'Investment', '2023-04-17') ON CONFLICT (account_id) DO UPDATE SET account_type = 'Investment', opening_date = '2023-04-17';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_transactions (transaction_id, customer_id, transaction_amount, transaction_date) VALUES (4, 104, 120.50, '2023-04-18') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 120.50, transaction_date = '2023-04-18';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (account_id, customer_id, account_balance) VALUES (204, 104, 1500.75) ON CONFLICT (account_id) DO UPDATE SET account_balance = 1500.75;",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO customer_info (customer_id, first_name, last_name, email) VALUES (104, 'Bob', 'Brown', 'bob.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Bob', last_name = 'Brown', email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, transaction_amount, transaction_date) VALUES (4, 204, 120.50, '2023-04-18') ON CONFLICT (transaction_id) DO UPDATE SET transaction_amount = 120.50, transaction_date = '2023-04-18';",
  "### TABLEDATA\n\nCREATE TABLE customer_transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE customer_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL\n);\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE account_details (\n    account_id INT PRIMARY KEY,\n    account_type VARCHAR,\n    opening_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO account_details (account_id, account_type, opening_date) VALUES (204, 'Savings', '2023-04-18') ON CONFLICT (account_id) DO UPDATE SET account_type = 'Savings', opening_date = '2023-04-18';"
]