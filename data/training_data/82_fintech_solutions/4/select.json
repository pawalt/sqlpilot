[
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, detected_fraud FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities WHERE detected_fraud = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities WHERE detected_fraud = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date FROM fraudulent_activities WHERE activity_type = 'login';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities ORDER BY activity_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities ORDER BY user_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date FROM fraudulent_activities WHERE activity_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities WHERE activity_type LIKE '%payment%';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities WHERE detected_fraud = FALSE ORDER BY activity_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date FROM fraudulent_activities WHERE user_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities WHERE activity_type = 'login' AND detected_fraud = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities WHERE activity_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities WHERE activity_type IN ('login', 'payment');",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date FROM fraudulent_activities WHERE activity_type = 'login' AND detected_fraud = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities WHERE user_id IN (100, 200, 300);",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT id, user_id, activity_type FROM fraudulent_activities WHERE activity_date < '2022-03-01' AND detected_fraud = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date FROM fraudulent_activities WHERE detected_fraud = TRUE ORDER BY activity_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_activities WHERE detected_fraud = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_activities FROM fraudulent_activities GROUP BY user_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_type, COUNT(*) AS total_activities FROM fraudulent_activities GROUP BY user_id, activity_type;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_type, COUNT(*) AS total_activities FROM fraudulent_activities WHERE detected_fraud = TRUE GROUP BY user_id, activity_type;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(TIMESTAMPDIFF(SECOND, MIN(activity_date), MAX(activity_date))) AS avg_time_between_activities FROM fraudulent_activities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_type, COUNT(*) AS total_activities FROM fraudulent_activities WHERE detected_fraud = TRUE GROUP BY activity_type;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LAG(activity_date) OVER (PARTITION BY user_id ORDER BY activity_date) AS last_activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LEAD(activity_date) OVER (PARTITION BY user_id ORDER BY activity_date) AS next_activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LAG(activity_type) OVER (PARTITION BY user_id ORDER BY activity_date) AS last_activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LEAD(activity_type) OVER (PARTITION BY user_id ORDER BY activity_date) AS next_activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LAG(activity_date) OVER (ORDER BY activity_date) AS last_activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LEAD(activity_date) OVER (ORDER BY activity_date) AS next_activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LAG(activity_type) OVER (ORDER BY activity_date) AS last_activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LEAD(activity_type) OVER (ORDER BY activity_date) AS next_activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LAG(activity_date) OVER () AS last_activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LEAD(activity_date) OVER () AS next_activity_date FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LAG(activity_type) OVER () AS last_activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, activity_date, LEAD(activity_type) OVER () AS next_activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id, activity_type FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_activities (\n  id INT PRIMARY KEY,\n  user_id INT,\n  activity_type VARCHAR(50),\n  activity_date TIMESTAMP,\n  detected_fraud BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(TIMESTAMPDIFF(SECOND, MIN(activity_date), MAX(activity_date))) AS avg_time_between_activities FROM fraudulent_activities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_time, user_id FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM DetectedFraud;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT detection_id, activity_id, detection_time, detection_result FROM DetectedFraud;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_time, user_id, activity_type, activity_description FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT detection_id, activity_id, detection_time, detection_result FROM DetectedFraud WHERE detection_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT detection_id, activity_id, detection_time, detection_result FROM DetectedFraud WHERE detection_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_time, user_id, activity_type FROM FraudulentActivities WHERE activity_type = 'Payment';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM DetectedFraud WHERE activity_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(activity_time) FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(detection_time) FROM DetectedFraud;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT activity_type FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM FraudulentActivities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, COUNT(*) FROM DetectedFraud GROUP BY activity_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id, activity_type FROM FraudulentActivities ORDER BY user_id, activity_type;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(CAST(EXTRACT(EPOCH FROM activity_time) AS INTEGER)) FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, COUNT(*) AS fraud_count FROM DetectedFraud GROUP BY activity_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_time, user_id, activity_type FROM FraudulentActivities WHERE activity_time >= '2022-01-01' ORDER BY activity_time DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE activity_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM DetectedFraud WHERE detection_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_time, user_id FROM FraudulentActivities WHERE user_id = '98765432-1012-4567-8901-210987654321';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT DISTINCT activity_type FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM DetectedFraud INNER JOIN FraudulentActivities ON DetectedFraud.activity_id = FraudulentActivities.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, detection_result FROM DetectedFraud WHERE detection_result = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_activities FROM FraudulentActivities GROUP BY user_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(EXTRACT(EPOCH FROM AGE(activity_time))) AS avg_activity_age FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT activity_type) AS num_unique_activities FROM FraudulentActivities GROUP BY user_id ORDER BY num_unique_activities DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_description FROM FraudulentActivities WHERE char_length(activity_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(EXTRACT(EPOCH FROM AGE(activity_time))) AS max_activity_age FROM FraudulentActivities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT detection_id, detection_time, detection_result FROM DetectedFraud WHERE detection_time BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, ARRAY_AGG(activity_type) AS activities FROM FraudulentActivities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT AVG(EXTRACT(EPOCH FROM AGE(activity_time))) AS avg_activity_age, MAX(EXTRACT(EPOCH FROM AGE(activity_time))) AS max_activity_age FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_activities FROM FraudulentActivities WHERE activity_time > NOW() - INTERVAL '1 week' GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT MAX(EXTRACT(EPOCH FROM AGE(activity_time))) AS max_activity_age FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, array_length(STRING_TO_ARRAY(user_id::text, '-'), 1) AS id_parts FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_activities FROM FraudulentActivities WHERE activity_time > NOW() - INTERVAL '1 month' GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT detection_id, detection_time FROM DetectedFraud WHERE detection_result = FALSE ORDER BY detection_time DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id UUID PRIMARY KEY,\n    activity_time TIMESTAMP,\n    user_id UUID,\n    activity_type VARCHAR,\n    activity_description TEXT\n);\n\nCREATE TABLE DetectedFraud (\n    detection_id UUID PRIMARY KEY,\n    activity_id UUID,\n    detection_time TIMESTAMP,\n    detection_result BOOLEAN\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(EXTRACT(EPOCH FROM AGE(activity_time))) AS total_activity_duration FROM FraudulentActivities GROUP BY user_id ORDER BY total_activity_duration DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, created_at FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, created_at FROM users WHERE username = 'jane_smith';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, email FROM users ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(created_at) AS avg_creation_date FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username IN ('alice', 'bob', 'charlie');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE email NOT LIKE '%@test.com';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(created_at) AS earliest_creation_date FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(created_at) AS latest_creation_date FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS user_count, MAX(created_at) AS latest_creation_date FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE username LIKE 'a%';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE created_at >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE '%john%';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE username = 'alice';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(created_at) AS latest_user_created_at FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE created_at BETWEEN '2022-02-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(created_at) AS avg_created_at FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE created_at < '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT username) AS unique_usernames FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username IN ('alice', 'bob', 'charlie');",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(created_at) AS earliest_user_created_at FROM users;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE created_at > '2022-03-15' AND username <> 'admin';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'alice' OR email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174001' AND username = 'bob';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users_created_in_2022 FROM users WHERE created_at >= '2022-01-01' AND created_at < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS users (\n    user_id UUID PRIMARY KEY,\n    username STRING,\n    email STRING,\n    created_at TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE username = 'admin' AND created_at < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, activity_description FROM FraudulentActivities WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT activity_date, activity_location FROM FraudulentActivities ORDER BY activity_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM SuspiciousTransactions;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, transaction_amount FROM SuspiciousTransactions WHERE transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_date, transaction_type FROM SuspiciousTransactions ORDER BY transaction_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM UserProfiles;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_name, user_email FROM UserProfiles WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT registration_date FROM UserProfiles ORDER BY registration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ActionLogs;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, action_type FROM ActionLogs WHERE action_type = 'login';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT action_time FROM ActionLogs ORDER BY action_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT activity_id, user_id, activity_description FROM FraudulentActivities WHERE activity_location = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, transaction_amount, transaction_type FROM SuspiciousTransactions WHERE user_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, user_name, user_email FROM UserProfiles WHERE registration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, action_type, action_time FROM ActionLogs WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_description, activity_date, activity_location FROM FraudulentActivities WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_id, user_id, transaction_amount, transaction_type FROM SuspiciousTransactions WHERE transaction_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, user_name, user_email FROM UserProfiles WHERE user_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, action_type, action_time FROM ActionLogs WHERE action_time BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT activity_description, activity_date FROM FraudulentActivities WHERE activity_location LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_activities FROM FraudulentActivities GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM SuspiciousTransactions WHERE transaction_amount > 500 AND transaction_type = 'Fraud';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_name, user_email FROM UserProfiles WHERE registration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(transaction_amount) AS max_transaction_amount FROM SuspiciousTransactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT activity_description, activity_date FROM FraudulentActivities WHERE activity_location = 'Los Angeles' ORDER BY activity_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM UserProfiles WHERE user_name LIKE '%John%' AND user_email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(transaction_amount) AS avg_transaction_amount FROM SuspiciousTransactions GROUP BY user_id HAVING avg_transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_logs, action_type FROM ActionLogs GROUP BY action_type ORDER BY num_logs DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(transaction_amount) AS total_transaction_amount FROM SuspiciousTransactions GROUP BY user_id ORDER BY total_transaction_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_name, user_email FROM UserProfiles WHERE registration_date BETWEEN '2022-01-01' AND '2022-05-31';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(DATE_PART('day', AGE(now(), registration_date))) AS avg_days_since_registration FROM UserProfiles GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_logs FROM ActionLogs WHERE action_time > '2022-06-01' GROUP BY user_id HAVING num_logs > 10;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(transaction_amount) AS min_transaction_amount, MAX(transaction_amount) AS max_transaction_amount FROM SuspiciousTransactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, activity_location, COUNT(*) AS num_activities FROM FraudulentActivities GROUP BY user_id, activity_location;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_name, user_email FROM UserProfiles WHERE user_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_date, SUM(transaction_amount) AS total_amount FROM SuspiciousTransactions GROUP BY transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, DATE_TRUNC('week', action_time) AS week_start, COUNT(*) AS num_actions FROM ActionLogs WHERE action_time > '2022-01-01' GROUP BY user_id, week_start HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    activity_description TEXT,\n    activity_date TIMESTAMP,\n    activity_location TEXT\n);\n\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    transaction_type TEXT\n);\n\n\nCREATE TABLE UserProfiles (\n    user_id INT PRIMARY KEY,\n    user_name TEXT,\n    user_email TEXT,\n    registration_date TIMESTAMP\n);\n\n\nCREATE TABLE ActionLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    action_type TEXT,\n    action_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, DATE_TRUNC('month', registration_date) AS month_joined, COUNT(*) AS num_users FROM UserProfiles GROUP BY month_joined;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_type, user_id FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM SuspiciousTransactions;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, user_id, transaction_amount FROM SuspiciousTransactions;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM UserWatchlist;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM UserWatchlist;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM TransactionHistory;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT history_id, user_id, transaction_id FROM TransactionHistory;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentPatterns;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description FROM FraudulentPatterns;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_type, user_id, activity_timestamp FROM FraudulentActivities WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, user_id, transaction_amount, transaction_timestamp FROM SuspiciousTransactions WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, username, watchlist_reason FROM UserWatchlist WHERE user_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT history_id, user_id, transaction_id, transaction_status FROM TransactionHistory WHERE user_id = 101112;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description, detection_algorithm FROM FraudulentPatterns WHERE pattern_id = 131415;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE activity_type = 'Suspicious';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM SuspiciousTransactions WHERE transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM UserWatchlist WHERE watchlist_reason IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM TransactionHistory WHERE transaction_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentPatterns WHERE detection_algorithm = 'Complex';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT activity_id, activity_type FROM FraudulentActivities WHERE activity_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(activity_id) AS activity_count FROM FraudulentActivities GROUP BY user_id HAVING COUNT(activity_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT a.user_id, b.username FROM FraudulentActivities a JOIN UserWatchlist b ON a.user_id = b.user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM SuspiciousTransactions WHERE transaction_amount > 1000 AND transaction_timestamp > '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, user_id, MAX(transaction_amount) AS max_amount FROM SuspiciousTransactions GROUP BY transaction_id, user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(transaction_amount) AS avg_amount FROM SuspiciousTransactions GROUP BY user_id HAVING AVG(transaction_amount) > 500;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM TransactionHistory WHERE transaction_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT th.user_id, th.transaction_id, st.transaction_amount FROM TransactionHistory th JOIN SuspiciousTransactions st ON th.transaction_id = st.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM FraudulentPatterns WHERE detection_algorithm = 'ML';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) AS total_amount FROM SuspiciousTransactions;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) AS unique_users FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM UserWatchlist WHERE watchlist_reason LIKE '%fraud%';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS avg_amount, MAX(transaction_amount) AS max_amount FROM SuspiciousTransactions;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(history_id) AS history_count FROM TransactionHistory GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT a.user_id, b.username, c.watchlist_reason FROM FraudulentActivities a JOIN UserWatchlist b ON a.user_id = b.user_id JOIN UserWatchlist c ON a.user_id = c.user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM SuspiciousTransactions WHERE EXTRACT(MONTH FROM transaction_timestamp) = 8;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(activity_id) AS activity_count FROM FraudulentActivities GROUP BY user_id ORDER BY activity_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) AS total_amount, AVG(transaction_amount) AS avg_amount FROM SuspiciousTransactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_type VARCHAR(50) NOT NULL,\n    user_id INT NOT NULL,\n    activity_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE SuspiciousTransactions (\n    transaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_amount DECIMAL NOT NULL,\n    transaction_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE UserWatchlist (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    watchlist_reason TEXT\n);\n\nCREATE TABLE TransactionHistory (\n    history_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transaction_status VARCHAR(20) NOT NULL\n);\n\nCREATE TABLE FraudulentPatterns (\n    pattern_id SERIAL PRIMARY KEY,\n    pattern_description TEXT,\n    detection_algorithm VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM TransactionHistory WHERE history_id IN (SELECT history_id FROM TransactionHistory WHERE transaction_status = 'Blocked');"
]