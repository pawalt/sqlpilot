<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><stat>show tables;</stat><divider><t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><stat>SHOW COLUMNS FROM fintech_solutions;</stat><divider><t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><stat>show columns from fintech_solutions;</stat><divider><t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><stat>SHOW CREATE TABLE fintech_solutions;</stat><divider><t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><stat>show create table fintech_solutions;</stat><divider><t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>SHOW CREATE TABLE users</stat><divider><t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>show create table users</stat><divider><t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>show tables</stat><divider><t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>SHOW COLUMNS FROM users</stat><divider><t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><stat>show columns from users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><stat>show tables</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><stat>SHOW TABLES</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><stat>show tables</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><stat>SHOW COLUMNS FROM users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><stat>show columns from users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><stat>SHOW COLUMNS FROM users</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><stat>show columns from users</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><stat>SHOW INDEX FROM transactions</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><stat>show index from transactions</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><stat>SHOW INDEX FROM transactions</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><stat>show index from transactions</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show tables;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show tables;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show tables;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show tables;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show tables;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show tables;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show tables;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW COLUMNS FROM Customers;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show columns from customers;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>SHOW CREATE TABLE Accounts;</stat><divider><t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><stat>show create table accounts;</stat><divider><t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><stat>show tables;</stat><divider><t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><stat>SHOW COLUMNS FROM user_info;</stat><divider><t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><stat>show columns from user_info;</stat><divider><t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><stat>SHOW INDEX FROM user_info;</stat><divider><t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><stat>show index from user_info;</stat>