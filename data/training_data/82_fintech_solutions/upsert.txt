<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><s>UPSERT INTO fintech_solutions (id, account_number, balance, user_id, created_at) VALUES (1, 123456789, 1000.00, 1, '2022-01-01 08:00:00')</s>
<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><s>upsert into fintech_solutions (id, account_number, balance, user_id, created_at) values (1, 123456789, 1000.00, 1, '2022-01-01 08:00:00')</s>
<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><s>UPSERT INTO fintech_solutions (id, account_number, balance, user_id, created_at) VALUES (2, 987654321, 500.50, 2, '2022-01-02 10:30:00')</s>
<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><s>upsert into fintech_solutions (id, account_number, balance, user_id, created_at) values (2, 987654321, 500.50, 2, '2022-01-02 10:30:00')</s>
<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><s>UPSERT INTO fintech_solutions (id, account_number, balance, user_id, created_at) VALUES (3, 555555555, 2000.75, 3, '2022-01-03 15:45:00')</s>
<t>CREATE TABLE fintech_solutions (id INT PRIMARY KEY, account_number INT, balance DECIMAL(10, 2), user_id INT, created_at TIMESTAMP)</t><s>upsert into fintech_solutions (id, account_number, balance, user_id, created_at) values (3, 555555555, 2000.75, 3, '2022-01-03 15:45:00')</s>
<t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>UPSERT INTO users (username, email, password) VALUES ('john_doe', 'john.doe@example.com', 'password123') ON CONFLICT (email) DO UPDATE SET username = 'johndoe_updated'</s>
<t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>upsert into users (username, email, password) values ('john_doe', 'john.doe@example.com', 'password123') on conflict (email) do update set username = 'johndoe_updated'</s>
<t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>UPSERT INTO users (username, email, password) VALUES ('emma_smith', 'emma.smith@example.com', 'password456') ON CONFLICT (email) DO NOTHING</s>
<t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>upsert into users (username, email, password) values ('emma_smith', 'emma.smith@example.com', 'password456') on conflict (email) do nothing</s>
<t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>UPSERT INTO users (username, email, password) VALUES ('mike_jones', 'mike.jones@example.com', 'password789') ON CONFLICT (email) DO UPDATE SET password = 'updated_password789'</s>
<t>CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(100) NOT NULL)</t><s>upsert into users (username, email, password) values ('mike_jones', 'mike.jones@example.com', 'password789') on conflict (email) do update set password = 'updated_password789'</s>
<t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><s>UPSERT INTO users (user_id, username, email, password) VALUES (1, 'JohnDoe', 'johndoe@example.com', 'pass123')</s>
<t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><s>upsert into users (user_id, username, email, password) values (1, 'johndoe', 'johndoe@example.com', 'pass123')</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><s>UPSERT INTO users (user_id, username, email, password) VALUES (1, 'JohnDoe', 'johndoe@example.com', 'pass123')</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><s>upsert into users (user_id, username, email, password) values (1, 'johndoe', 'johndoe@example.com', 'pass123')</s>
<t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><s>UPSERT INTO users (user_id, username, email, password) VALUES (2, 'JaneSmith', 'janesmith@example.com', 'pass456')</s>
<t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><s>upsert into users (user_id, username, email, password) values (2, 'janesmith', 'janesmith@example.com', 'pass456')</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><s>UPSERT INTO users (user_id, username, email, password) VALUES (2, 'JaneSmith', 'janesmith@example.com', 'pass456')</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><s>upsert into users (user_id, username, email, password) values (2, 'janesmith', 'janesmith@example.com', 'pass456')</s>
<t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><s>UPSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.50, '2022-05-15 10:30:00')</s>
<t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)</t><s>upsert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.50, '2022-05-15 10:30:00')</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><s>UPSERT INTO transactions (transaction_id, user_id, amount, transaction_date) VALUES (1, 1, 100.50, '2022-05-15 10:30:00')</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DECIMAL(10,2), transaction_date TIMESTAMP)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100), password VARCHAR(100))</t><s>upsert into transactions (transaction_id, user_id, amount, transaction_date) values (1, 1, 100.50, '2022-05-15 10:30:00')</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '123-456-7890') on duplicate key update first_name = 'john', last_name = 'doe', email = 'john.doe@example.com', phone_number = '123-456-7890';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance, date_opened) VALUES (1, 1, 'Savings', 1000.50, '2023-01-01') ON DUPLICATE KEY UPDATE customer_id = 1, account_type = 'Savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into accounts (account_id, customer_id, account_type, balance, date_opened) values (1, 1, 'savings', 1000.50, '2023-01-01') on duplicate key update customer_id = 1, account_type = 'savings', balance = 1000.50, date_opened = '2023-01-01';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.25, '2023-01-15 12:00:00') ON DUPLICATE KEY UPDATE account_id = 1, transaction_type = 'Deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE Loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type VARCHAR(50), start_date DATE, payment_due_date DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, account_id INT, transaction_type VARCHAR(50), amount DECIMAL(10, 2), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES Accounts(account_id));

CREATE TABLE Accounts (account_id INT PRIMARY KEY, customer_id INT, account_type VARCHAR(50), balance DECIMAL(10, 2), date_opened DATE, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id));

CREATE TABLE Customers (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), email VARCHAR(100), phone_number VARCHAR(20));</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.25, '2023-01-15 12:00:00') on duplicate key update account_id = 1, transaction_type = 'deposit', amount = 500.25, transaction_date = '2023-01-15 12:00:00';</s>
<t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><s>INSERT INTO user_info (user_id, username, email, registration_date) VALUES (1, 'john_doe', 'john.doe@example.com', '2022-01-01') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, registration_date = EXCLUDED.registration_date;</s>
<t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><s>insert into user_info (user_id, username, email, registration_date) values (1, 'john_doe', 'john.doe@example.com', '2022-01-01') on conflict (user_id) do update set username = excluded.username, email = excluded.email, registration_date = excluded.registration_date;</s>
<t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><s>INSERT INTO user_info (user_id, username, email, registration_date) VALUES (2, 'jane_smith', 'jane.smith@example.com', '2022-01-02') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, registration_date = EXCLUDED.registration_date;</s>
<t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><s>insert into user_info (user_id, username, email, registration_date) values (2, 'jane_smith', 'jane.smith@example.com', '2022-01-02') on conflict (user_id) do update set username = excluded.username, email = excluded.email, registration_date = excluded.registration_date;</s>
<t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><s>INSERT INTO user_info (user_id, username, email, registration_date) VALUES (3, 'alice_wonderland', 'alice.wonderland@example.com', '2022-01-03') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, email = EXCLUDED.email, registration_date = EXCLUDED.registration_date;</s>
<t>CREATE TABLE user_info (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, registration_date DATE)</t><s>insert into user_info (user_id, username, email, registration_date) values (3, 'alice_wonderland', 'alice.wonderland@example.com', '2022-01-03') on conflict (user_id) do update set username = excluded.username, email = excluded.email, registration_date = excluded.registration_date;</s>
