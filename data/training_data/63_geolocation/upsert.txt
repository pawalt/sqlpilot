<t>CREATE TABLE geolocation_data (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT, location_name VARCHAR(255))</t><stat>INSERT INTO geolocation_data (id, latitude, longitude, location_name) VALUES (1, 40.7128, -74.0060, 'New York City') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, location_name = 'New York City';</stat><divider><t>CREATE TABLE geolocation_data (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT, location_name VARCHAR(255))</t><stat>insert into geolocation_data (id, latitude, longitude, location_name) values (1, 40.7128, -74.0060, 'new york city') on duplicate key update latitude = 40.7128, longitude = -74.0060, location_name = 'new york city';</stat><divider><t>CREATE TABLE geolocation_data (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT, location_name VARCHAR(255))</t><stat>INSERT INTO geolocation_data (id, latitude, longitude, location_name) VALUES (2, 34.0522, -118.2437, 'Los Angeles') ON DUPLICATE KEY UPDATE latitude = 34.0522, longitude = -118.2437, location_name = 'Los Angeles';</stat><divider><t>CREATE TABLE geolocation_data (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT, location_name VARCHAR(255))</t><stat>insert into geolocation_data (id, latitude, longitude, location_name) values (2, 34.0522, -118.2437, 'los angeles') on duplicate key update latitude = 34.0522, longitude = -118.2437, location_name = 'los angeles';</stat><divider><t>CREATE TABLE geolocation_data (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT, location_name VARCHAR(255))</t><stat>INSERT INTO geolocation_data (id, latitude, longitude, location_name) VALUES (3, 41.8781, -87.6298, 'Chicago') ON DUPLICATE KEY UPDATE latitude = 41.8781, longitude = -87.6298, location_name = 'Chicago';</stat><divider><t>CREATE TABLE geolocation_data (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT, location_name VARCHAR(255))</t><stat>insert into geolocation_data (id, latitude, longitude, location_name) values (3, 41.8781, -87.6298, 'chicago') on duplicate key update latitude = 41.8781, longitude = -87.6298, location_name = 'chicago';</stat><divider><t>CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);

CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));</t><stat>UPSERT INTO location (id, latitude, longitude) VALUES (1, 40.7128, -74.0060);</stat><divider><t>CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);

CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));</t><stat>upsert into location (id, latitude, longitude) values (1, 40.7128, -74.0060);</stat><divider><t>CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));

CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO location (id, latitude, longitude) VALUES (1, 40.7128, -74.0060);</stat><divider><t>CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));

CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);</t><stat>upsert into location (id, latitude, longitude) values (1, 40.7128, -74.0060);</stat><divider><t>CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);

CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));</t><stat>UPSERT INTO address (id, street, city, country) VALUES (1, '123 Main St', 'New York', 'USA');</stat><divider><t>CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);

CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));</t><stat>upsert into address (id, street, city, country) values (1, '123 main st', 'new york', 'usa');</stat><divider><t>CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));

CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO address (id, street, city, country) VALUES (1, '123 Main St', 'New York', 'USA');</stat><divider><t>CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));

CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);</t><stat>upsert into address (id, street, city, country) values (1, '123 main st', 'new york', 'usa');</stat><divider><t>CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);

CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));</t><stat>UPSERT INTO location (id, latitude, longitude) VALUES (2, 34.0522, -118.2437);</stat><divider><t>CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);

CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));</t><stat>upsert into location (id, latitude, longitude) values (2, 34.0522, -118.2437);</stat><divider><t>CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));

CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO location (id, latitude, longitude) VALUES (2, 34.0522, -118.2437);</stat><divider><t>CREATE TABLE address (id INT PRIMARY KEY, street VARCHAR(255), city VARCHAR(255), country VARCHAR(255));

CREATE TABLE location (id INT PRIMARY KEY, latitude FLOAT, longitude FLOAT);</t><stat>upsert into location (id, latitude, longitude) values (2, 34.0522, -118.2437);</stat><divider><t>CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)

CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Locations (location_id, location_name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060)</stat><divider><t>CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)

CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)</t><stat>upsert into locations (location_id, location_name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060)</stat><divider><t>CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)

CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)</t><stat>UPSERT INTO Locations (location_id, location_name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060)</stat><divider><t>CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)

CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)</t><stat>upsert into locations (location_id, location_name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060)</stat><divider><t>CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)

CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Locations (location_id, location_name, latitude, longitude) VALUES (2, 'London', 51.5074, -0.1278)</stat><divider><t>CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)

CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)</t><stat>upsert into locations (location_id, location_name, latitude, longitude) values (2, 'london', 51.5074, -0.1278)</stat><divider><t>CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)

CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)</t><stat>UPSERT INTO Locations (location_id, location_name, latitude, longitude) VALUES (2, 'London', 51.5074, -0.1278)</stat><divider><t>CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)

CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)</t><stat>upsert into locations (location_id, location_name, latitude, longitude) values (2, 'london', 51.5074, -0.1278)</stat><divider><t>CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)

CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)</t><stat>UPSERT INTO Countries (country_code, country_name) VALUES ('US', 'United States')</stat><divider><t>CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)

CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)</t><stat>upsert into countries (country_code, country_name) values ('us', 'united states')</stat><divider><t>CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)

CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)</t><stat>UPSERT INTO Countries (country_code, country_name) VALUES ('US', 'United States')</stat><divider><t>CREATE TABLE Countries (country_code CHAR(2) PRIMARY KEY, country_name VARCHAR(50) NOT NULL)

CREATE TABLE Locations (location_id INT PRIMARY KEY, location_name VARCHAR(255) NOT NULL, latitude DECIMAL(10, 8) NOT NULL, longitude DECIMAL(11, 8) NOT NULL)</t><stat>upsert into countries (country_code, country_name) values ('us', 'united states')</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO location_data (location_id, latitude, longitude, city, country) VALUES (1, 40.7128, -74.0060, 'New York', 'USA') ON DUPLICATE KEY UPDATE latitude = 40.7128, longitude = -74.0060, city = 'New York', country = 'USA';</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into location_data (location_id, latitude, longitude, city, country) values (1, 40.7128, -74.0060, 'new york', 'usa') on duplicate key update latitude = 40.7128, longitude = -74.0060, city = 'new york', country = 'usa';</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO user_location (user_id, location_id) VALUES (1, 1) ON DUPLICATE KEY UPDATE location_id = 1;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into user_location (user_id, location_id) values (1, 1) on duplicate key update location_id = 1;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>UPSERT INTO trip_data (trip_id, user_id, start_location_id, end_location_id) VALUES (1, 1, 1, 2) ON DUPLICATE KEY UPDATE user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE region_data (region_id INT PRIMARY KEY, region_name VARCHAR(255), region_description TEXT)

CREATE TABLE trip_data (trip_id INT PRIMARY KEY, user_id INT, start_location_id INT, end_location_id INT, FOREIGN KEY (user_id) REFERENCES user_location(user_id), FOREIGN KEY (start_location_id) REFERENCES location_data(location_id), FOREIGN KEY (end_location_id) REFERENCES location_data(location_id))

CREATE TABLE user_location (user_id INT PRIMARY KEY, location_id INT, FOREIGN KEY (location_id) REFERENCES location_data(location_id))

CREATE TABLE location_data (location_id INT PRIMARY KEY, latitude DECIMAL, longitude DECIMAL, city VARCHAR(255), country VARCHAR(255))</t><stat>upsert into trip_data (trip_id, user_id, start_location_id, end_location_id) values (1, 1, 1, 2) on duplicate key update user_id = 1, start_location_id = 1, end_location_id = 2;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO locations (id, name, latitude, longitude) VALUES (1, 'New York', 40.7128, -74.0060) ON CONFLICT (id) DO UPDATE SET name = 'New York', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into locations (id, name, latitude, longitude) values (1, 'new york', 40.7128, -74.0060) on conflict (id) do update set name = 'new york', latitude = 40.7128, longitude = -74.0060;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO cities (id, name, country, population) VALUES (1, 'London', 'United Kingdom', 8908081) ON CONFLICT (id) DO UPDATE SET name = 'London', country = 'United Kingdom', population = 8908081;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into cities (id, name, country, population) values (1, 'london', 'united kingdom', 8908081) on conflict (id) do update set name = 'london', country = 'united kingdom', population = 8908081;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>UPSERT INTO countries (id, name, continent, population) VALUES (1, 'USA', 'North America', 331002651) ON CONFLICT (id) DO UPDATE SET name = 'USA', continent = 'North America', population = 331002651;</stat><divider><t>CREATE TABLE landmarks (id INT PRIMARY KEY, name VARCHAR(255), location_id INT);

CREATE TABLE regions (id INT PRIMARY KEY, name VARCHAR(255), country_id INT);

CREATE TABLE countries (id INT PRIMARY KEY, name VARCHAR(255), continent VARCHAR(255), population INT);

CREATE TABLE cities (id INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255), population INT);

CREATE TABLE locations (id INT PRIMARY KEY, name VARCHAR(255), latitude FLOAT, longitude FLOAT);</t><stat>upsert into countries (id, name, continent, population) values (1, 'usa', 'north america', 331002651) on conflict (id) do update set name = 'usa', continent = 'north america', population = 331002651;</stat>