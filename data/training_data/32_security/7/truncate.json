[
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE compliance_monitoring;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies, compliance_monitoring;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE compliance_monitoring;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE SecurityPolicies;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE ComplianceRules;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE PolicyAssignments;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE SecurityPolicies;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE ComplianceRules;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE PolicyAssignments;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE compliance_monitoring;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE configurations;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE security_policies;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE compliance_monitoring;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE configurations;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE SecurityPolicies;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE ComplianceMonitoring;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE ConfigurationSettings;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE SecurityPolicies;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE ComplianceMonitoring;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE ConfigurationSettings;"
]