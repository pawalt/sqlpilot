[
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nUPDATE security_policies SET policy_name = 'New Policy Name' WHERE id = '1c208c9b-3a4d-4b3f-b02f-edbaf7c31918';",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nUPDATE security_policies SET policy_type = 'New Policy Type' WHERE id = '2a7d6d3e-2833-4cd3-850d-986202a5a43c';",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nUPDATE security_policies SET policy_description = 'Updated policy description' WHERE id = '8730a42d-6c7e-4f85-a0ac-ae56b51e5e14';",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nUPDATE security_policies SET policy_description = 'Updated description' WHERE id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nUPDATE security_policies SET policy_type = 'New Type' WHERE policy_name = 'Test Policy';",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n  id UUID PRIMARY KEY,\n  policy_name VARCHAR(255) NOT NULL,\n  policy_description TEXT,\n  policy_type VARCHAR(50),\n  created_at TIMESTAMP NOT NULL\n)\n\n### STATEMENT\n\nUPDATE security_policies SET created_at = '2022-01-01 14:30:00' WHERE id = '98765432-1234-5678-abcd-1234567890ef';",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE security_policies SET policy_description = 'Updated description' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE compliance_monitoring SET monitoring_result = 'Pass' WHERE monitoring_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE security_policies SET policy_name = 'New Policy Name' WHERE policy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE security_policies SET policy_name = 'New Policy Name' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE compliance_monitoring SET monitoring_date = '2022-09-30' WHERE monitoring_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    monitoring_date DATE,\n    monitoring_result VARCHAR(10),\n    CONSTRAINT fk_policy FOREIGN KEY (policy_id) REFERENCES security_policies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE security_policies SET policy_description = 'Updated Policy Description', created_at = CURRENT_TIMESTAMP WHERE policy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE SecurityPolicies SET policy_name = 'New Policy Name' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE ComplianceRules SET rule_description = 'Updated Rule Description' WHERE rule_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE PolicyAssignments SET user_id = 3 WHERE assignment_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE SecurityPolicies SET policy_description = 'Updated policy description' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE ComplianceRules SET rule_name = 'New Rule Name', rule_description = 'Updated rule description' WHERE rule_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE ComplianceRules (\n    rule_id INT PRIMARY KEY,\n    rule_name VARCHAR(255),\n    rule_description TEXT,\n    created_at TIMESTAMP\n);\n\nCREATE TABLE PolicyAssignments (\n    assignment_id INT PRIMARY KEY,\n    policy_id INT,\n    user_id INT,\n    assigned_at TIMESTAMP,\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n);\n\n### STATEMENT\n\nUPDATE PolicyAssignments SET user_id = 5, assigned_at = CURRENT_TIMESTAMP WHERE policy_id = 3 AND user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nUPDATE security_policies SET policy_description = 'Updated description' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nUPDATE compliance_monitoring SET pass_fail = TRUE WHERE monitoring_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nUPDATE configurations SET config_value = 'New value' WHERE config_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nUPDATE security_policies SET policy_name = 'New Policy Name' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nUPDATE compliance_monitoring SET pass_fail = TRUE WHERE monitoring_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE security_policies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(50),\n    policy_description TEXT,\n    policy_type VARCHAR(20)\n);\n\nCREATE TABLE compliance_monitoring (\n    monitoring_id INT PRIMARY KEY,\n    policy_id INT,\n    date_checked DATE,\n    pass_fail BOOLEAN,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE configurations (\n    config_id INT PRIMARY KEY,\n    policy_id INT,\n    config_name VARCHAR(50),\n    config_value TEXT,\n    CONSTRAINT fk_policy\n    FOREIGN KEY (policy_id)\n    REFERENCES security_policies (policy_id)\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(50),\n    role VARCHAR(20)\n);\n\n### STATEMENT\n\nUPDATE configurations SET config_value = 'New Config Value' WHERE config_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityPolicies SET policy_name = 'New Policy Name' WHERE policy_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE ComplianceMonitoring SET monitor_type = 'monthly' WHERE monitor_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE Users SET last_login = '2021-10-20 15:30:00' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityPolicies SET policy_description='New description' WHERE policy_id=1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE ComplianceMonitoring SET monitor_status='fail' WHERE policy_id=2 AND monitor_type='weekly';",
  "### TABLEDATA\n\nCREATE TABLE SecurityPolicies (\n    policy_id INT PRIMARY KEY,\n    policy_name VARCHAR(255),\n    policy_description TEXT,\n    policy_type ENUM('access', 'data', 'network'),\n    policy_status ENUM('enabled', 'disabled'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE ComplianceMonitoring (\n    monitor_id INT PRIMARY KEY,\n    policy_id INT,\n    monitor_type ENUM('daily', 'weekly', 'monthly'),\n    monitor_date DATE,\n    monitor_status ENUM('pass', 'fail'),\n    FOREIGN KEY (policy_id) REFERENCES SecurityPolicies(policy_id)\n)\n\nCREATE TABLE ConfigurationSettings (\n    settings_id INT PRIMARY KEY,\n    setting_name VARCHAR(255),\n    setting_value TEXT,\n    setting_type ENUM('boolean', 'numeric', 'string'),\n    created_at TIMESTAMP\n)\n\nCREATE TABLE AuditingLogs (\n    log_id INT PRIMARY KEY,\n    log_type ENUM('audit', 'error', 'warning'),\n    log_message TEXT,\n    log_timestamp TIMESTAMP\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(255),\n    role ENUM('admin', 'user'),\n    last_login TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE ConfigurationSettings SET setting_value='true' WHERE settings_id=3;"
]