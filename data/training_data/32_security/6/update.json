[
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityThreatData SET threat_description = 'Malware found in system' WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityThreatData SET threat_severity = 3 WHERE threat_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityThreatData SET threat_date = '2022-10-15 14:00:00' WHERE threat_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityThreatData SET threat_severity = 5 WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityThreatData SET threat_description = 'New Description' WHERE threat_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE SecurityThreatData SET threat_severity = 3, threat_date = '2022-09-20 10:00:00' WHERE threat_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_level = 3 WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPDATE mitigation_strategies SET strategy_description = 'Improved strategy' WHERE strategy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_description = 'New description' WHERE threat_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_description = 'New Description' WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPDATE mitigation_strategies SET strategy_name = 'Updated Strategy' WHERE strategy_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_level = 5 WHERE threat_name = 'Cyber Attack';",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nUPDATE threat_data SET threat_level = 3 WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nUPDATE affected_systems SET system_type = 'Server' WHERE system_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nUPDATE defense_measures SET measure_description = 'Enhanced firewall protection' WHERE measure_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nUPDATE threat_data SET threat_name = 'New Threat 1', threat_level = 5 WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nUPDATE affected_systems SET system_name = 'System 2', system_type = 'Desktop' WHERE system_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nUPDATE defense_measures SET measure_name = 'New Measure', measure_description = 'Updated Description' WHERE measure_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_description = 'Updated threat description' WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nUPDATE threat_targets SET target_location = 'New Target Location' WHERE target_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nUPDATE security_events SET event_timestamp = NOW() WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_description = 'New Threat Description' WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nUPDATE threat_targets SET target_location = 'New Target Location' WHERE target_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nUPDATE security_events SET event_timestamp = CURRENT_TIMESTAMP WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_level = 3 WHERE threat_name = 'Ransomware'",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPDATE threat_actors SET actor_type = 'External' WHERE actor_name = 'Anonymous Hackers'",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPDATE vulnerability SET vulnerability_description = 'Critical security flaw' WHERE vulnerability_name = 'SQL Injection'",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPDATE threats SET threat_level = 5 WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPDATE threat_actors SET actor_type = 'External' WHERE actor_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPDATE incidents SET incident_description = 'Updated incident details' WHERE incident_id = 3;"
]