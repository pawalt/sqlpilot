[
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (1, 'Malware', 'A malicious software threat', 8, '2022-01-15')",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (2, 'Phishing', 'An email scam threat', 6, '2022-01-20')",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (3, 'Ransomware', 'A data encryption threat', 9, '2022-01-25')",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (4, 'DDoS', 'Distributed Denial of Service threat', 7, '2022-01-30')",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (5, 'Data Breach', 'Unauthorized access to sensitive data', 8, '2022-02-05')",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (6, 'Social Engineering', 'Manipulation techniques threat', 7, '2022-02-10')",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT...",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (1, 'Malware', 'Malicious software that can harm your system', 8, '2022-10-15 09:30:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (2, 'Phishing', 'Fraudulent attempt to obtain sensitive information', 7, '2022-10-16 11:45:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (3, 'Ransomware', 'Software that encrypts files and demands ransom', 9, '2022-10-17 14:00:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (4, 'Social Engineering', 'Manipulating individuals to disclose confidential information', 6, '2022-10-18 16:20:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (5, 'Data Breach', 'Unauthorized access to sensitive data', 8, '2022-10-19 18:40:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (6, 'Botnet', 'Network of infected devices controlled by hackers', 7, '2022-10-20 21:00:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (7, 'Zero-Day Exploit', 'Security vulnerability unknown to software vendor', 9, '2022-10-21 23:30:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (8, 'SQL Injection', 'Injection of SQL code to manipulate the database', 8, '2022-10-22 02:10:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (9, 'Man-In-The-Middle Attack', 'Interception of communication between two parties', 6, '2022-10-23 04:30:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (10, 'Pharming', 'Redirecting website traffic to a fraudulent site', 7, '2022-10-24 06:50:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (11, 'DDoS Attack', 'Flooding a server with excessive traffic to disrupt service', 9, '2022-10-25 09:10:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (12, 'Cross-Site Scripting', 'Injecting malicious scripts into web pages viewed by users', 8, '2022-10-26 11:30:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (13, 'Cryptojacking', 'Unauthorized use of a device to mine cryptocurrency', 7, '2022-10-27 13:50:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (14, 'Keylogger', 'Recording keystrokes to steal sensitive information', 8, '2022-10-28 16:10:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (15, 'Exploit Kit', 'Collection of exploits used to compromise a system', 9, '2022-10-29 18:30:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (16, 'Spyware', 'Software that collects user information without consent', 6, '2022-10-30 20:50:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (17, 'Trojan Horse', 'Malicious software disguised as legitimate software', 7, '2022-10-31 23:10:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (18, 'Worm', 'Self-replicating malware that spreads across networks', 9, '2022-11-01 01:30:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (19, 'Rootkit', 'Stealthy software that provides unauthorized access', 8, '2022-11-02 03:50:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO SecurityThreatData (threat_id, threat_type, threat_description, threat_severity, threat_date) VALUES (20, 'Adware', 'Software that displays advertisements without consent', 7, '2022-11-03 06:10:00') ON CONFLICT (threat_id) DO UPDATE SET threat_type = excluded.threat_type, threat_description = excluded.threat_description, threat_severity = excluded.threat_severity, threat_date = excluded.threat_date;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (1, 'Malware', 'Malware is a type of software that is designed to damage or disrupt computer systems.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (1, 'Firewall', 'Firewall is a network security system that monitors and controls incoming and outgoing network traffic.', 1);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (2, 'Phishing', 'Phishing is a cyber attack method that involves tricking users into revealing sensitive information.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (2, 'Two-factor Authentication', 'Two-factor authentication adds an extra layer of security by requiring users to provide two forms of identification.', 2);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (3, 'SQL Injection', 'SQL injection is a code injection technique used to attack data-driven applications by inserting malicious SQL statements.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (3, 'Input Validation', 'Input validation is a technique used to ensure that user input is clean and safe before processing.', 3);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (4, 'DDoS Attack', 'DDoS attack is a malicious attempt to disrupt normal traffic of a targeted server, service or network by overwhelming the target or its surrounding infrastructure with a flood of Internet traffic.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (4, 'Traffic Filtering', 'Traffic filtering is a method used to block or allow network traffic based on specified criteria.', 4);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (5, 'Ransomware', 'Ransomware is a type of malware that encrypts a user's files and demands payment in exchange for decrypting them.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (5, 'Data Backup', 'Regular data backups can help protect against ransomware attacks by allowing users to restore their data without paying the ransom.', 5);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (6, 'Social Engineering', 'Social engineering is the psychological manipulation of people into performing actions or divulging confidential information.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (6, 'Security Awareness Training', 'Security awareness training can help employees recognize and avoid social engineering attacks.', 6);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (7, 'Man-in-the-Middle Attack', 'A man-in-the-middle attack is a form of eavesdropping where communication between two parties is intercepted and possibly altered by a hacker.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (7, 'Encryption', 'Encryption is the process of encoding information in such a way that only authorized parties can access it.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (8, 'Zero-Day Exploit', 'A zero-day exploit is a cyber attack that targets a software vulnerability that is unknown to the software developer or vendor.', 10);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (8, 'Patch Management', 'Patch management involves updating software to fix vulnerabilities and protect against known exploits.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (9, 'Insider Threat', 'An insider threat is a security threat that originates from within an organization, such as employees, contractors, or business partners.', 6);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (9, 'User Activity Monitoring', 'User activity monitoring can help detect and prevent insider threats by monitoring user behavior and identifying suspicious activities.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (10, 'Brute Force Attack', 'A brute force attack is a trial-and-error method used by attackers to crack passwords or encryption by systematically checking all possible combinations.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (10, 'Strong Password Policies', 'Strong password policies can defend against brute force attacks by requiring users to create complex and secure passwords.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (11, 'Data Breach', 'A data breach is an incident where sensitive, confidential, or protected information is accessed or disclosed without authorization.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (11, 'Data Encryption', 'Data encryption can help protect sensitive data in the event of a data breach by ensuring that unauthorized users cannot access the encrypted information.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (12, 'DNS Spoofing', 'DNS spoofing is a type of cyber attack where the attacker forges DNS responses to redirect traffic to malicious websites.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (12, 'DNSSEC', 'DNS Security Extensions (DNSSEC) help protect against DNS spoofing attacks by digitally signing DNS records to ensure their authenticity.', 6);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (13, 'Eavesdropping', 'Eavesdropping is the act of secretly listening to the private conversation of others without their consent.', 6);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (13, 'End-to-End Encryption', 'End-to-end encryption ensures that only the communicating users can read the messages by encrypting the data in transit.', 5);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (14, 'Credential Stuffing', 'Credential stuffing is a cyber attack where attackers use stolen login credentials to gain unauthorized access to user accounts.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (14, 'Multi-Factor Authentication', 'Multi-factor authentication adds additional verification steps to prevent unauthorized access even if login credentials are compromised.', 4);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (15, 'IoT Vulnerabilities', 'IoT vulnerabilities refer to security weaknesses in Internet of Things devices that can be exploited by attackers to gain unauthorized access or control.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (15, 'Firmware Updates', 'Regular firmware updates can help mitigate IoT vulnerabilities by fixing security flaws and improving device security.', 3);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (16, 'Cryptojacking', 'Cryptojacking is a form of cyber attack where attackers use a victim's computing resources to mine cryptocurrency without their knowledge or consent.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (16, 'Anti-Malware Software', 'Anti-malware software can help detect and remove cryptojacking malware from devices to prevent unauthorized cryptocurrency mining.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (17, 'Social Media Scams', 'Social media scams are deceptive schemes on social networking sites that aim to trick users into revealing personal information or sending money to scammers.', 6);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (17, 'Privacy Settings Review', 'Regularly reviewing and updating privacy settings on social media accounts can help prevent social media scams by limiting personal information exposure to strangers.', 4);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (18, 'Pharming', 'Pharming is a cyber attack where attackers redirect users to fake websites by manipulating the DNS server or using malware.', 9);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (18, 'Web Browser Security', 'Web browser security features such as website authentication and secure connection indicators can help users detect and avoid phishing websites.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (19, 'Denial of Service', 'Denial of Service (DoS) attack is a cyber attack where attackers disrupt services by overwhelming the target server with a flood of traffic.', 8);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (19, 'DDoS Protection Services', 'DDoS protection services can help mitigate denial of service attacks by filtering and blocking malicious traffic before it reaches the target server.', 5);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (20, 'Data Loss', 'Data loss is the result of data being corrupted, deleted, or made inaccessible due to accidental deletion, hardware failure, or cyber attacks.', 7);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (20, 'Data Backup and Recovery', 'Data backup and recovery solutions can help organizations recover lost or corrupted data in the event of data loss incidents.', 6);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (1, 'Malware', 'Malicious software designed to harm a computer system', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Malware', threat_description = 'Updated description', threat_level = 9;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (2, 'Phishing', 'Social engineering attack to steal sensitive information', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Phishing', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (3, 'SQL Injection', 'Injection of malicious SQL code in a database query', 9) ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (4, 'DDoS Attack', 'Distributed Denial of Service attack to overwhelm a server', 9) ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_description, threat_level) VALUES (5, 'Ransomware', 'Malware that encrypts files and demands ransom', 10) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Ransomware', threat_description = 'Updated description';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (1, 'Firewall', 'Network security device to monitor and control incoming and outgoing traffic', 1) ON CONFLICT (strategy_id) DO UPDATE SET strategy_name = 'Firewall', strategy_description = 'Updated description', threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (2, 'Encryption', 'Data protection method using algorithms to encode data', 2) ON CONFLICT (strategy_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (3, 'Intrusion Detection System', 'Security tool to detect unauthorized access or attacks', 3) ON CONFLICT (strategy_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (4, 'Backup and Recovery', 'Regularly backing up data to prevent data loss', 4) ON CONFLICT (strategy_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nUPSERT INTO mitigation_strategies (strategy_id, strategy_name, strategy_description, threat_id) VALUES (5, 'Access Control', 'Restricting access to authorized users only', 5) ON CONFLICT (strategy_id) DO UPDATE SET strategy_name = 'Access Control', strategy_description = 'Updated description', threat_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (1, 'Malware', 'A type of malicious software', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Malware', threat_description = 'A type of malicious software', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (2, 'Phishing', 'A type of social engineering attack', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Phishing', threat_description = 'A type of social engineering attack', threat_level = 7;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (3, 'DDoS', 'Distributed Denial of Service attack', 9) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'DDoS', threat_description = 'Distributed Denial of Service attack', threat_level = 9;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (4, 'Ransomware', 'Blocks access to a system until a ransom is paid', 9) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Ransomware', threat_description = 'Blocks access to a system until a ransom is paid', threat_level = 9;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (5, 'Spyware', 'Collects information without user\u2019s knowledge', 6) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Spyware', threat_description = 'Collects information without user\u2019s knowledge', threat_level = 6;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (6, 'SQL Injection', 'Injects malicious SQL code to manipulate database', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'SQL Injection', threat_description = 'Injects malicious SQL code to manipulate database', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (7, 'Zero-day exploit', 'Targets vulnerabilities unknown to software developers', 9) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Zero-day exploit', threat_description = 'Targets vulnerabilities unknown to software developers', threat_level = 9;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (8, 'Botnet', 'Network of compromised devices used for malicious activities', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Botnet', threat_description = 'Network of compromised devices used for malicious activities', threat_level = 7;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (9, 'Man-in-the-middle attack', 'Intercepts and alters communication between two parties', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Man-in-the-middle attack', threat_description = 'Intercepts and alters communication between two parties', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (10, 'Social engineering', 'Exploits human psychology to gain access to information', 6) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Social engineering', threat_description = 'Exploits human psychology to gain access to information', threat_level = 6;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (11, 'Cross-site scripting', 'Injects malicious scripts into a website', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Cross-site scripting', threat_description = 'Injects malicious scripts into a website', threat_level = 7;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (12, 'Brute force attack', 'Repeated login attempts to guess a password', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Brute force attack', threat_description = 'Repeated login attempts to guess a password', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (13, 'Cryptojacking', 'Unauthorized use of someone else\u2019s computer to mine cryptocurrency', 6) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Cryptojacking', threat_description = 'Unauthorized use of someone else\u2019s computer to mine cryptocurrency', threat_level = 6;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (14, 'Keylogger', 'Records keystrokes to capture sensitive information', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Keylogger', threat_description = 'Records keystrokes to capture sensitive information', threat_level = 7;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (15, 'Worm', 'Self-replicating malware that spreads across networks', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Worm', threat_description = 'Self-replicating malware that spreads across networks', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (16, 'Trojan horse', 'Disguised as harmless software to deceive users', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Trojan horse', threat_description = 'Disguised as harmless software to deceive users', threat_level = 7;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (17, 'Logic bomb', 'Code that executes when specific conditions are met', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Logic bomb', threat_description = 'Code that executes when specific conditions are met', threat_level = 8;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (18, 'Rootkit', 'Gives unauthorized access to a computer', 9) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Rootkit', threat_description = 'Gives unauthorized access to a computer', threat_level = 9;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (19, 'Adware', 'Displays unwanted advertisements to users', 5) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Adware', threat_description = 'Displays unwanted advertisements to users', threat_level = 5;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data (threat_id, threat_name, threat_description, threat_level) VALUES (20, 'Malvertising', 'Serves malicious advertisements to infect devices', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Malvertising', threat_description = 'Serves malicious advertisements to infect devices', threat_level = 7;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data(threat_id, threat_name, threat_description, threat_level) VALUES(1, 'Malware', 'Malicious software designed to harm a computer system', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_level = EXCLUDED.threat_level + 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data(threat_id, threat_name, threat_description, threat_level) VALUES(2, 'Phishing', 'Social engineering attack to obtain sensitive information', 6) ON CONFLICT (threat_id) DO UPDATE SET threat_level = EXCLUDED.threat_level + 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data(threat_id, threat_name, threat_description, threat_level) VALUES(3, 'DDoS', 'Distributed Denial of Service attack to disrupt services', 9) ON CONFLICT (threat_id) DO UPDATE SET threat_level = EXCLUDED.threat_level + 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data(threat_id, threat_name, threat_description, threat_level) VALUES(4, 'Ransomware', 'Software that encrypts user data and demands ransom for decryption', 7) ON CONFLICT (threat_id) DO UPDATE SET threat_level = EXCLUDED.threat_level + 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_data(threat_id, threat_name, threat_description, threat_level) VALUES(5, 'SQL Injection', 'Injection of SQL code to manipulate database', 8) ON CONFLICT (threat_id) DO UPDATE SET threat_level = EXCLUDED.threat_level + 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO affected_systems(system_id, system_name, system_type, threat_id) VALUES(1, 'Server-1', 'Web Server', 1) ON CONFLICT (system_id) DO UPDATE SET system_type = EXCLUDED.system_type;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO affected_systems(system_id, system_name, system_type, threat_id) VALUES(2, 'Workstation-1', 'Desktop PC', 2) ON CONFLICT (system_id) DO UPDATE SET system_type = EXCLUDED.system_type;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO affected_systems(system_id, system_name, system_type, threat_id) VALUES(3, 'Router-1', 'Network Router', 3) ON CONFLICT (system_id) DO UPDATE SET system_type = EXCLUDED.system_type;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO affected_systems(system_id, system_name, system_type, threat_id) VALUES(4, 'Server-2', 'Application Server', 4) ON CONFLICT (system_id) DO UPDATE SET system_type = EXCLUDED.system_type;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO affected_systems(system_id, system_name, system_type, threat_id) VALUES(5, 'Workstation-2', 'Laptop', 5) ON CONFLICT (system_id) DO UPDATE SET system_type = EXCLUDED.system_type;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO defense_measures(measure_id, measure_name, measure_description, threat_id, system_id) VALUES(1, 'Firewall Setup', 'Configure firewall to block malicious traffic', 1, 1) ON CONFLICT (measure_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO defense_measures(measure_id, measure_name, measure_description, threat_id, system_id) VALUES(2, 'Anti-phishing Training', 'Educate employees to identify phishing emails', 2, 2) ON CONFLICT (measure_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO defense_measures(measure_id, measure_name, measure_description, threat_id, system_id) VALUES(3, 'DDoS Mitigation Service', 'Utilize DDoS protection services to mitigate attacks', 3, 3) ON CONFLICT (measure_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO defense_measures(measure_id, measure_name, measure_description, threat_id, system_id) VALUES(4, 'Ransomware Backup Strategy', 'Regularly backup data to prevent data loss from ransomware', 4, 4) ON CONFLICT (measure_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nINSERT INTO defense_measures(measure_id, measure_name, measure_description, threat_id, system_id) VALUES(5, 'SQL Injection Prevention', 'Implement input validation to prevent SQL injection vulnerabilities', 5, 5) ON CONFLICT (measure_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (1, 'Malware', 'Malicious software designed to damage or gain unauthorized access to a computer system') ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Malware', threat_description = 'Updated description for Malware';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (2, 'Phishing', 'Fraudulent attempt to obtain sensitive information by disguising as a trustworthy entity') ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Phishing', threat_description = 'Updated description for Phishing';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (3, 'DDoS', 'Distributed Denial of Service attack to disrupt normal traffic of a target server') ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'DDoS', threat_description = 'Updated description for DDoS';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (4, 'Ransomware', 'Malware designed to block access to a system until a sum of money is paid') ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Ransomware', threat_description = 'Updated description for Ransomware';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (5, 'Social Engineering', 'Psychological manipulation to trick users into revealing confidential information') ON CONFLICT (threat_id) DO UPDATE SET threat_name = 'Social Engineering', threat_description = 'Updated description for Social Engineering';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threat_targets (target_id, target_name, target_location) VALUES (1, 'Database Server', 'Datacenter A') ON CONFLICT (target_id) DO UPDATE SET target_name = 'Database Server', target_location = 'Datacenter A';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threat_targets (target_id, target_name, target_location) VALUES (2, 'Web Application', 'Cloud Server B') ON CONFLICT (target_id) DO UPDATE SET target_name = 'Web Application', target_location = 'Cloud Server B';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threat_targets (target_id, target_name, target_location) VALUES (3, 'Email Server', 'On-Premise Server C') ON CONFLICT (target_id) DO UPDATE SET target_name = 'Email Server', target_location = 'On-Premise Server C';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threat_targets (target_id, target_name, target_location) VALUES (4, 'Network Infrastructure', 'Headquarters Datacenter') ON CONFLICT (target_id) DO UPDATE SET target_name = 'Network Infrastructure', target_location = 'Headquarters Datacenter';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threat_targets (target_id, target_name, target_location) VALUES (5, 'Mobile App Server', 'Cloud Server D') ON CONFLICT (target_id) DO UPDATE SET target_name = 'Mobile App Server', target_location = 'Cloud Server D';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_events (event_id, event_type, event_timestamp, threat_id, target_id) VALUES (1, 'Detection', '2022-07-15 10:30:00', 1, 1) ON CONFLICT (event_id) DO UPDATE SET event_type = 'Detection', event_timestamp = '2022-07-15 10:30:00', threat_id = 1, target_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_events (event_id, event_type, event_timestamp, threat_id, target_id) VALUES (2, 'Prevention', '2022-07-16 14:45:00', 2, 2) ON CONFLICT (event_id) DO UPDATE SET event_type = 'Prevention', event_timestamp = '2022-07-16 14:45:00', threat_id = 2, target_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_events (event_id, event_type, event_timestamp, threat_id, target_id) VALUES (3, 'Response', '2022-07-17 09:20:00', 3, 3) ON CONFLICT (event_id) DO UPDATE SET event_type = 'Response', event_timestamp = '2022-07-17 09:20:00', threat_id = 3, target_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_events (event_id, event_type, event_timestamp, threat_id, target_id) VALUES (4, 'Investigation', '2022-07-18 11:00:00', 4, 4) ON CONFLICT (event_id) DO UPDATE SET event_type = 'Investigation', event_timestamp = '2022-07-18 11:00:00', threat_id = 4, target_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_events (event_id, event_type, event_timestamp, threat_id, target_id) VALUES (5, 'Mitigation', '2022-07-19 16:30:00', 5, 5) ON CONFLICT (event_id) DO UPDATE SET event_type = 'Mitigation', event_timestamp = '2022-07-19 16:30:00', threat_id = 5, target_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_actions (action_id, action_type, action_description, event_id) VALUES (1, 'Quarantine', 'Isolate affected system from the network', 1) ON CONFLICT (action_id) DO UPDATE SET action_type = 'Quarantine', action_description = 'Isolate affected system from the network', event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_actions (action_id, action_type, action_description, event_id) VALUES (2, 'Update Firewall Rules', 'Enhance firewall settings to block malicious traffic', 2) ON CONFLICT (action_id) DO UPDATE SET action_type = 'Update Firewall Rules', action_description = 'Enhance firewall settings to block malicious traffic', event_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_actions (action_id, action_type, action_description, event_id) VALUES (3, 'Data Recovery', 'Restore data from backup to recover from attack', 3) ON CONFLICT (action_id) DO UPDATE SET action_type = 'Data Recovery', action_description = 'Restore data from backup to recover from attack', event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_actions (action_id, action_type, action_description, event_id) VALUES (4, 'Forensic Analysis', 'Investigate and analyze the attack for further insights', 4) ON CONFLICT (action_id) DO UPDATE SET action_type = 'Forensic Analysis', action_description = 'Investigate and analyze the attack for further insights', event_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO security_actions (action_id, action_type, action_description, event_id) VALUES (5, 'Patch Application', 'Apply necessary patches to address vulnerabilities', 5) ON CONFLICT (action_id) DO UPDATE SET action_type = 'Patch Application', action_description = 'Apply necessary patches to address vulnerabilities', event_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (1, 'Data Breach', 'Sensitive data exposed to unauthorized parties') ON CONFLICT (threat_id) DO UPDATE SET threat_name='Data Leak';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (2, 'Ransomware Attack', 'Malware encrypts data and demands ransom') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (3, 'DDoS Attack', 'Overloads server with excessive traffic') ON CONFLICT (threat_id) DO UPDATE SET threat_description='Overloads server with excessive traffic, causing downtime';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (4, 'Phishing Scam', 'Deceptive emails to steal sensitive information') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (5, 'SQL Injection', 'Manipulates SQL queries to access database') ON CONFLICT (threat_id) DO UPDATE SET threat_name='SQL Injection Attack';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (6, 'Malware Infection', 'Malicious software infects systems') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (7, 'Insider Threat', 'Internal employees misuse information') ON CONFLICT (threat_id) DO UPDATE SET threat_name='Insider Security Breach';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (8, 'Social Engineering', 'Manipulates individuals to divulge sensitive information') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (9, 'Zero-Day Exploit', 'Takes advantage of unknown vulnerabilities') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (10, 'Brute Force Attack', 'Repeatedly tries credentials to gain access') ON CONFLICT (threat_id) DO UPDATE SET threat_description='Repeatedly tries credentials to gain unauthorized access';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (11, 'Man-in-the-Middle Attack', 'Intercepts communication between two parties') ON CONFLICT (threat_id) DO UPDATE SET threat_description='Intercepts communication and steals sensitive data';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (12, 'Cryptojacking', 'Illegally uses computing resources to mine cryptocurrency') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (13, 'Cross-Site Scripting (XSS)', 'Injects malicious scripts into web pages') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (14, 'Data Manipulation', 'Alters data to disrupt or deceive') ON CONFLICT (threat_id) DO UPDATE SET threat_name='Data Manipulation Attack';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (15, 'IoT Security Flaw', 'Vulnerabilities in Internet of Things devices') ON CONFLICT (threat_id) DO UPDATE SET threat_description='Vulnerabilities in IoT devices pose security risks';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (16, 'Credential Stuffing', 'Uses stolen credentials to gain unauthorized access') ON CONFLICT (threat_id) DO UPDATE SET threat_description='Uses stolen credentials to gain unauthorized access to accounts';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (17, 'Keylogger Malware', 'Records keystrokes to capture sensitive information') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (18, 'Fileless Malware', 'Runs in memory without leaving traces on disk') ON CONFLICT (threat_id) DO UPDATE SET threat_name='Memory-Resident Malware';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (19, 'Supply Chain Attack', 'Compromises products or services in the supply chain') ON CONFLICT (threat_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nINSERT INTO threats (threat_id, threat_name, threat_description) VALUES (20, 'AI-Powered Attacks', 'Utilizes artificial intelligence for malicious purposes') ON CONFLICT (threat_id) DO UPDATE SET threat_description='Utilizes AI for malicious activities';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO threats(threat_id, threat_name, threat_level, threat_description) VALUES (1, 'Ransomware', 9, 'Malicious software that encrypts files and demands ransom.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO threats(threat_id, threat_name, threat_level, threat_description) VALUES (2, 'Phishing', 7, 'Attempt to acquire sensitive information by pretending to be another entity.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_actors(actor_id, actor_name, actor_type, actor_description) VALUES (1, 'Hacktivist Group', 'Organized Group', 'Campaigns for political or social causes through hacking.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO threat_actors(actor_id, actor_name, actor_type, actor_description) VALUES (2, 'Spam Botnet', 'Automated Script', 'Sends large volumes of unsolicited emails for various purposes.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO vulnerability(vulnerability_id, vulnerability_name, vulnerability_description, threat_id) VALUES (1, 'SQL Injection', 'Allows attackers to interfere with the queries to a database.', 2);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO vulnerability(vulnerability_id, vulnerability_name, vulnerability_description, threat_id) VALUES (2, 'Cross-Site Scripting', 'Injects malicious scripts into web pages viewed by other users.', 2);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO attack_methods(method_id, method_name, method_description) VALUES (1, 'Social Engineering', 'Manipulating people into performing actions or divulging confidential information.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO attack_methods(method_id, method_name, method_description) VALUES (2, 'Denial of Service (DoS)', 'Overloads a system to disrupt service availability.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO incidents(incident_id, incident_date, incident_description, threat_id, actor_id, vulnerability_id, method_id) VALUES (1, '2022-01-15', 'Data breach due to phishing attack.', 2, 1, 1, 2);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nINSERT INTO incidents(incident_id, incident_date, incident_description, threat_id, actor_id, vulnerability_id, method_id) VALUES (2, '2022-02-20', 'Website defacement using SQL injection.', 1, 2, 1, 1);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threats (threat_id, threat_name, threat_level, threat_description) VALUES (1, 'Malware', 3, 'A malicious software that can harm computers.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPSERT INTO threat_actors (actor_id, actor_name, actor_type, actor_description) VALUES (1, 'Hacker1', 'Black Hat', 'A hacker with malicious intentions.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPSERT INTO vulnerability (vulnerability_id, vulnerability_name, vulnerability_description, threat_id) VALUES (1, 'SQL Injection', 'An attack in which malicious SQL statements are inserted into an entry field.', 1);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPSERT INTO attack_methods (method_id, method_name, method_description) VALUES (1, 'Phishing', 'A method to deceive individuals into revealing sensitive information.');",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nUPSERT INTO incidents (incident_id, incident_date, incident_description, threat_id, actor_id, vulnerability_id, method_id) VALUES (1, '2022-10-05', 'Cyber attack on company servers.', 1, 1, 1, 1);"
]