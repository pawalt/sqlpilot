[
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_type, threat_severity FROM SecurityThreatData WHERE threat_severity > 4;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(threat_severity) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(threat_severity) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(threat_severity) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT threat_type FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_description LIKE '%malware%';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_id, COUNT(*) FROM SecurityThreatData GROUP BY threat_id;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData ORDER BY threat_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_severity BETWEEN 2 AND 4;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(threat_severity) AS average_severity FROM SecurityThreatData GROUP BY threat_type;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_type = 'DDoS';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_date, DATE_FORMAT(threat_date, '%Y-%m-%d') AS formatted_date FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DAY(threat_date) AS day_of_month, COUNT(*) FROM SecurityThreatData GROUP BY day_of_month;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT YEAR(threat_date) AS year, MONTH(threat_date) AS month, COUNT(*) FROM SecurityThreatData GROUP BY year, month;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE MONTH(threat_date) = 10;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT YEAR(threat_date) AS year FROM SecurityThreatData ORDER BY year;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE YEAR(threat_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_severity > 5;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_id, threat_type, threat_severity FROM SecurityThreatData WHERE threat_severity >= 7;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_id, threat_type, threat_description FROM SecurityThreatData WHERE threat_type = 'Malware';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM SecurityThreatData WHERE threat_severity = 10;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(threat_severity) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(threat_severity) FROM SecurityThreatData WHERE threat_type = 'Ransomware';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(threat_severity) FROM SecurityThreatData WHERE threat_type = 'Phishing';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT threat_type FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_id, threat_description FROM SecurityThreatData WHERE threat_severity > 8 ORDER BY threat_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(threat_severity) AS avg_severity, COUNT(threat_id) AS threat_count FROM SecurityThreatData GROUP BY threat_type;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_date >= '2022-01-01' AND threat_date < '2023-01-01' ORDER BY threat_severity DESC;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_type, COUNT(*), AVG(threat_severity) FROM SecurityThreatData GROUP BY threat_type HAVING AVG(threat_severity) > 5;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE threat_description LIKE '%vulnerability%';",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_id, threat_type, DATE_FORMAT(threat_date, '%Y-%m-%d') AS threat_date_formatted FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT threat_type) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(threat_severity) FROM SecurityThreatData;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM SecurityThreatData WHERE YEAR(threat_date) = 2021;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_type, COUNT(*) AS total_count FROM SecurityThreatData GROUP BY threat_type ORDER BY total_count DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE SecurityThreatData (\n  threat_id INT PRIMARY KEY,\n  threat_type VARCHAR(50),\n  threat_description TEXT,\n  threat_severity INT,\n  threat_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT threat_id, threat_type, threat_description FROM SecurityThreatData WHERE threat_description IS NOT NULL ORDER BY RAND() LIMIT 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_description FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_level FROM threats WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT * FROM mitigation_strategies;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, strategy_description FROM mitigation_strategies;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, threat_name FROM mitigation_strategies JOIN threats ON mitigation_strategies.threat_id = threats.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT strategy_name, threat_name FROM mitigation_strategies LEFT JOIN threats ON mitigation_strategies.threat_id = threats.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, strategy_name FROM threats JOIN mitigation_strategies ON threats.threat_id = mitigation_strategies.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_threats FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT AVG(threat_level) AS avg_threat_level FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT MAX(threat_level) AS max_threat_level FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT MIN(threat_level) AS min_threat_level FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, strategy_name FROM threats, mitigation_strategies WHERE threats.threat_id = mitigation_strategies.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name FROM threats WHERE threat_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name FROM threats WHERE threat_level BETWEEN 3 AND 7;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name FROM threats WHERE threat_description LIKE '%vulnerability%';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name FROM threats WHERE threat_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, COUNT(*) AS num_strategies FROM threats JOIN mitigation_strategies ON threats.threat_id = mitigation_strategies.threat_id GROUP BY threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, AVG(strategy_id) AS avg_strategy_id FROM threats JOIN mitigation_strategies ON threats.threat_id = mitigation_strategies.threat_id GROUP BY threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, strategy_name FROM threats JOIN mitigation_strategies ON threats.threat_id = mitigation_strategies.threat_id ORDER BY threat_name DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_level FROM threats WHERE threat_level > 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, strategy_name FROM threats t JOIN mitigation_strategies m ON t.threat_id = m.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, m.strategy_name FROM threats t JOIN mitigation_strategies m ON t.threat_id = m.threat_id WHERE t.threat_level > 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_id, t.threat_name, m.strategy_name FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_id, t.threat_name, m.strategy_name FROM threats t RIGHT JOIN mitigation_strategies m ON t.threat_id = m.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, m.strategy_name FROM threats t INNER JOIN mitigation_strategies m ON t.threat_id = m.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, m.strategy_name FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id WHERE m.strategy_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, m.strategy_name FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id ORDER BY t.threat_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, m.strategy_name FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id ORDER BY m.strategy_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, m.strategy_name FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id WHERE t.threat_level < 4 ORDER BY t.threat_name ASC, m.strategy_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_threats FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT AVG(threat_level) AS avg_threat_level FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, COUNT(m.strategy_id) AS num_strategies FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id GROUP BY t.threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, AVG(m.strategy_id) AS avg_strategy_id FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id GROUP BY t.threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, MAX(m.strategy_id) AS max_strategy_id FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id GROUP BY t.threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, MIN(m.strategy_id) AS min_strategy_id FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id GROUP BY t.threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_id, SUM(t.threat_level) AS total_threat_level FROM threats t;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT t.threat_name, SUM(m.strategy_id) AS total_strategy_id FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE mitigation_strategies (\n    strategy_id INT PRIMARY KEY,\n    strategy_name VARCHAR(50),\n    strategy_description TEXT,\n    threat_id INT REFERENCES threats(threat_id)\n);\n\n### STATEMENT\n\nSELECT AVG(t.threat_level) AS avg_threat_level, AVG(m.strategy_id) AS avg_strategy_id FROM threats t LEFT JOIN mitigation_strategies m ON t.threat_id = m.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_id, threat_name FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_level FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM affected_systems;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT system_id, system_name FROM affected_systems;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT system_type FROM affected_systems;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM defense_measures;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT measure_id, measure_name FROM defense_measures;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT measure_description FROM defense_measures;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, system_name FROM threat_data, affected_systems WHERE threat_data.threat_id = affected_systems.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data WHERE threat_level = 3;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT system_name, measure_name FROM affected_systems, defense_measures WHERE affected_systems.system_id = defense_measures.system_id;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data ORDER BY threat_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM affected_systems ORDER BY system_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM defense_measures WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT AVG(threat_level) AS avg_threat_level FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_threats FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT MAX(threat_level) AS max_threat_level FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT MIN(threat_level) AS min_threat_level FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT system_type FROM affected_systems;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, COUNT(*) AS num_associated_measures FROM threat_data, defense_measures WHERE threat_data.threat_id = defense_measures.threat_id GROUP BY threat_name HAVING num_associated_measures > 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_id, threat_name FROM threat_data WHERE threat_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT system_name, system_type FROM affected_systems WHERE system_type = 'Firewall';",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT measure_name, measure_description FROM defense_measures WHERE measure_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data JOIN affected_systems ON threat_data.threat_id = affected_systems.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, system_name FROM threat_data JOIN affected_systems ON threat_data.threat_id = affected_systems.threat_id WHERE system_type = 'Server';",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data JOIN defense_measures ON threat_data.threat_id = defense_measures.threat_id JOIN affected_systems ON defense_measures.system_id = affected_systems.system_id;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, measure_name FROM threat_data JOIN defense_measures ON threat_data.threat_id = defense_measures.threat_id WHERE defense_measures.measure_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT system_name, measure_name FROM affected_systems JOIN defense_measures ON affected_systems.system_id = defense_measures.system_id WHERE affected_systems.system_type = 'Desktop';",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data WHERE threat_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data WHERE threat_id BETWEEN 5 AND 15;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_data WHERE threat_description LIKE '%phishing%';",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT system_name, measure_name FROM affected_systems JOIN defense_measures ON affected_systems.system_id = defense_measures.system_id WHERE measure_name LIKE '%firewall%';",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT AVG(threat_level) FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT MAX(threat_level) FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT MIN(threat_level) FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT SUM(threat_level) FROM threat_data;",
  "### TABLEDATA\n\nCREATE TABLE threat_data (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(100),\n    threat_description TEXT,\n    threat_level INT\n);\n\nCREATE TABLE affected_systems (\n    system_id INT PRIMARY KEY,\n    system_name VARCHAR(100),\n    system_type VARCHAR(50),\n    threat_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id)\n);\n\nCREATE TABLE defense_measures (\n    measure_id INT PRIMARY KEY,\n    measure_name VARCHAR(100),\n    measure_description TEXT,\n    threat_id INT,\n    system_id INT,\n    FOREIGN KEY (threat_id) REFERENCES threat_data(threat_id),\n    FOREIGN KEY (system_id) REFERENCES affected_systems(system_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, COUNT(*) AS total FROM threat_data GROUP BY threat_name HAVING total > 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT threat_id, threat_name FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_description FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM threat_targets;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT target_id, target_name FROM threat_targets;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT target_name, target_location FROM threat_targets;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM security_events;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT event_id, event_type FROM security_events;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT event_type, event_timestamp FROM security_events;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM security_actions;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT action_id, action_type FROM security_actions;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT action_type, action_description FROM security_actions;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, tt.target_name FROM threats t JOIN security_events se ON t.threat_id = se.threat_id JOIN threat_targets tt ON se.target_id = tt.target_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT se.event_type, sa.action_type FROM security_events se JOIN security_actions sa ON se.event_id = sa.event_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, tt.target_name, sa.action_type FROM threats t JOIN security_events se ON t.threat_id = se.threat_id JOIN threat_targets tt ON se.target_id = tt.target_id JOIN security_actions sa ON se.event_id = sa.event_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, tt.target_name, se.event_type, sa.action_type FROM threats t JOIN security_events se ON t.threat_id = se.threat_id JOIN threat_targets tt ON se.target_id = tt.target_id JOIN security_actions sa ON se.event_id = sa.event_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, tt.target_name, se.event_timestamp, sa.action_description FROM threats t JOIN security_events se ON t.threat_id = se.threat_id JOIN threat_targets tt ON se.target_id = tt.target_id JOIN security_actions sa ON se.event_id = sa.event_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, se.event_type, se.event_timestamp, sa.action_type, sa.action_description FROM threats t JOIN security_events se ON t.threat_id = se.threat_id JOIN threat_targets tt ON se.target_id = tt.target_id JOIN security_actions sa ON se.event_id = sa.event_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_description FROM threats WHERE threat_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT target_name, target_location FROM threat_targets WHERE target_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM security_events WHERE event_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM security_events WHERE threat_id = 3 AND target_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT event_type, event_timestamp FROM security_events WHERE event_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT action_type, action_description FROM security_actions WHERE event_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, s.event_type FROM threats t JOIN security_events s ON t.threat_id = s.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.target_name, a.action_type FROM threat_targets t JOIN security_actions a ON t.target_id = a.event_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT t.threat_name, tt.target_name FROM threats t, threat_targets tt WHERE t.threat_id = tt.target_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM threats WHERE threat_name LIKE '%Malware%';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM threat_targets WHERE target_location LIKE '%California%';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM security_events WHERE threat_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM threats WHERE threat_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(threat_id) FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT MIN(target_id) FROM threat_targets;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(threat_id) FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT event_type FROM security_events;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n    threat_id INT PRIMARY KEY,\n    threat_name VARCHAR(50) NOT NULL,\n    threat_description TEXT\n);\n\nCREATE TABLE threat_targets (\n    target_id INT PRIMARY KEY,\n    target_name VARCHAR(50) NOT NULL,\n    target_location VARCHAR(100)\n);\n\nCREATE TABLE security_events (\n    event_id INT PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    event_timestamp TIMESTAMP,\n    threat_id INT,\n    target_id INT\n);\n\nCREATE TABLE security_actions (\n    action_id INT PRIMARY KEY,\n    action_type VARCHAR(50) NOT NULL,\n    action_description TEXT,\n    event_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT target_id) FROM security_events;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_id, threat_name FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_level FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_actors;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT actor_id, actor_name FROM threat_actors;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT actor_name, actor_type FROM threat_actors;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM vulnerability;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT vulnerability_id, vulnerability_name FROM vulnerability;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT vulnerability_name, vulnerability_description FROM vulnerability;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM attack_methods;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT method_id, method_name FROM attack_methods;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT method_name, method_description FROM attack_methods;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM incidents;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date FROM incidents;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_description, threat_id FROM incidents;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_description, actor_id FROM incidents;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_description, vulnerability_id FROM incidents;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_description, method_id FROM incidents;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats JOIN vulnerability ON threats.threat_id = vulnerability.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats JOIN incidents ON threats.threat_id = incidents.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_id, threat_name FROM threats WHERE threat_level > 5;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threat_actors WHERE actor_type = 'Hacker';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date, incident_description FROM incidents WHERE actor_id = 3 AND method_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_description, vulnerability_name FROM threats JOIN vulnerability ON threats.threat_id = vulnerability.threat_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM incidents ORDER BY incident_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT actor_id, actor_name, COUNT(*) AS num_incidents FROM incidents WHERE actor_id IS NOT NULL GROUP BY actor_id;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT MAX(threat_level) AS highest_threat_level FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT actor_name, AVG(method_id) AS avg_attack_method FROM incidents JOIN threat_actors ON incidents.actor_id = threat_actors.actor_id GROUP BY actor_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT threat_name FROM threats;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_incidents FROM incidents WHERE incident_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM threats WHERE threat_description LIKE '%ransomware%';",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_id, threat_name FROM threats WHERE threat_level < (SELECT AVG(threat_level) FROM threats);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date, incident_description FROM incidents WHERE threat_id IN (SELECT threat_id FROM threats WHERE threat_level < 5);",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT actor_name, COUNT(*) AS num_incidents FROM incidents JOIN threat_actors ON incidents.actor_id = threat_actors.actor_id GROUP BY actor_name HAVING num_incidents > 3;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, COUNT(*) AS num_vulnerabilities FROM threats LEFT JOIN vulnerability ON threats.threat_id = vulnerability.threat_id GROUP BY threat_name;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM incidents WHERE incident_description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT actor_name, COUNT(*) AS num_incidents FROM incidents JOIN threat_actors ON incidents.actor_id = threat_actors.actor_id GROUP BY actor_name ORDER BY num_incidents DESC;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT incident_date, COUNT(*) AS num_incidents FROM incidents GROUP BY incident_date HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT threat_name, threat_description, vulnerability_name FROM threats JOIN vulnerability ON threats.threat_id = vulnerability.threat_id WHERE vulnerability_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE threats (\n  threat_id INT PRIMARY KEY,\n  threat_name VARCHAR(255) NOT NULL,\n  threat_level INT,\n  threat_description TEXT\n);\n\nCREATE TABLE threat_actors (\n  actor_id INT PRIMARY KEY,\n  actor_name VARCHAR(255) NOT NULL,\n  actor_type VARCHAR(50),\n  actor_description TEXT\n);\n\nCREATE TABLE vulnerability (\n  vulnerability_id INT PRIMARY KEY,\n  vulnerability_name VARCHAR(255) NOT NULL,\n  vulnerability_description TEXT,\n  threat_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id)\n);\n\nCREATE TABLE attack_methods (\n  method_id INT PRIMARY KEY,\n  method_name VARCHAR(255) NOT NULL,\n  method_description TEXT\n);\n\nCREATE TABLE incidents (\n  incident_id INT PRIMARY KEY,\n  incident_date DATE,\n  incident_description TEXT,\n  threat_id INT,\n  actor_id INT,\n  vulnerability_id INT,\n  method_id INT,\n  FOREIGN KEY (threat_id) REFERENCES threats(threat_id),\n  FOREIGN KEY (actor_id) REFERENCES threat_actors(actor_id),\n  FOREIGN KEY (vulnerability_id) REFERENCES vulnerability(vulnerability_id),\n  FOREIGN KEY (method_id) REFERENCES attack_methods(method_id)\n);\n\n### STATEMENT\n\nSELECT * FROM incidents WHERE incident_date = CURDATE();"
]