[
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, date FROM security_incident_audit_log WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT description FROM security_incident_audit_log WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE incident_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT id, description FROM security_incident_audit_log WHERE date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type FROM security_incident_audit_log WHERE description LIKE '%security%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id = 5 AND incident_type = 'Unauthorized Access';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE incident_type = 'Malware Attack' AND date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT description FROM security_incident_audit_log WHERE id = 7 OR incident_type = 'Phishing';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT id, incident_type FROM security_incident_audit_log WHERE date >= '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id = 10 AND date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE description = 'Data Exfiltration' OR incident_type = 'Ransomware Attack';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id = 12 AND (incident_type = 'Physical Breach' OR date >= '2022-03-15');",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT description FROM security_incident_audit_log WHERE description LIKE '%incident%' AND date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE incident_type = 'Insider Threat' AND date BETWEEN '2022-02-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT id FROM security_incident_audit_log WHERE incident_type = 'Social Engineering' AND description LIKE '%access%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id = 16 OR (incident_type = 'Data Loss' AND date > '2022-03-15');",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE date < '2022-01-15' AND description NOT LIKE '%attack%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT id, incident_type FROM security_incident_audit_log WHERE date < '2022-02-01' OR description = 'Unauthorized Access';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id = 20 AND incident_type = 'Data Leak';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE incident_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT id, date FROM security_incident_audit_log WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_incidents FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE description LIKE '%malware%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, COUNT(*) AS total_incidents FROM security_incident_audit_log GROUP BY incident_type;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE DATE(date) = '2022-06-15';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(id) AS max_id FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('day', date)) AS avg_days FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE incident_type = 'Phishing' AND description LIKE '%credentials%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_incidents FROM security_incident_audit_log WHERE incident_type = 'Data Leak';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id_per_type, incident_type FROM security_incident_audit_log GROUP BY incident_type;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT id, incident_type FROM security_incident_audit_log WHERE DATE(date) BETWEEN '2022-06-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(date) AS first_incident_date FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log ORDER BY date DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, COUNT(*) AS total_incidents FROM security_incident_audit_log HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incident_audit_log WHERE id IN (SELECT id FROM security_incident_audit_log WHERE DATE(date) = '2022-06-15');",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT incident_type FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_audit_log (\n  id INT PRIMARY KEY,\n  incident_type TEXT,\n  date TIMESTAMP,\n  description TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(id) AS total_id_sum FROM security_incident_audit_log;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type FROM security_incidents WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id, incident_time FROM security_incidents WHERE incident_type = 'Hacking';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id, details FROM security_incidents WHERE incident_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, incident_time FROM security_incidents WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE details LIKE '%phishing%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id, incident_time FROM security_incidents WHERE incident_type = 'Malware';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, details FROM security_incidents WHERE incident_time < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE details IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id, incident_type, incident_time, details FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_time BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT incident_type FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_incidents FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id, MAX(incident_time) AS latest_incident_time FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, MIN(id) AS min_id FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, COUNT(*) AS num_incidents FROM security_incidents GROUP BY incident_type;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id, details FROM security_incidents ORDER BY incident_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_type IN ('Hacking', 'Data Breach');",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id,incident_type,incident_time FROM security_incidents WHERE incident_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(id) AS total_incidents FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE details LIKE '%vulnerability%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS avg_id FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_type = 'Phishing' AND details LIKE '%credentials%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id,incident_type,incident_time FROM security_incidents ORDER BY incident_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type, COUNT(*) AS total_incidents FROM security_incidents GROUP BY incident_type;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id,incident_type,incident_time FROM security_incidents WHERE incident_type IN ('Data Breach','Ransomware');",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(incident_time) AS latest_incident_time FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_time >= '2022-01-01' AND incident_time <= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT incident_type,AVG(id) AS avg_id, COUNT(*) AS total_incidents FROM security_incidents GROUP BY incident_type;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_incidents, MAX(incident_time) AS latest_incident_time FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_type = 'Malware' OR incident_type = 'Phishing';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id,incident_type,incident_time FROM security_incidents WHERE incident_type = 'Data Breach' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(incident_time) AS earliest_incident_time FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT details,incident_time FROM security_incidents WHERE details IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id,incident_type,incident_time FROM security_incidents WHERE incident_type LIKE '%malicious%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT id,incident_type,incident_time FROM security_incidents WHERE incident_type = 'Ransomware' AND DATE(incident_time) = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n  id INT PRIMARY KEY,\n  incident_type VARCHAR(50),\n  incident_time TIMESTAMP,\n  details TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT incident_type FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date FROM security_incidents WHERE severity_level='High';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_date, description FROM security_incidents WHERE severity_level='Medium';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_id, severity_level FROM security_incidents WHERE incident_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM incident_locations;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT location_name, city FROM incident_locations WHERE state='California';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT address, city FROM incident_locations WHERE location_id=5;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM incident_employees;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM incident_employees WHERE department='IT';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_id, employee_name FROM incident_employees WHERE department='HR';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_incidents FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_locations FROM incident_locations;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(incident_id) AS average_incident_id FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(incident_date) AS earliest_incident_date FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(incident_date) AS latest_incident_date FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT severity_level FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT location_name, city, state FROM incident_locations ORDER BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM incident_employees ORDER BY employee_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date FROM security_incidents WHERE description LIKE '%data breach%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE severity_level = 'High';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT description FROM security_incidents WHERE incident_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date, severity_level FROM security_incidents WHERE severity_level = 'Medium' ORDER BY incident_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents INNER JOIN incident_employees ON security_incidents.incident_id = incident_employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_location.location_name, incident_employees.employee_name FROM incident_locations JOIN incident_employees ON incident_locations.location_id = incident_employees.employee_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM security_incidents WHERE severity_level = 'Low';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(CASE WHEN severity_level = 'High' THEN 1 ELSE 0 END) AS high_incidents FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(incident_id) AS avg_incident_id FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT severity_level FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(description)) AS avg_description_length FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_date, COUNT(*) AS num_incidents FROM security_incidents GROUP BY incident_date;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT location_name, COUNT(*) AS num_incidents FROM incident_locations LEFT JOIN security_incidents ON incident_locations.location_id = security_incidents.incident_id GROUP BY location_name;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_name, department, COUNT(*) AS num_incidents FROM incident_employees LEFT JOIN security_incidents ON incident_employees.employee_id = security_incidents.incident_id GROUP BY employee_name, department;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_id, incident_date, severity_level, description FROM security_incidents WHERE severity_level = 'High' AND incident_date >= '2021-01-01' AND incident_date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE description LIKE '%attack%' OR description LIKE '%breach%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_date, COUNT(*) AS num_incidents FROM security_incidents WHERE severity_level = 'Critical' GROUP BY incident_date HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(description)) AS avg_description_length, severity_level FROM security_incidents GROUP BY severity_level HAVING AVG(LENGTH(description)) > 50;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_name, department, location_name FROM incident_employees JOIN incident_locations ON incident_employees.employee_id = incident_locations.location_id ORDER BY employee_name, location_name;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT employee_name, department, location_name FROM incident_employees LEFT JOIN incident_locations ON incident_employees.employee_id = incident_locations.location_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    incident_id INT PRIMARY KEY,\n    incident_date DATE,\n    severity_level VARCHAR(20),\n    description TEXT\n);\n\nCREATE TABLE incident_locations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50)\n);\n\nCREATE TABLE incident_employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50),\n    department VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT incident_date, COUNT(*) AS num_incidents FROM security_incidents GROUP BY incident_date ORDER BY num_incidents DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT id, incident_type FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT description FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, event_type FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT date_logged, details FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM incident_resolutions;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT incident_id, resolution_details FROM incident_resolutions;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT resolution_id, resolved_by FROM incident_resolutions;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE incident_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE role = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE event_type = 'Login';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM incident_resolutions WHERE resolution_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents ORDER BY date_created DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE date_logged > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM incident_resolutions WHERE resolved_by = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('day', date_logged - date_created)) AS resolution_days FROM audit_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT id, date_created, incident_type FROM security_incidents WHERE incident_type = 'Data Breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents ORDER BY date_created DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT date_created, COUNT(*) FROM security_incidents GROUP BY date_created;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT incident_type, COUNT(*) FROM security_incidents GROUP BY incident_type;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents INNER JOIN users ON security_incidents.id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT security_incidents.id, security_incidents.description, users.username FROM security_incidents INNER JOIN users ON security_incidents.id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT security_incidents.id, security_incidents.incident_type, users.username, users.email FROM security_incidents INNER JOIN users ON security_incidents.id = users.user_id WHERE security_incidents.incident_type = 'Malware Attack';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents LEFT JOIN incident_resolutions ON security_incidents.id = incident_resolutions.incident_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT security_incidents.id, security_incidents.incident_type, incident_resolutions.resolved_by, incident_resolutions.resolution_details FROM security_incidents LEFT JOIN incident_resolutions ON security_incidents.id = incident_resolutions.incident_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE event_type = 'Login' AND date_logged > '2022-06-01' ORDER BY date_logged DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM audit_logs WHERE user_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY date_logged DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT users.username, audit_logs.event_type, audit_logs.details FROM users INNER JOIN audit_logs ON users.user_id = audit_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT users.username, users.email, COUNT(*) AS total_logs FROM users INNER JOIN audit_logs ON users.user_id = audit_logs.user_id GROUP BY users.username, users.email;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT users.username, users.email, COUNT(*) AS total_logs FROM users INNER JOIN audit_logs ON users.user_id = audit_logs.user_id WHERE audit_logs.event_type = 'Logout' GROUP BY users.username, users.email;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM incident_resolutions WHERE resolved_by = 'Admin' ORDER BY resolution_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM incident_resolutions WHERE resolution_details LIKE '%mitigation%';",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT incident_resolutions.incident_id, security_incidents.incident_type, incident_resolutions.resolved_by, incident_resolutions.resolution_details FROM incident_resolutions INNER JOIN security_incidents ON incident_resolutions.incident_id = security_incidents.id;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incidents UNION SELECT * FROM incident_resolutions;",
  "### TABLEDATA\n\nCREATE TABLE security_incidents (\n    id UUID PRIMARY KEY,\n    date_created TIMESTAMP,\n    incident_type VARCHAR(50),\n    description TEXT\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    role VARCHAR(20)\n);\n\nCREATE TABLE audit_logs (\n    log_id UUID PRIMARY KEY,\n    date_logged TIMESTAMP,\n    event_type VARCHAR(50),\n    user_id UUID,\n    details TEXT\n);\n\nCREATE TABLE incident_resolutions (\n    resolution_id UUID PRIMARY KEY,\n    incident_id UUID,\n    resolved_by VARCHAR(50),\n    resolution_details TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT date_created FROM security_incidents ORDER BY date_created ASC;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incident_logs WHERE incident_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, event_type FROM security_incident_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_accounts WHERE user_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM system_logs WHERE event_type LIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT log_id, timestamp FROM user_activity_logs ORDER BY timestamp DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE permit_access = true;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT role, description FROM permissions WHERE role = 'editor';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, activity_type FROM user_activity_logs WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incident_logs WHERE timestamp >= '2022-04-01' AND timestamp < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, role FROM user_accounts WHERE role = 'user' OR role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM system_logs WHERE timestamp >= '2022-01-01 00:00:00' AND timestamp < '2022-02-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incident_logs WHERE event_type IN ('security breach', 'data leak');",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_accounts WHERE username LIKE '%test%';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_activity_logs WHERE user_id = 5 AND activity_type = 'login' ORDER BY timestamp DESC LIMIT 1;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM permissions WHERE role = 'admin' AND permit_access = true;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT role, description FROM permissions WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM security_incident_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(log_id) FROM system_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(user_id) FROM user_activity_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incident_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT incident_id, timestamp, user_id FROM security_incident_logs WHERE event_type = 'security breach';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE role = 'admin' ORDER BY username DESC;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM system_logs WHERE description LIKE '%error%' AND timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT user_id, timestamp FROM user_activity_logs WHERE activity_type = 'login' ORDER BY timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_accounts WHERE email LIKE '%@example.com%' AND password = 'hashedPassword';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incident_logs WHERE TIMESTAMPDIFF(HOUR, timestamp, NOW()) < 24;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts INNER JOIN permissions ON user_accounts.role = permissions.role WHERE permit_access = true;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(log_id) AS max_log_id FROM system_logs;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logs FROM security_incident_logs WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE user_id IN (SELECT user_id FROM user_activity_logs WHERE activity_type = 'logout');",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT u.username, s.description FROM user_accounts u LEFT JOIN system_logs s ON u.user_id = s.log_id;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT role FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(permission_id) AS avg_permission_id FROM permissions;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM security_incident_logs WHERE user_id = (SELECT user_id FROM user_accounts WHERE username = 'admin');",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_incidents, event_type FROM security_incident_logs GROUP BY event_type ORDER BY total_incidents DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE user_id NOT IN (SELECT user_id FROM user_activity_logs);",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_admins FROM user_accounts WHERE role = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE security_incident_logs (\n    incident_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_accounts (\n    user_id INT PRIMARY KEY,\n    username TEXT,\n    password TEXT,\n    email TEXT,\n    role TEXT\n);\n\nCREATE TABLE system_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    event_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE user_activity_logs (\n    log_id INT PRIMARY KEY,\n    timestamp TIMESTAMP,\n    user_id INT,\n    activity_type TEXT,\n    description TEXT\n);\n\nCREATE TABLE permissions (\n    permission_id INT PRIMARY KEY,\n    role TEXT,\n    permit_access BOOLEAN,\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT description, event_type FROM system_logs UNION SELECT description, activity_type FROM user_activity_logs;"
]