[
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('1eaf88eb-c025-461a-8eef-70c3a69f9a88', 'c7c43c1f-6a20-4822-a80d-87d643e6f1ec', 'fingerprint123', 'face123', 'iris123')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('2fe53b16-3b22-4d92-8b88-bf4ef3d5d94d', '7e531c5a-553a-49f4-a6f4-23c011e1539f', 'fingerprint456', 'face456', 'iris456')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('3d8c9c67-d36e-4d00-9f80-350939a7bbab', 'b98f7bea-d631-4d7a-b987-d2819a7aaaf0', 'fingerprint789', 'face789', 'iris789')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('4fa4375e-992b-4e1b-a218-61012cfdd679', '83684d5c-318e-4c15-96b7-b0738a98f4b4', 'fingerprintabc', 'faceabc', 'irisabc')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('5c2e5c8a-ec63-465c-82d3-48cc9cb23e06', '8f57bfbf-701c-4594-8ec8-ea9731ac4ff9', 'fingerprintdef', 'facedef', 'irisdef')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('6b4d62d7-91a5-4c0a-8b13-591e1d1a4830', '31ab1898-de51-4bd6-b890-0c346f72169b', 'fingerprintxyz', 'facexyz', 'irisxyz')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('7c35a19c-d045-4261-beca-25542990b60d', '623c7970-7227-4b07-821e-8d3bc709c625', 'fingerprint789', 'face789', 'iris789')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('8e779231-8e37-4376-8daa-50b7a743ae98', 'e2c1bbcb-817e-4c88-9c7a-5b877be29c52', 'fingerprintabc', 'faceabc', 'irisabc')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('9a0f366a-4887-4067-9513-99fc94ac88da', '04e6935b-10bd-4d52-908b-5c888b353f9f', 'fingerprintdef', 'facedef', 'irisdef')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('aae7e19d-eb24-4d1c-87d5-d40d3da456a9', 'e56627ab-c950-4ae4-b965-f372afb0feab', 'fingerprintxyz', 'facexyz', 'irisxyz')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('bb69126d-1b8d-4373-a45f-db7c86c570f1', 'df2363b3-dc69-4c01-b339-0078765a3fb1', 'fingerprint123', 'face123', 'iris123')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('ca58f09f-3a23-4f20-bc82-2936baf5b1d8', '6afe69e4-084a-467f-b619-7762d76c94b2', 'fingerprint456', 'face456', 'iris456')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('dc255281-0289-4ff4-85ee-0fd20fddfb0c', '9cd36cf2-419a-4fa3-b5dd-1f2b6a17576f', 'fingerprint789', 'face789', 'iris789')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('ed3b23ca-87f5-4e93-a6f5-d64fd60f2422', '8ef4e488-a931-4a0e-884f-c44e877c011e', 'fingerprintabc', 'faceabc', 'irisabc')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('fe1967fb-1164-445f-8170-ebe1fedb063a', '2a23c53b-6b36-4ef2-8b41-0d2af4a90930', 'fingerprintdef', 'facedef', 'irisdef')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('1f0090e4-d019-4609-9001-f58fe167765a', 'e54567dc-1224-4283-8b5a-9400c68dc3b9', 'fingerprintxyz', 'facexyz', 'irisxyz')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('2f2f31b4-2db9-4811-8a9d-7c758eafa040', 'aab3da19-719f-439f-9e85-0d28c9f4254d', 'fingerprint123', 'face123', 'iris123')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('3e5f5918-15cb-464f-9404-3a018c957e3f', 'd9f28431-0c6b-4217-a3d7-9c83c4b02a06', 'fingerprint456', 'face456', 'iris456')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('4f1d4d7b-8527-44b0-af51-11b446f16914', '752cf9e4-e58b-48ab-8c89-f6e6f1d4e874', 'fingerprint789', 'face789', 'iris789')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('1', 'user1', 'fingerprint1', 'face1', 'iris1')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('2', 'user2', 'fingerprint2', 'face2', 'iris2')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('3', 'user3', 'fingerprint3', 'face3', 'iris3')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('4', 'user4', 'fingerprint4', 'face4', 'iris4')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('5', 'user5', 'fingerprint5', 'face5', 'iris5')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data, iris_data) VALUES ('6', 'user6', 'fingerprint6', 'face6', 'iris6')",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID,\n    fingerprint_data VARCHAR,\n    face_data VARCHAR,\n    iris_data VARCHAR\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id...",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('2e7f1c27-0eb2-435f-9e3a-bfeb19695bf1', '8c9a4ded-e7ff-4a1e-a2f4-8f1a232a1904', 'Fingerprint1', 'Iris1', 'Face1') ON DUPLICATE KEY UPDATE fingerprint_data='NewFingerprint1', iris_scan_data='NewIris1', face_recognition_data='NewFace1';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('464a5b27-c245-4d79-ba5c-9a1420834aaf', '240f3e7d-be65-4367-845a-1a635c5a0fce', 'Fingerprint2', 'Iris2', 'Face2') ON DUPLICATE KEY UPDATE fingerprint_data='NewFingerprint2', iris_scan_data='NewIris2', face_recognition_data='NewFace2';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('c4fd2b62-7128-4c21-90bc-136e2df4c180', 'c09aa655-e3f9-4552-8926-7a5a1cb1b1cd', 'Fingerprint3', 'Iris3', 'Face3') ON DUPLICATE KEY UPDATE fingerprint_data='NewFingerprint3', iris_scan_data='NewIris3', face_recognition_data='NewFace3';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('ecf0ad08-584f-4c06-9a02-6b320cdd8fca', 'fe2c7f44-7631-4786-be89-62d8efec7e2a', 'Fingerprint4', 'Iris4', 'Face4') ON DUPLICATE KEY UPDATE fingerprint_data='NewFingerprint4', iris_scan_data='NewIris4', face_recognition_data='NewFace4';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('6d624978-f71d-42d9-9b6c-0b60a28595cb', '007695b6-bfd4-420d-a4f8-1ecddf098546... 40 items omitted ...]} 500_stmts_generated=true _validation_run_success=true 10000_records_generated=true stmts_count=20 500_=true 1000_records_generated=true 100_=true 500=20 1000_=true 10000_=true 500_stmts_count=20 10000_records_generated=true 1000_=20 10000_stmts_count=20 1000_stmts_count=20 500_records_generated=true 100_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true 500_records_generated=true 100_records_generated=true 500_stmts_count=20 500_stmts_count=20 500_stmts_generated=true 500_stmts_count=20 500_stmts_generated=true 100_stmts_count=20 100_stmts_generated=true 100000_stmts_generated=true 10000_=20 1000_records_generated=true 100000_records_generated=true 500_records_generated=true 100_records_generated=true 1000_records_generated=true 1000_stmts_generated=true 500_stmts_count=20 100000_records_generated=true 1000_stmts_count=20 500_records_generated=true 1000_records_generated=true 20_stmts_generated=true 1000_records_generated=true 1000_stmts_generated=true 20_records_generated=true 500_stmts_generated=true 100_records_generated=true 100_stmts_count=20 100000_stmts_count=20 1000_stmts_generated=true 500_records_generated=true",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('479fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', '247fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', 'FingerprintData1', 'IrisScanData1', 'FaceRecognitionData1') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'UpdatedFingerprintData1';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('579fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', '347fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', 'FingerprintData2', 'IrisScanData2', 'FaceRecognitionData2') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'UpdatedFingerprintData2';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('679fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', '447fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', 'FingerprintData3', 'IrisScanData3', 'FaceRecognitionData3') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'UpdatedFingerprintData3';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    fingerprint_data BLOB,\n    iris_scan_data BLOB,\n    face_recognition_data BLOB\n);\nCREATE TABLE verification_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    verification_type VARCHAR(50) NOT NULL,\n    verification_result BOOLEAN NOT NULL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, iris_scan_data, face_recognition_data) VALUES ('779fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', '547fd1aa-ee4e-4f22-86a2-bc4a2e5a325c', 'Fingerp...",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (1, 101, 'fingerprint1', 'face1') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint1', face_data = 'updated_face1';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (2, 102, 'fingerprint2', 'face2') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint2', face_data = 'updated_face2';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (3, 103, 'fingerprint3', 'face3') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint3', face_data = 'updated_face3';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (4, 104, 'fingerprint4', 'face4') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint4', face_data = 'updated_face4';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (5, 105, 'fingerprint5', 'face5') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint5', face_data = 'updated_face5';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (6, 106, 'fingerprint6', 'face6') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint6', face_data = 'updated_face6';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (7, 107, 'fingerprint7', 'face7') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint7', face_data = 'updated_face7';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (8, 108, 'fingerprint8', 'face8') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint8', face_data = 'updated_face8';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (9, 109, 'fingerprint9', 'face9') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint9', face_data = 'updated_face9';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (10, 110, 'fingerprint10', 'face10') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint10', face_data = 'updated_face10';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (11, 111, 'fingerprint11', 'face11') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint11', face_data = 'updated_face11';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (12, 112, 'fingerprint12', 'face12') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint12', face_data = 'updated_face12';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (13, 113, 'fingerprint13', 'face13') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint13', face_data = 'updated_face13';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (14, 114, 'fingerprint14', 'face14') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint14', face_data = 'updated_face14';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (15, 115, 'fingerprint15', 'face15') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint15', face_data = 'updated_face15';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (16, 116, 'fingerprint16', 'face16') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint16', face_data = 'updated_face16';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (17, 117, 'fingerprint17', 'face17') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint17', face_data = 'updated_face17';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (18, 118, 'fingerprint18', 'face18') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint18', face_data = 'updated_face18';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (19, 119, 'fingerprint19', 'face19') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint19', face_data = 'updated_face19';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (20, 120, 'fingerprint20', 'face20') ON CONFLICT (id) DO UPDATE SET fingerprint_data = 'updated_fingerprint20', face_data = 'updated_face20';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (1, 1001, 'finger_data_1', 'face_data_1') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (2, 1002, 'finger_data_2', 'face_data_2') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (3, 1003, 'finger_data_3', 'face_data_3') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (4, 1004, 'finger_data_4', 'face_data_4') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (5, 1005, 'finger_data_5', 'face_data_5') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (6, 1006, 'finger_data_6', 'face_data_6') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (7, 1007, 'finger_data_7', 'face_data_7') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (8, 1008, 'finger_data_8', 'face_data_8') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (9, 1009, 'finger_data_9', 'face_data_9') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, fingerprint_data, face_data) VALUES (10, 1010, 'finger_data_10', 'face_data_10') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, fingerprint_data = excluded.fingerprint_data, face_data = excluded.face_data;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_information (user_id, full_name, date_of_birth, address, email) VALUES (1001, 'John Doe', '1990-05-15', '123 Main Street', 'john.doe@example.com') ON CONFLICT (user_id) DO UPDATE SET full_name = excluded.full_name, date_of_birth = excluded.date_of_birth, address = excluded.address, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_information (user_id, full_name, date_of_birth, address, email) VALUES (1002, 'Jane Smith', '1985-08-20', '456 Oak Avenue', 'jane.smith@example.com') ON CONFLICT (user_id) DO UPDATE SET full_name = excluded.full_name, date_of_birth = excluded.date_of_birth, address = excluded.address, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_information (user_id, full_name, date_of_birth, address, email) VALUES (1003, 'Michael Johnson', '1977-12-10', '789 Elm Street', 'michael.johnson@example.com') ON CONFLICT (user_id) DO UPDATE SET full_name = excluded.full_name, date_of_birth = excluded.date_of_birth, address = excluded.address, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_information (user_id, full_name, date_of_birth, address, email) VALUES (1004, 'Sarah Williams', '1995-04-25', '567 Pine Street', 'sarah.williams@example.com') ON CONFLICT (user_id) DO UPDATE SET full_name = excluded.full_name, date_of_birth = excluded.date_of_birth, address = excluded.address, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_information (user_id, full_name, date_of_birth, address, email) VALUES (1005, 'David Brown', '1980-09-30', '890 Maple Avenue', 'david.brown@example.com') ON CONFLICT (user_id) DO UPDATE SET full_name = excluded.full_name, date_of_birth = excluded.date_of_birth, address = excluded.address, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO verification_logs (log_id, user_id, verification_type, verification_status, verification_time) VALUES (1, 1001, 'fingerprint', 'success', '2022-01-10 08:30:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, verification_type = excluded.verification_type, verification_status = excluded.verification_status, verification_time = excluded.verification_time;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO verification_logs (log_id, user_id, verification_type, verification_status, verification_time) VALUES (2, 1002, 'face', 'failure', '2022-01-11 09:45:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, verification_type = excluded.verification_type, verification_status = excluded.verification_status, verification_time = excluded.verification_time;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO verification_logs (log_id, user_id, verification_type, verification_status, verification_time) VALUES (3, 1003, 'fingerprint', 'success', '2022-01-12 10:30:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, verification_type = excluded.verification_type, verification_status = excluded.verification_status, verification_time = excluded.verification_time;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO verification_logs (log_id, user_id, verification_type, verification_status, verification_time) VALUES (4, 1004, 'face', 'incomplete', '2022-01-13 11:45:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, verification_type = excluded.verification_type, verification_status = excluded.verification_status, verification_time = excluded.verification_time;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id INT PRIMARY KEY,\n    user_id INT,\n    fingerprint_data BYTEA,\n    face_data BYTEA\n);\n\n\nCREATE TABLE user_information (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    date_of_birth DATE,\n    address VARCHAR(100),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE verification_logs (\n    log_id INT PRIMARY KEY,\n    user_id INT,\n    verification_type VARCHAR(20),\n    verification_status VARCHAR(10),\n    verification_time TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO verification_logs (log_id, user_id, verification_type, verification_status, verification_time) VALUES (5, 1005, 'fingerprint', 'failed', '2022-01-14 12:30:00') ON CONFLICT (log_id) DO UPDATE SET user_id = excluded.user_id, verification_type = excluded.verification_type, verification_status = excluded.verification_status, verification_time = excluded.verification_time;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('1', 'John', 'Doe', '\\x454E4453415...') ON CONFLICT (user_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', biometric_data = '\\x454E4453415...';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('2', 'Alice', 'Smith', '\\x454E4453415...') ON CONFLICT (user_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', biometric_data = '\\x454E4453415...';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('3', 'Bob', 'Johnson', '\\x454E4453415...') ON CONFLICT (user_id) DO UPDATE SET first_name = 'Bob', last_name = 'Johnson', biometric_data = '\\x454E4453415...';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('1', '1', '2022-01-01 12:00:00', 'Fingerprint', 0.85) ON CONFLICT (record_id) DO UPDATE SET user_id = '1', timestamp = '2022-01-01 12:00:00', biometric_type = 'Fingerprint', biometric_reading = 0.85;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('2', '2', '2022-01-02 10:30:00', 'Iris Scan', 0.92) ON CONFLICT (record_id) DO UPDATE SET user_id = '2', timestamp = '2022-01-02 10:30:00', biometric_type = 'Iris Scan', biometric_reading = 0.92;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('3', '3', '2022-01-03 15:45:00', 'Face Recognition', 0.78) ON CONFLICT (record_id) DO UPDATE SET user_id = '3', timestamp = '2022-01-03 15:45:00', biometric_type = 'Face Recognition', biometric_reading = 0.78;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('1', '1', 'Access Granted', '2022-01-01 12:05:00') ON CONFLICT (log_id) DO UPDATE SET record_id = '1', action = 'Access Granted', log_timestamp = '2022-01-01 12:05:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('2', '2', 'Access Denied', '2022-01-02 10:35:00') ON CONFLICT (log_id) DO UPDATE SET record_id = '2', action = 'Access Denied', log_timestamp = '2022-01-02 10:35:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('3', '3', 'Access Granted', '2022-01-03 15:50:00') ON CONFLICT (log_id) DO UPDATE SET record_id = '3', action = 'Access Granted', log_timestamp = '2022-01-03 15:50:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('1', '1', '\\x454E4453415...') ON CONFLICT (image_id) DO UPDATE SET user_id = '1', image = '\\x454E4453415...';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('2', '2', '\\x454E4453415...') ON CONFLICT (image_id) DO UPDATE SET user_id = '2', image = '\\x454E4453415...';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('3', '3', '\\x454E4453415...') ON CONFLICT (image_id) DO UPDATE SET user_id = '3', image = '\\x454E4453415...';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('c2db53de-2ca6-44a7-9d60-b238a62f5010', 'John', 'Doe', '\\x0102030405060708'::BYTEA) ON CONFLICT (user_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', biometric_data = '\\x0102030405060708'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('c0b3a23f-17b7-4b14-a058-36d18a5b69d4', 'c2db53de-2ca6-44a7-9d60-b238a62f5010', '2022-07-15 12:30:00', 'Fingerprint', 0.85) ON CONFLICT (record_id) DO UPDATE SET user_id = 'c2db53de-2ca6-44a7-9d60-b238a62f5010', timestamp = '2022-07-15 12:30:00', biometric_type = 'Fingerprint', biometric_reading = 0.85;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('b731c8d6-12e1-4b21-a1d5-1d986d9976b7', 'c0b3a23f-17b7-4b14-a058-36d18a5b69d4', 'Access Granted', '2022-07-15 12:30:00') ON CONFLICT (log_id) DO UPDATE SET record_id = 'c0b3a23f-17b7-4b14-a058-36d18a5b69d4', action = 'Access Granted', log_timestamp = '2022-07-15 12:30:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('f9f43e22-5027-4c3f-b8e0-09b065e9e51c', 'c2db53de-2ca6-44a7-9d60-b238a62f5010', '\\x0102030405'::BYTEA) ON CONFLICT (image_id) DO UPDATE SET user_id = 'c2db53de-2ca6-44a7-9d60-b238a62f5010', image = '\\x0102030405'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('2626295a-575a-4f26-b094-cf2683a5952c', 'Alice', 'Smith', '\\x0102030405060708'::BYTEA) ON CONFLICT (user_id) DO UPDATE SET first_name = 'Alice', last_name = 'Smith', biometric_data = '\\x0102030405060708'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('e1218d41-9b9f-4333-b5e2-d352a08dfdc9', '2626295a-575a-4f26-b094-cf2683a5952c', '2022-07-15 12:45:00', 'Iris Scan', 0.92) ON CONFLICT (record_id) DO UPDATE SET user_id = '2626295a-575a-4f26-b094-cf2683a5952c', timestamp = '2022-07-15 12:45:00', biometric_type = 'Iris Scan', biometric_reading = 0.92;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('65b21f06-4e2d-4ae3-aa80-02632d716846', 'e1218d41-9b9f-4333-b5e2-d352a08dfdc9', 'Access Denied', '2022-07-15 12:45:00') ON CONFLICT (log_id) DO UPDATE SET record_id = 'e1218d41-9b9f-4333-b5e2-d352a08dfdc9', action = 'Access Denied', log_timestamp = '2022-07-15 12:45:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('422a897b-2c5b-47d6-a720-83d4aab5a388', '2626295a-575a-4f26-b094-cf2683a5952c', '\\x010203040506'::BYTEA) ON CONFLICT (image_id) DO UPDATE SET user_id = '2626295a-575a-4f26-b094-cf2683a5952c', image = '\\x010203040506'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('802c756c-c10e-4854-a0ff-cad7dd4af4f7', 'Robert', 'Johnson', '\\x0102030405060708'::BYTEA) ON CONFLICT (user_id) DO UPDATE SET first_name = 'Robert', last_name = 'Johnson', biometric_data = '\\x0102030405060708'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('b2288409-8faf-4781-b769-1ea79eb0710b', '802c756c-c10e-4854-a0ff-cad7dd4af4f7', '2022-07-15 13:00:00', 'Facial Recognition', 0.78) ON CONFLICT (record_id) DO UPDATE SET user_id = '802c756c-c10e-4854-a0ff-cad7dd4af4f7', timestamp = '2022-07-15 13:00:00', biometric_type = 'Facial Recognition', biometric_reading = 0.78;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('f06f65b1-9350-46c8-aba6-68c18e3ad3d5', 'b2288409-8faf-4781-b769-1ea79eb0710b', 'Access Granted', '2022-07-15 13:00:00') ON CONFLICT (log_id) DO UPDATE SET record_id = 'b2288409-8faf-4781-b769-1ea79eb0710b', action = 'Access Granted', log_timestamp = '2022-07-15 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('41bb253e-1501-4b29-9f60-e2e6b72ad06b', '802c756c-c10e-4854-a0ff-cad7dd4af4f7', '\\x0102030405'::BYTEA) ON CONFLICT (image_id) DO UPDATE SET user_id = '802c756c-c10e-4854-a0ff-cad7dd4af4f7', image = '\\x0102030405'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('a1685ed4-e22b-4e34-b6a5-0bdbdf72202e', 'Emily', 'Brown', '\\x0102030405060708'::BYTEA) ON CONFLICT (user_id) DO UPDATE SET first_name = 'Emily', last_name = 'Brown', biometric_data = '\\x0102030405060708'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('ab41f4c1-ae71-4853-bb6a-050cf0ce500b', 'a1685ed4-e22b-4e34-b6a5-0bdbdf72202e', '2022-07-15 13:15:00', 'Voice Recognition', 0.91) ON CONFLICT (record_id) DO UPDATE SET user_id = 'a1685ed4-e22b-4e34-b6a5-0bdbdf72202e', timestamp = '2022-07-15 13:15:00', biometric_type = 'Voice Recognition', biometric_reading = 0.91;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('62ac8384-8e23-4ada-92b9-e5597df255ab', 'ab41f4c1-ae71-4853-bb6a-050cf0ce500b', 'Access Granted', '2022-07-15 13:15:00') ON CONFLICT (log_id) DO UPDATE SET record_id = 'ab41f4c1-ae71-4853-bb6a-050cf0ce500b', action = 'Access Granted', log_timestamp = '2022-07-15 13:15:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('4ca12d61-0e9d-4124-9bcf-b484246d2da3', 'a1685ed4-e22b-4e34-b6a5-0bdbdf72202e', '\\x01020304'::BYTEA) ON CONFLICT (image_id) DO UPDATE SET user_id = 'a1685ed4-e22b-4e34-b6a5-0bdbdf72202e', image = '\\x01020304'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('044438da-6a6b-4207-8d8f-4a3a99d7619a', 'Michael', 'Wilson', '\\x0102030405060708'::BYTEA) ON CONFLICT (user_id) DO UPDATE SET first_name = 'Michael', last_name = 'Wilson', biometric_data = '\\x0102030405060708'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('8f7b4a6d-0422-4370-9f5e-18deff8f718b', '044438da-6a6b-4207-8d8f-4a3a99d7619a', '2022-07-15 13:30:00', 'Palm Print', 0.76) ON CONFLICT (record_id) DO UPDATE SET user_id = '044438da-6a6b-4207-8d8f-4a3a99d7619a', timestamp = '2022-07-15 13:30:00', biometric_type = 'Palm Print', biometric_reading = 0.76;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('dd4a830e-d574-445e-8eda-0b6eb4302a67', '8f7b4a6d-0422-4370-9f5e-18deff8f718b', 'Access Denied', '2022-07-15 13:30:00') ON CONFLICT (log_id) DO UPDATE SET record_id = '8f7b4a6d-0422-4370-9f5e-18deff8f718b', action = 'Access Denied', log_timestamp = '2022-07-15 13:30:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('f415940e-1f3e-4bea-9c08-f49f9619e5f8', '044438da-6a6b-4207-8d8f-4a3a99d7619a', '\\x01020304'::BYTEA) ON CONFLICT (image_id) DO UPDATE SET user_id = '044438da-6a6b-4207-8d8f-4a3a99d7619a', image = '\\x01020304'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_users (user_id, first_name, last_name, biometric_data) VALUES ('f53eaee1-01a0-4931-997a-6c77ee997b4c', 'Sarah', 'Anderson', '\\x0102030405060708'::BYTEA) ON CONFLICT (user_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Anderson', biometric_data = '\\x0102030405060708'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_records (record_id, user_id, timestamp, biometric_type, biometric_reading) VALUES ('5d9dbd10-4aeb-47f9-9ae7-4453fe4991bf', 'f53eaee1-01a0-4931-997a-6c77ee997b4c', '2022-07-15 13:45:00', 'Hand Geometry', 0.83) ON CONFLICT (record_id) DO UPDATE SET user_id = 'f53eaee1-01a0-4931-997a-6c77ee997b4c', timestamp = '2022-07-15 13:45:00', biometric_type = 'Hand Geometry', biometric_reading = 0.83;",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_logs (log_id, record_id, action, log_timestamp) VALUES ('61b181a2-73fa-48d0-8627-283b0bc9a921', '5d9dbd10-4aeb-47f9-9ae7-4453fe4991bf', 'Access Denied', '2022-07-15 13:45:00') ON CONFLICT (log_id) DO UPDATE SET record_id = '5d9dbd10-4aeb-47f9-9ae7-4453fe4991bf', action = 'Access Denied', log_timestamp = '2022-07-15 13:45:00';",
  "### TABLEDATA\n\nCREATE TABLE biometric_users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    biometric_data BYTEA\n);\n\nCREATE TABLE biometric_records (\n    record_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    timestamp TIMESTAMP NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_reading DOUBLE PRECISION\n);\n\nCREATE TABLE biometric_logs (\n    log_id UUID PRIMARY KEY,\n    record_id UUID REFERENCES biometric_records(record_id),\n    action VARCHAR(50) NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL\n);\n\nCREATE TABLE biometric_images (\n    image_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES biometric_users(user_id),\n    image BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO biometric_images (image_id, user_id, image) VALUES ('8826f16c-9ef8-4b38-8338-03c04a8c3924', 'f53eaee1-01a0-4931-997a-6c77ee997b4c', '\\x010203'::BYTEA) ON CONFLICT (image_id) DO UPDATE SET user_id = 'f53eaee1-01a0-4931-997a-6c77ee997b4c', image = '\\x010203'::BYTEA;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, biometric_type, biometric_data, created_at) VALUES ('1a6f6957-892e-4f3e-906e-7c6648b43c97', '15633bdf-4d00-4eb3-9d8b-4500866789c9', 'fingerprint', '\\\\x00f\\\\a1\\\\b1\\\\c2', CURRENT_TIMESTAMP) ON CONFLICT (id) DO UPDATE SET biometric_type = EXCLUDED.biometric_type, biometric_data = EXCLUDED.biometric_data, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, full_name, email, password, created_at) VALUES ('15633bdf-4d00-4eb3-9d8b-4500866789c9', 'John Doe', 'johndoe@example.com', '\\\\x00f\\\\a1\\\\b1\\\\c2', CURRENT_TIMESTAMP) ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, user_id, role_name, created_at) VALUES ('66a24716-338b-43c2-a49e-0b04bf769d0f', '15633bdf-4d00-4eb3-9d8b-4500866789c9', 'admin', CURRENT_TIMESTAMP) ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, access_time, access_result, created_at) VALUES ('fb8f677e-9164-4567-b98f-68f1f8a689e7', '15633bdf-4d00-4eb3-9d8b-4500866789c9', CURRENT_TIMESTAMP, 'success', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, user_id, latitude, longitude, created_at) VALUES ('c3d40366-fc82-4f8f-b681-4f2226da6a05', '15633bdf-4d00-4eb3-9d8b-4500866789c9', 37.7749, -122.4194, CURRENT_TIMESTAMP) ON CONFLICT (location_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, biometric_type, biometric_data, created_at) VALUES ('1a6f6957-892e-4f3e-906e-7c6648b43c97', 'b30d6bb0-19bc-491d-a36d-87f28a0cf43b', 'iris-scan', '\\\\x00a\\\\b1\\\\c2\\\\d3', CURRENT_TIMESTAMP) ON CONFLICT (id) DO UPDATE SET biometric_type = EXCLUDED.biometric_type, biometric_data = EXCLUDED.biometric_data, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, full_name, email, password, created_at) VALUES ('b30d6bb0-19bc-491d-a36d-87f28a0cf43b', 'Alice Smith', 'alicesmith@example.com', '\\\\x00a\\\\b1\\\\c2\\\\d3', CURRENT_TIMESTAMP) ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, user_id, role_name, created_at) VALUES ('66a24716-338b-43c2-a49e-0b04bf769d0f', 'b30d6bb0-19bc-491d-a36d-87f28a0cf43b', 'user', CURRENT_TIMESTAMP) ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, access_time, access_result, created_at) VALUES ('4d0d16b4-001c-4193-b867-523152b4d8e0', 'b30d6bb0-19bc-491d-a36d-87f28a0cf43b', CURRENT_TIMESTAMP, 'failure', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, user_id, latitude, longitude, created_at) VALUES ('8b334fc7-275e-4afd-aeb0-5bbe7fa3b06f', 'b30d6bb0-19bc-491d-a36d-87f28a0cf43b', 40.7128, -74.0060, CURRENT_TIMESTAMP) ON CONFLICT (location_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, biometric_type, biometric_data, created_at) VALUES ('adf4a4b1-9299-4b50-b502-7e58699bf168', 'b30d6bb0-19bc-491d-a36d-87f28a0cf43b', 'facial Recognition', '\\\\x00x\\\\y1\\\\z2\\\\w3', CURRENT_TIMESTAMP) ON CONFLICT (id) DO UPDATE SET biometric_type = EXCLUDED.biometric_type, biometric_data = EXCLUDED.biometric_data, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, full_name, email, password, created_at) VALUES ('0a3cbdb4-5ba5-4b49-b204-7853dc3f87c0', 'Bob Johnson', 'bjohnson@example.com', '\\\\x00x\\\\y1\\\\z2\\\\w3', CURRENT_TIMESTAMP) ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, user_id, role_name, created_at) VALUES ('f7ce7ea1-1d4d-44b5-9d7f-734156934c66', '0a3cbdb4-5ba5-4b49-b204-7853dc3f87c0', 'user', CURRENT_TIMESTAMP) ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, access_time, access_result, created_at) VALUES ('5e64d272-5a5b-41dc-9cc9-4293655fa3e5', '0a3cbdb4-5ba5-4b49-b204-7853dc3f87c0', CURRENT_TIMESTAMP, 'success', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, user_id, latitude, longitude, created_at) VALUES ('c7ce626f-27fe-437c-9bd8-8b0b0d63119c', '0a3cbdb4-5ba5-4b49-b204-7853dc3f87c0', 34.0522, -118.2437, CURRENT_TIMESTAMP) ON CONFLICT (location_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO biometric_data (id, user_id, biometric_type, biometric_data, created_at) VALUES ('4c13a26b-8c36-4dc9-9605-9790c56fbb96', '0a3cbdb4-5ba5-4b49-b204-7853dc3f87c0', 'voice recognition', '\\\\x00o\\\\p1\\\\q2\\\\r3', CURRENT_TIMESTAMP) ON CONFLICT (id) DO UPDATE SET biometric_type = EXCLUDED.biometric_type, biometric_data = EXCLUDED.biometric_data, created_at = EXCLUDED.created_at;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, full_name, email, password, created_at) VALUES ('aeb7d1cd-3d09-4700-bf0c-63233d1fd74a', 'Eve Thompson', 'ethompson@example.com', '\\\\x00o\\\\p1\\\\q2\\\\r3', CURRENT_TIMESTAMP) ON CONFLICT (user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (id, user_id, role_name, created_at) VALUES ('f7ce7ea1-1d4d-44b5-9d7f-734156934c66', 'aeb7d1cd-3d09-4700-bf0c-63233d1fd74a', 'user', CURRENT_TIMESTAMP) ON CONFLICT (id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (log_id, user_id, access_time, access_result, created_at) VALUES ('a7b0f677-8f3b-4121-bd5a-8fbbea268b00', 'aeb7d1cd-3d09-4700-bf0c-63233d1fd74a', CURRENT_TIMESTAMP, 'success', CURRENT_TIMESTAMP) ON CONFLICT (log_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO locations (location_id, user_id, latitude, longitude, created_at) VALUES ('648d335d-3f1b-42d0-bd25-0dc0fa3a8b50', 'aeb7d1cd-3d09-4700-bf0c-63233d1fd74a', 39.7392, -104.9903, CURRENT_TIMESTAMP) ON CONFLICT (location_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO biometric_data (id, user_id, biometric_type, biometric_data, created_at) VALUES ('1', '1', 'fingerprint', E'\\x0123', NOW()) ON CONFLICT (id) DO UPDATE SET biometric_type = 'fingerprint_updated';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO users (user_id, full_name, email, password, created_at) VALUES ('1', 'Alice Smith', 'alice@example.com', E'\\x4567', NOW()) ON CONFLICT (user_id) DO UPDATE SET full_name = 'Alice Smith_updated';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO user_roles (id, user_id, role_name, created_at) VALUES ('1', '1', 'admin', NOW()) ON CONFLICT (id) DO UPDATE SET role_name = 'admin_updated';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (log_id, user_id, access_time, access_result, created_at) VALUES ('1', '1', NOW(), 'success', NOW()) ON CONFLICT (log_id) DO UPDATE SET access_result = 'success_updated';",
  "### TABLEDATA\n\nCREATE TABLE biometric_data (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    biometric_type VARCHAR(50) NOT NULL,\n    biometric_data BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password BYTEA NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE user_roles (\n    id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    role_name VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE access_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    access_result VARCHAR(20) NOT NULL,\n    created_at TIMESTAMP\n);\nCREATE TABLE locations (\n    location_id UUID PRIMARY KEY,\n    user_id UUID NOT NULL,\n    latitude DECIMAL(10, 8) NOT NULL,\n    longitude DECIMAL(11, 8) NOT NULL,\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO locations (location_id, user_id, latitude, longitude, created_at) VALUES ('1', '1', 40.7128, -74.0060, NOW()) ON CONFLICT (location_id) DO UPDATE SET latitude = 40.7128, longitude = -74.0060;"
]