[
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, user_id FROM access_logs WHERE access_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT accessed_data FROM access_logs WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE user_id = 2 AND accessed_data LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, MAX(access_time) AS latest_access FROM access_logs GROUP BY id;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_logs FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, user_id, access_time FROM access_logs ORDER BY access_time DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(user_id) AS average_user_id FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE id = 100;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS access_count FROM access_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, user_id, access_time FROM access_logs WHERE accessed_data IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS access_count FROM access_logs GROUP BY user_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, user_id, access_time FROM access_logs WHERE id < 50;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(access_time) AS first_access_time FROM access_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE accessed_data = 'confidential';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, user_id, COUNT(*) AS total_access FROM access_logs GROUP BY user_id ORDER BY total_access DESC;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT id, user_id, access_time FROM access_logs WHERE access_time BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(id) AS average_id FROM access_logs GROUP BY user_id HAVING AVG(id) < 50;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id, COUNT(*) AS log_count FROM access_logs GROUP BY user_id HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE user_id = 5 AND accessed_data LIKE '%important%'",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs GROUP BY user_id HAVING COUNT(*) > 10",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM access_logs",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE access_time > '2021-01-01' ORDER BY access_time DESC",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE accessed_data IN ('data1', 'data2', 'data3')",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE user_id = (SELECT user_id FROM access_logs WHERE access_time = (SELECT MAX(access_time) FROM access_logs))",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs WHERE accessed_data LIKE '%data%' GROUP BY user_id HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE user_id = (SELECT user_id FROM access_logs GROUP BY user_id HAVING COUNT(*) > 100)",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(access_time) FROM access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(access_time) FROM access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs WHERE access_time > '2021-01-01' GROUP BY user_id HAVING COUNT(*) > 20",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE accessed_data LIKE '%secret%' AND access_time < '2021-06-30' ORDER BY access_time",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs WHERE user_id IN (SELECT user_id FROM access_logs WHERE accessed_data = 'confidential') GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(EXTRACT(EPOCH FROM access_time)) FROM access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(TO_CHAR(access_time, 'DD-MM-YYYY')) FROM access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(EXTRACT(EPOCH FROM access_time)) FROM access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs WHERE DATE_TRUNC('hour', access_time) = '2021-07-01 13:00:00' GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs WHERE EXTRACT(MONTH FROM access_time) = 3 GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM access_logs WHERE EXTRACT(YEAR FROM access_time) = 2021 GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, access_timestamp FROM sensitive_access_logs WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_name, data_type FROM sensitive_data;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data WHERE data_type = 'credit_card';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_value FROM sensitive_data WHERE data_name LIKE 'password%';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs WHERE access_timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_name, data_value FROM sensitive_data WHERE access_count > 100;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, accessed_table FROM sensitive_access_logs WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data WHERE data_type = 'personal_info';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_id, data_name FROM sensitive_data WHERE data_value LIKE '%confidential%';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, access_timestamp FROM sensitive_access_logs WHERE accessed_table = 'credit_cards';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs WHERE user_id = 3 AND access_timestamp < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_name, access_count FROM sensitive_data WHERE data_type = 'financial';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs WHERE user_id = 4 AND access_timestamp > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_name, data_value FROM sensitive_data WHERE access_count < 50;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, access_timestamp FROM sensitive_access_logs WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data WHERE data_type = 'medical_records';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT data_name, data_value FROM sensitive_data WHERE access_count > 200;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT log_id, user_id, accessed_table FROM sensitive_access_logs WHERE user_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data WHERE data_type = 'confidential_documents';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs WHERE user_id = 1 AND access_timestamp > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT accessed_table, count(*) FROM sensitive_access_logs GROUP BY accessed_table",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT access_timestamp) AS unique_dates FROM sensitive_access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs JOIN sensitive_data ON sensitive_access_logs.accessed_table = sensitive_data.data_name",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT SUM(access_count) FROM sensitive_data WHERE data_type = 'credit_card'",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT MAX(access_timestamp), MIN(access_timestamp) FROM sensitive_access_logs",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(access_count) AS avg_access_count FROM sensitive_access_logs JOIN sensitive_data ON sensitive_access_logs.accessed_table = sensitive_data.data_name GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_table, access_timestamp FROM sensitive_access_logs WHERE data_id IN (SELECT data_id FROM sensitive_data WHERE data_type = 'medical_record')",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, data_name, data_value FROM sensitive_access_logs JOIN sensitive_data ON sensitive_access_logs.accessed_table = sensitive_data.data_name",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_access_logs WHERE query LIKE '%DELETE%' OR query LIKE '%UPDATE%'",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_table, access_timestamp FROM sensitive_access_logs WHERE user_id = 1 AND accessed_table IN (SELECT data_name FROM sensitive_data WHERE data_type = 'health_record')",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_table, access_timestamp FROM sensitive_access_logs WHERE access_timestamp BETWEEN '2022-01-01' AND '2022-02-01'",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_table, access_timestamp FROM sensitive_access_logs WHERE user_id IN (SELECT DISTINCT user_id FROM sensitive_access_logs GROUP BY user_id HAVING COUNT(*) > 5)",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sensitive_data WHERE data_value = 'confidential'",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT AVG(access_count) FROM sensitive_data WHERE access_count > 0",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data WHERE data_type IN ('password', 'social_security_number')",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(access_timestamp) - MIN(access_timestamp) AS interval_diff FROM sensitive_access_logs GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_access FROM sensitive_access_logs GROUP BY user_id HAVING total_access > 10",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT accessed_table, AVG(access_count) AS avg_access_count FROM sensitive_access_logs JOIN sensitive_data ON sensitive_access_logs.accessed_table = sensitive_data.data_name GROUP BY accessed_table",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(access_count) AS total_access FROM sensitive_access_logs JOIN sensitive_data ON sensitive_access_logs.accessed_table = sensitive_data.data_name GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT id, user_id, timestamp FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, username, last_login FROM user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM access_permissions;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT access_id, user_id, data_type FROM access_permissions;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM sensitive_data_access_log WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM sensitive_data_access_log WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM user_credentials WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM user_credentials WHERE last_login < '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM access_permissions WHERE user_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM access_permissions WHERE access_level = 2;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT MAX(timestamp) FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT MIN(last_login) FROM user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT AVG(access_level) FROM access_permissions;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM sensitive_data_access_log GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT data_type, COUNT(*) FROM access_permissions GROUP BY data_type;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM sensitive_data_access_log JOIN user_credentials ON sensitive_data_access_log.user_id = user_credentials.user_id;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM sensitive_data_access_log WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, accessed_data, timestamp FROM sensitive_data_access_log WHERE accessed_data LIKE '%credit card%';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, timestamp FROM sensitive_data_access_log WHERE timestamp >= '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, user_credentials.last_login, access_permissions.data_type FROM user_credentials INNER JOIN access_permissions ON user_credentials.user_id = access_permissions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, user_credentials.last_login, access_permissions.access_level FROM user_credentials INNER JOIN access_permissions ON user_credentials.user_id = access_permissions.user_id WHERE access_permissions.access_level >= 5;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, sensitive_data_access_log.accessed_data, sensitive_data_access_log.timestamp FROM user_credentials INNER JOIN sensitive_data_access_log ON user_credentials.user_id = sensitive_data_access_log.user_id WHERE sensitive_data_access_log.accessed_data LIKE '%ssn%';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, sensitive_data_access_log.accessed_data, sensitive_data_access_log.timestamp FROM user_credentials INNER JOIN sensitive_data_access_log ON user_credentials.user_id = sensitive_data_access_log.user_id WHERE sensitive_data_access_log.timestamp >= '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, user_credentials.password, access_permissions.data_type, access_permissions.access_level FROM user_credentials INNER JOIN access_permissions ON user_credentials.user_id = access_permissions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, user_credentials.last_login, access_permissions.data_type, access_permissions.access_level FROM user_credentials INNER JOIN access_permissions ON user_credentials.user_id = access_permissions.user_id WHERE access_permissions.access_level >= 5;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, sensitive_data_access_log.accessed_data, sensitive_data_access_log.timestamp, access_permissions.data_type, access_permissions.access_level FROM user_credentials INNER JOIN sensitive_data_access_log ON user_credentials.user_id = sensitive_data_access_log.user_id INNER JOIN access_permissions ON user_credentials.user_id = access_permissions.user_id WHERE sensitive_data_access_log.accessed_data LIKE '%ssn%' AND access_permissions.access_level >= 5;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_credentials.username, access_permissions.data_type FROM user_credentials INNER JOIN access_permissions ON user_credentials.user_id = access_permissions.user_id WHERE access_permissions.access_level >= 5;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM sensitive_data_access_log GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) FROM sensitive_data_access_log GROUP BY user_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, user_credentials.last_login, COUNT(*) FROM user_credentials INNER JOIN sensitive_data_access_log ON user_credentials.user_id = sensitive_data_access_log.user_id GROUP BY user_credentials.username, user_credentials.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, user_credentials.last_login, COUNT(*) FROM user_credentials INNER JOIN sensitive_data_access_log ON user_credentials.user_id = sensitive_data_access_log.user_id GROUP BY user_credentials.username, user_credentials.last_login HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(timestamp), MAX(timestamp) FROM sensitive_data_access_log GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_id, DATE(timestamp) FROM sensitive_data_access_log;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nSELECT user_credentials.username, MAX(sensitive_data_access_log.timestamp) FROM user_credentials INNER JOIN sensitive_data_access_log ON user_credentials.user_id = sensitive_data_access_log.user_id GROUP BY user_credentials.username;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, user_id, accessed_data FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_data FROM access_logs WHERE access_type = 'read';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, email FROM users WHERE username = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, data_owner, access_level FROM sensitive_data;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT data_owner, data_blob FROM sensitive_data WHERE access_level = 'high';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM access_tracking;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, user_id, accessed_table FROM access_tracking;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_table FROM access_tracking WHERE access_result = 'success';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, access_time FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT username, password FROM users WHERE email = 'test@example.com';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, accessed_data FROM access_logs WHERE access_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, data_blob FROM sensitive_data WHERE access_level = 'critical';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, access_time FROM access_tracking WHERE accessed_table = 'sensitive_data';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE accessed_data LIKE '%credit card%';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE username LIKE 'a%';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM sensitive_data WHERE access_level IN ('high', 'critical');",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT user_id, accessed_data FROM access_logs WHERE access_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users JOIN access_logs ON users.id = access_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sensitive_data WHERE access_level = 'high';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM access_logs WHERE access_time BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY access_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users LEFT JOIN access_logs ON users.id = access_logs.user_id WHERE access_logs.user_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT access_logs.user_id, COUNT(*) AS access_count FROM access_logs GROUP BY access_logs.user_id ORDER BY access_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT users.username, COUNT(*) AS access_count FROM users JOIN access_logs ON users.id = access_logs.user_id GROUP BY users.username ORDER BY access_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT access_time, COUNT(*) AS access_count FROM access_logs GROUP BY access_time HAVING COUNT(*) > 10;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT users.username, COUNT(*) AS access_count FROM users JOIN access_logs ON users.id = access_logs.user_id GROUP BY users.username HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT access_time, AVG(user_id) AS avg_user_id FROM access_logs GROUP BY access_time;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(user_id) AS max_user_id FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(user_id) AS min_user_id FROM access_logs;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT data_owner, MAX(id) AS max_id FROM sensitive_data GROUP BY data_owner;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM access_logs WHERE access_type = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT users.username, COUNT(*) AS access_count FROM users JOIN access_logs ON users.id = access_logs.user_id GROUP BY users.username HAVING access_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT users.username, CASE WHEN access_logs.access_time > '2022-01-01' THEN 'Recent' ELSE 'Old' END AS access_status FROM users JOIN access_logs ON users.id = access_logs.user_id;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT users.email, access_tracking.accessed_table FROM users JOIN access_tracking ON users.id = access_tracking.user_id;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM AccessLogs",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT log_id, access_time FROM AccessLogs",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, access_time FROM AccessLogs WHERE access_time > timestamp '2022-01-01 00:00:00'",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Users",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM Users",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM DataSources",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT source_id, source_name FROM DataSources",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM AccessHistory",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, access_time FROM AccessHistory WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT accessed_data, access_time FROM AccessHistory WHERE access_time BETWEEN timestamp '2022-01-01 00:00:00' AND timestamp '2022-02-01 00:00:00'",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserRoles",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT role_id, role_name FROM UserRoles",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, accessed_data FROM AccessHistory WHERE user_id IN (SELECT user_id FROM Users WHERE username = 'admin')",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, history_id FROM AccessHistory WHERE user_id = 1 ORDER BY access_time DESC",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, accessed_data FROM AccessHistory WHERE accessed_data LIKE '%important%'",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM AccessLogs JOIN Users ON AccessLogs.user_id = Users.user_id",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, source_name FROM Users JOIN DataSources ON Users.user_id = DataSources.source_id",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, role_name FROM Users JOIN UserRoles ON Users.user_id = UserRoles.role_id",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, access_time FROM Users JOIN AccessHistory ON Users.user_id = AccessHistory.user_id",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM AccessLogs WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT log_id, access_time FROM AccessLogs WHERE accessed_data LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, access_time FROM AccessLogs WHERE access_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Users WHERE username = 'admin' AND password = 'admin123';",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM Users WHERE email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM DataSources WHERE source_type = 'Database';",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM AccessHistory WHERE access_time > '2022-01-01' ORDER BY access_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, accessed_data, access_time FROM AccessHistory WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT role_id, role_name FROM UserRoles;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Users JOIN UserRoles ON Users.user_id = UserRoles.role_id;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT Users.user_id, Users.username, UserRoles.role_name FROM Users JOIN UserRoles ON Users.user_id = UserRoles.role_id;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id IN (SELECT user_id FROM AccessLogs WHERE access_time > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT count(*) FROM AccessLogs;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT Users.username, count(*) AS log_count FROM Users JOIN AccessLogs ON Users.user_id = AccessLogs.user_id GROUP BY Users.username;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT source_name, count(*) AS access_count FROM DataSources JOIN AccessHistory ON DataSources.source_id = AccessHistory.history_id GROUP BY source_name;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT Users.username, UserRoles.role_name FROM Users JOIN UserRoles ON Users.user_id = UserRoles.role_id WHERE Users.username = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT role_name FROM UserRoles;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) FROM AccessLogs;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(access_time) AS first_access, MAX(access_time) AS last_access FROM AccessLogs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT Users.username, UserRoles.role_name FROM Users LEFT JOIN UserRoles ON Users.user_id = UserRoles.role_id ORDER BY Users.username ASC;"
]