[
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (1, 1001, '2022-01-01 08:00:00', 'Data1') ON CONFLICT (id) DO UPDATE SET user_id = 1001, access_time = '2022-01-01 08:00:00', accessed_data = 'Data1';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (2, 1002, '2022-01-02 09:00:00', 'Data2') ON CONFLICT (id) DO UPDATE SET user_id = 1002, access_time = '2022-01-02 09:00:00', accessed_data = 'Data2';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (3, 1003, '2022-01-03 10:00:00', 'Data3') ON CONFLICT (id) DO UPDATE SET user_id = 1003, access_time = '2022-01-03 10:00:00', accessed_data = 'Data3';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (4, 1004, '2022-01-04 11:00:00', 'Data4') ON CONFLICT (id) DO UPDATE SET user_id = 1004, access_time = '2022-01-04 11:00:00', accessed_data = 'Data4';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (5, 1005, '2022-01-05 12:00:00', 'Data5') ON CONFLICT (id) DO UPDATE SET user_id = 1005, access_time = '2022-01-05 12:00:00', accessed_data = 'Data5';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (6, 1006, '2022-01-06 13:00:00', 'Data6') ON CONFLICT (id) DO UPDATE SET user_id = 1006, access_time = '2022-01-06 13:00:00', accessed_data = 'Data6';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (7, 1007, '2022-01-07 14:00:00', 'Data7') ON CONFLICT (id) DO UPDATE SET user_id = 1007, access_time = '2022-01-07 14:00:00', accessed_data = 'Data7';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (8, 1008, '2022-01-08 15:00:00', 'Data8') ON CONFLICT (id) DO UPDATE SET user_id = 1008, access_time = '2022-01-08 15:00:00', accessed_data = 'Data8';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (9, 1009, '2022-01-09 16:00:00', 'Data9') ON CONFLICT (id) DO UPDATE SET user_id = 1009, access_time = '2022-01-09 16:00:00', accessed_data = 'Data9';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (10, 1010, '2022-01-10 17:00:00', 'Data10') ON CONFLICT (id) DO UPDATE SET user_id = 1010, access_time = '2022-01-10 17:00:00', accessed_data = 'Data10';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (11, 1011, '2022-01-11 18:00:00', 'Data11') ON CONFLICT (id) DO UPDATE SET user_id = 1011, access_time = '2022-01-11 18:00:00', accessed_data = 'Data11';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (12, 1012, '2022-01-12 19:00:00', 'Data12') ON CONFLICT (id) DO UPDATE SET user_id = 1012, access_time = '2022-01-12 19:00:00', accessed_data = 'Data12';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (13, 1013, '2022-01-13 20:00:00', 'Data13') ON CONFLICT (id) DO UPDATE SET user_id = 1013, access_time = '2022-01-13 20:00:00', accessed_data = 'Data13';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (14, 1014, '2022-01-14 21:00:00', 'Data14') ON CONFLICT (id) DO UPDATE SET user_id = 1014, access_time = '2022-01-14 21:00:00', accessed_data = 'Data14';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (15, 1015, '2022-01-15 22:00:00', 'Data15') ON CONFLICT (id) DO UPDATE SET user_id = 1015, access_time = '2022-01-15 22:00:00', accessed_data = 'Data15';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (16, 1016, '2022-01-16 23:00:00', 'Data16') ON CONFLICT (id) DO UPDATE SET user_id = 1016, access_time = '2022-01-16 23:00:00', accessed_data = 'Data16';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (17, 1017, '2022-01-17 00:00:00', 'Data17') ON CONFLICT (id) DO UPDATE SET user_id = 1017, access_time = '2022-01-17 00:00:00', accessed_data = 'Data17';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (18, 1018, '2022-01-18 01:00:00', 'Data18') ON CONFLICT (id) DO UPDATE SET user_id = 1018, access_time = '2022-01-18 01:00:00', accessed_data = 'Data18';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (19, 1019, '2022-01-19 02:00:00', 'Data19') ON CONFLICT (id) DO UPDATE SET user_id = 1019, access_time = '2022-01-19 02:00:00', accessed_data = 'Data19';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO access_logs (id, user_id, access_time, accessed_data) VALUES (20, 1020, '2022-01-20 03:00:00', 'Data20') ON CONFLICT (id) DO UPDATE SET user_id = 1020, access_time = '2022-01-20 03:00:00', accessed_data = 'Data20';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (1, '2022-01-01 08:00:00', 'Data A') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-01 08:00:00', accessed_data = 'Data A';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (2, '2022-01-02 09:00:00', 'Data B') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (3, '2022-01-03 10:00:00', 'Data C') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (4, '2022-01-04 11:00:00', 'Data D') ON CONFLICT(accessed_data) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (5, '2022-01-05 12:00:00', 'Data E') ON CONFLICT(access_time) DO UPDATE SET accessed_data = 'Data E';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (6, '2022-01-06 13:00:00', 'Data F') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (7, '2022-01-07 14:00:00', 'Data G') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-07 14:00:00', accessed_data = 'Data G';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (8, '2022-01-08 15:00:00', 'Data H') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (9, '2022-01-09 16:00:00', 'Data I') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-09 16:00:00', accessed_data = 'Data I';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (10, '2022-01-10 17:00:00', 'Data J') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (11, '2022-01-11 18:00:00', 'Data K') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-11 18:00:00', accessed_data = 'Data K';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (12, '2022-01-12 19:00:00', 'Data L') ON CONFLICT(access_time) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (13, '2022-01-13 20:00:00', 'Data M') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-13 20:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (14, '2022-01-14 21:00:00', 'Data N') ON CONFLICT(accessed_data) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (15, '2022-01-15 22:00:00', 'Data O') ON CONFLICT(access_time) DO UPDATE SET accessed_data = 'Data O';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (16, '2022-01-16 23:00:00', 'Data P') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (17, '2022-01-17 00:00:00', 'Data Q') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-17 00:00:00', accessed_data = 'Data Q';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (18, '2022-01-18 01:00:00', 'Data R') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (19, '2022-01-19 02:00:00', 'Data S') ON CONFLICT(user_id) DO UPDATE SET access_time = '2022-01-19 02:00:00', accessed_data = 'Data S';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n  id SERIAL PRIMARY KEY,\n  user_id INT NOT NULL,\n  access_time TIMESTAMP NOT NULL,\n  accessed_data VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (user_id, access_time, accessed_data) VALUES (20, '2022-01-20 03:00:00', 'Data T') ON CONFLICT(user_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (1, '2022-08-15 10:30:00', 'users', 'SELECT * FROM users') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-15 10:30:00', accessed_table = 'users', query = 'SELECT * FROM users';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (2, '2022-08-16 12:45:00', 'orders', 'SELECT * FROM orders') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-16 12:45:00', accessed_table = 'orders', query = 'SELECT * FROM orders';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (3, '2022-08-17 15:00:00', 'products', 'SELECT * FROM products') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-17 15:00:00', accessed_table = 'products', query = 'SELECT * FROM products';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (4, '2022-08-18 09:20:00', 'customers', 'SELECT * FROM customers') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-18 09:20:00', accessed_table = 'customers', query = 'SELECT * FROM customers';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (5, '2022-08-19 11:10:00', 'transactions', 'SELECT * FROM transactions') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-19 11:10:00', accessed_table = 'transactions', query = 'SELECT * FROM transactions';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (6, '2022-08-20 14:30:00', 'inventory', 'SELECT * FROM inventory') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-20 14:30:00', accessed_table = 'inventory', query = 'SELECT * FROM inventory';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (7, '2022-08-21 08:50:00', 'sales', 'SELECT * FROM sales') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-21 08:50:00', accessed_table = 'sales', query = 'SELECT * FROM sales';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (8, '2022-08-22 10:15:00', 'invoices', 'SELECT * FROM invoices') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-22 10:15:00', accessed_table = 'invoices', query = 'SELECT * FROM invoices';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (9, '2022-08-23 13:40:00', 'expenses', 'SELECT * FROM expenses') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-23 13:40:00', accessed_table = 'expenses', query = 'SELECT * FROM expenses';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (10, '2022-08-24 12:25:00', 'settings', 'SELECT * FROM settings') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-24 12:25:00', accessed_table = 'settings', query = 'SELECT * FROM settings';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (11, '2022-08-25 09:35:00', 'analytics', 'SELECT * FROM analytics') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-25 09:35:00', accessed_table = 'analytics', query = 'SELECT * FROM analytics';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (12, '2022-08-26 14:50:00', 'reports', 'SELECT * FROM reports') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-26 14:50:00', accessed_table = 'reports', query = 'SELECT * FROM reports';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (13, '2022-08-27 08:15:00', 'messages', 'SELECT * FROM messages') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-27 08:15:00', accessed_table = 'messages', query = 'SELECT * FROM messages';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (14, '2022-08-28 11:30:00', 'alerts', 'SELECT * FROM alerts') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-28 11:30:00', accessed_table = 'alerts', query = 'SELECT * FROM alerts';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (15, '2022-08-29 10:40:00', 'reminders', 'SELECT * FROM reminders') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-29 10:40:00', accessed_table = 'reminders', query = 'SELECT * FROM reminders';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (16, '2022-08-30 15:55:00', 'logs', 'SELECT * FROM logs') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-30 15:55:00', accessed_table = 'logs', query = 'SELECT * FROM logs';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (17, '2022-08-31 08:05:00', 'errors', 'SELECT * FROM errors') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-08-31 08:05:00', accessed_table = 'errors', query = 'SELECT * FROM errors';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (18, '2022-09-01 11:20:00', 'permissions', 'SELECT * FROM permissions') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-09-01 11:20:00', accessed_table = 'permissions', query = 'SELECT * FROM permissions';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (19, '2022-09-02 10:00:00', 'settings', 'SELECT * FROM settings') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-09-02 10:00:00', accessed_table = 'settings', query = 'SELECT * FROM settings';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nUPSERT INTO sensitive_access_logs (user_id, access_timestamp, accessed_table, query) VALUES (20, '2022-09-03 14:15:00', 'orders', 'SELECT * FROM orders') ON CONFLICT (user_id) DO UPDATE SET access_timestamp = '2022-09-03 14:15:00', accessed_table = 'orders', query = 'SELECT * FROM orders';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 101, '2022-01-10 12:30:00', 'sensitive_data', 'SELECT * FROM sensitive_data WHERE data_type = 'personal'');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 102, '2022-01-11 10:45:00', 'sensitive_data', 'UPDATE sensitive_data SET data_value = 'new value' WHERE data_id = 1');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 103, '2022-01-12 08:15:00', 'sensitive_data', 'DELETE FROM sensitive_data WHERE data_id = 2');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 104, '2022-01-13 14:20:00', 'sensitive_data', 'INSERT INTO sensitive_data (data_name, data_type, data_value) VALUES ('New Data', 'sensitive', 'confidential');');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 105, '2022-01-14 09:30:00', 'sensitive_data', 'SELECT data_name FROM sensitive_data WHERE data_type = 'confidential';');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 106, '2022-01-15 11:50:00', 'sensitive_data', 'UPDATE sensitive_data SET data_value = 'updated value' WHERE data_id = 3');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 107, '2022-01-16 13:40:00', 'sensitive_data', 'DELETE FROM sensitive_data WHERE data_id = 4');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 108, '2022-01-17 15:25:00', 'sensitive_data', 'INSERT INTO sensitive_data (data_name, data_type, data_value) VALUES ('Another New Data', 'sensitive', 'highly confidential');');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 109, '2022-01-18 14:10:00', 'sensitive_data', 'SELECT data_name, data_value FROM sensitive_data WHERE data_type = 'highly confidential';');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 110, '2022-01-19 08:55:00', 'sensitive_data', 'UPDATE sensitive_data SET data_value = 'modified value' WHERE data_id = 5');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 111, '2022-01-20 16:30:00', 'sensitive_data', 'DELETE FROM sensitive_data WHERE data_id = 6');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 112, '2022-01-21 11:20:00', 'sensitive_data', 'INSERT INTO sensitive_data (data_name, data_type, data_value) VALUES ('Data Entry', 'public', 'non-sensitive');');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 113, '2022-01-22 09:45:00', 'sensitive_data', 'SELECT data_name FROM sensitive_data WHERE data_type = 'public';');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 114, '2022-01-23 08:35:00', 'sensitive_data', 'UPDATE sensitive_data SET data_value = 'revised value' WHERE data_id = 7');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 115, '2022-01-24 17:10:00', 'sensitive_data', 'DELETE FROM sensitive_data WHERE data_id = 8');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 116, '2022-01-25 09:20:00', 'sensitive_data', 'INSERT INTO sensitive_data (data_name, data_type, data_value) VALUES ('New Record', 'internal', 'confidential');');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 117, '2022-01-26 15:55:00', 'sensitive_data', 'SELECT data_name, data_value FROM sensitive_data WHERE data_type = 'confidential';');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 118, '2022-01-27 10:40:00', 'sensitive_data', 'UPDATE sensitive_data SET data_value = 'modified value' WHERE data_id = 9');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 119, '2022-01-28 13:15:00', 'sensitive_data', 'DELETE FROM sensitive_data WHERE data_id = 10');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_access_logs (\n  log_id SERIAL PRIMARY KEY,\n  user_id INT,\n  access_timestamp TIMESTAMP,\n  accessed_table VARCHAR(50),\n  query TEXT\n);\n\nCREATE TABLE sensitive_data (\n  data_id SERIAL PRIMARY KEY,\n  data_name VARCHAR(50),\n  data_type VARCHAR(50),\n  data_value TEXT,\n  access_count INT\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_access_logs (log_id, user_id, access_timestamp, accessed_table, query) VALUES (DEFAULT, 120, '2022-01-29 12:05:00', 'sensitive_data', 'INSERT INTO sensitive_data (data_name, data_type, data_value) VALUES ('Data Entry', 'public', 'non-sensitive');');",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (1, 101, 'data1', '2022-01-01 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (2, 102, 'data2', '2022-01-02 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (3, 103, 'data3', '2022-01-03 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (4, 104, 'data4', '2022-01-04 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (5, 105, 'data5', '2022-01-05 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (6, 106, 'data6', '2022-01-06 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (7, 107, 'data7', '2022-01-07 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (8, 108, 'data8', '2022-01-08 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (9, 109, 'data9', '2022-01-09 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (10, 110, 'data10', '2022-01-10 12:00:00') ON CONFLICT (id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (101, 'user1', 'pass1', '2022-01-01 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (102, 'user2', 'pass2', '2022-01-02 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (103, 'user3', 'pass3', '2022-01-03 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (104, 'user4', 'pass4', '2022-01-04 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (105, 'user5', 'pass5', '2022-01-05 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (106, 'user6', 'pass6', '2022-01-06 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (107, 'user7', 'pass7', '2022-01-07 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (108, 'user8', 'pass8', '2022-01-08 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (109, 'user9', 'pass9', '2022-01-09 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO user_credentials (user_id, username, password, last_login) VALUES (110, 'user10', 'pass10', '2022-01-10 12:00:00') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, last_login = EXCLUDED.last_login;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (1, 101, 'data_type1', 1) ON CONFLICT (access_id) DO UPDATE SET user_id = EXCLUDED.user_id, data_type = EXCLUDED.data_type, access_level = EXCLUDED.access_level;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (2, 102, 'data_type2', 2) ON CONFLICT (access_id) DO UPDATE SET user_id = EXCLUDED.user_id, data_type = EXCLUDED.data_type, access_level = EXCLUDED.access_level;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (3, 103, 'data_type3', 3) ON CONFLICT (access_id) DO UPDATE SET user_id = EXCLUDED.user_id, data_type = EXCLUDED.data_type, access_level = EXCLUDED.access_level;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (4, 104, 'data_type4', 4) ON CONFLICT (access_id) DO UPDATE SET user_id = EXCLUDED.user_id, data_type = EXCLUDED.data_type, access_level = EXCLUDED.access_level;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nUPSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (5, 105, 'data_type5', 5) ON CONFLICT (access_id) DO UPDATE SET user_id = EXCLUDED.user_id, data_type = EXCLUDED.data_type, access_level = EXCLUDED.access_level;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (1, 1001, 'Medical Records', '2021-10-01 10:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Medical Records Updated', timestamp = '2021-10-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1001, 'john_doe', 'password123', '2021-10-01 09:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'john_smith', password = 'updated_password', last_login = '2021-10-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (1, 1001, 'Medical Records', 3) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Financial Records', access_level = 2;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (2, 1002, 'Financial Records', '2021-10-02 11:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Financial Records Updated', timestamp = '2021-10-02 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1002, 'jane_doe', 'password456', '2021-10-02 08:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'jane_smith', password = 'updated_password', last_login = '2021-10-02 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (2, 1002, 'Financial Records', 4) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Medical Records', access_level = 3;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (3, 1003, 'Personal Information', '2021-10-03 09:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Personal Information Updated', timestamp = '2021-10-03 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1003, 'alice_doe', 'password789', '2021-10-03 07:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'alice_smith', password = 'updated_password', last_login = '2021-10-03 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (3, 1003, 'Personal Information', 2) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Financial Records', access_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (4, 1004, 'Financial Records', '2021-10-04 12:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Financial Records Updated', timestamp = '2021-10-04 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1004, 'bob_doe', 'passwordabc', '2021-10-04 11:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'bob_smith', password = 'updated_password', last_login = '2021-10-04 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (4, 1004, 'Financial Records', 4) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Medical Records', access_level = 3;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (5, 1005, 'Medical Records', '2021-10-05 10:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Medical Records Updated', timestamp = '2021-10-05 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1005, 'sarah_doe', 'passworddef', '2021-10-05 09:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'sarah_smith', password = 'updated_password', last_login = '2021-10-05 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (5, 1005, 'Medical Records', 3) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Financial Records', access_level = 2;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (6, 1006, 'Financial Records', '2021-10-06 11:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Financial Records Updated', timestamp = '2021-10-06 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1006, 'michael_doe', 'passwordeg', '2021-10-06 08:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'michael_smith', password = 'updated_password', last_login = '2021-10-06 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (6, 1006, 'Financial Records', 4) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Medical Records', access_level = 3;",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO sensitive_data_access_log (id, user_id, accessed_data, timestamp) VALUES (7, 1007, 'Personal Information', '2021-10-07 09:00:00') ON CONFLICT (id) DO UPDATE SET accessed_data = 'Personal Information Updated', timestamp = '2021-10-07 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO user_credentials (user_id, username, password, last_login) VALUES (1007, 'emily_doe', 'passwordhij', '2021-10-07 07:00:00') ON CONFLICT (user_id) DO UPDATE SET username = 'emily_smith', password = 'updated_password', last_login = '2021-10-07 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE sensitive_data_access_log (\n  id INT PRIMARY KEY,\n  user_id INT,\n  accessed_data TEXT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE user_credentials (\n  user_id INT PRIMARY KEY,\n  username TEXT,\n  password TEXT,\n  last_login TIMESTAMP\n)\n\nCREATE TABLE access_permissions (\n  access_id INT PRIMARY KEY,\n  user_id INT,\n  data_type TEXT,\n  access_level INT\n)\n\n### STATEMENT\n\nINSERT INTO access_permissions (access_id, user_id, data_type, access_level) VALUES (7, 1007, 'Personal Information', 2) ON CONFLICT (access_id) DO UPDATE SET data_type = 'Financial Records', access_level = 1;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (1, 101, 'Data 1', '2022-01-01 10:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 1', access_time='2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (2, 102, 'Data 2', '2022-01-02 11:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 2', access_time='2022-01-02 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (3, 103, 'Data 3', '2022-01-03 12:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 3', access_time='2022-01-03 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (4, 104, 'Data 4', '2022-01-04 13:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 4', access_time='2022-01-04 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (5, 105, 'Data 5', '2022-01-05 14:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 5', access_time='2022-01-05 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (6, 106, 'Data 6', '2022-01-06 15:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 6', access_time='2022-01-06 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (7, 107, 'Data 7', '2022-01-07 16:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 7', access_time='2022-01-07 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (8, 108, 'Data 8', '2022-01-08 17:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 8', access_time='2022-01-08 17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (9, 109, 'Data 9', '2022-01-09 18:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 9', access_time='2022-01-09 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (10, 110, 'Data 10', '2022-01-10 19:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 10', access_time='2022-01-10 19:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (11, 111, 'Data 11', '2022-01-11 20:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 11', access_time='2022-01-11 20:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (12, 112, 'Data 12', '2022-01-12 21:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 12', access_time='2022-01-12 21:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (13, 113, 'Data 13', '2022-01-13 22:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 13', access_time='2022-01-13 22:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (14, 114, 'Data 14', '2022-01-14 23:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 14', access_time='2022-01-14 23:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (15, 115, 'Data 15', '2022-01-15 00:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 15', access_time='2022-01-15 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (16, 116, 'Data 16', '2022-01-16 01:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 16', access_time='2022-01-16 01:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (17, 117, 'Data 17', '2022-01-17 02:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 17', access_time='2022-01-17 02:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (18, 118, 'Data 18', '2022-01-18 03:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 18', access_time='2022-01-18 03:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (19, 119, 'Data 19', '2022-01-19 04:00:00', 'Read') ON DUPLICATE KEY UPDATE accessed_data='Data 19', access_time='2022-01-19 04:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (20, 120, 'Data 20', '2022-01-20 05:00:00', 'Write') ON DUPLICATE KEY UPDATE accessed_data='Data 20', access_time='2022-01-20 05:00:00';",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (1, 101, 'Data1', '2022-01-01 09:00:00', 'read') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_data = excluded.accessed_data, access_time = excluded.access_time, access_type = excluded.access_type;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (2, 102, 'Data2', '2022-01-02 10:00:00', 'write') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_data = excluded.accessed_data, access_time = excluded.access_time, access_type = excluded.access_type;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, email) VALUES (1, 'user1', 'pwd1', 'user1@example.com') ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, email) VALUES (2, 'user2', 'pwd2', 'user2@example.com') ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_data (id, data_blob, data_owner, access_level) VALUES (1, 'SensitiveData1', 101, 'high') ON CONFLICT (id) DO UPDATE SET data_blob = excluded.data_blob, data_owner = excluded.data_owner, access_level = excluded.access_level;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_data (id, data_blob, data_owner, access_level) VALUES (2, 'SensitiveData2', 102, 'low') ON CONFLICT (id) DO UPDATE SET data_blob = excluded.data_blob, data_owner = excluded.data_owner, access_level = excluded.access_level;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_tracking (id, user_id, accessed_table, access_time, access_result) VALUES (1, 101, 'access_logs', '2022-01-01 09:05:00', 'success') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_table = excluded.accessed_table, access_time = excluded.access_time, access_result = excluded.access_result;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_tracking (id, user_id, accessed_table, access_time, access_result) VALUES (2, 102, 'users', '2022-01-02 10:05:00', 'failure') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_table = excluded.accessed_table, access_time = excluded.access_time, access_result = excluded.access_result;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (3, 103, 'Data3', '2022-01-03 11:00:00', 'read') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_data = excluded.accessed_data, access_time = excluded.access_time, access_type = excluded.access_type;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, email) VALUES (3, 'user3', 'pwd3', 'user3@example.com') ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_data (id, data_blob, data_owner, access_level) VALUES (3, 'SensitiveData3', 103, 'medium') ON CONFLICT (id) DO UPDATE SET data_blob = excluded.data_blob, data_owner = excluded.data_owner, access_level = excluded.access_level;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_tracking (id, user_id, accessed_table, access_time, access_result) VALUES (3, 103, 'sensitive_data', '2022-01-03 11:05:00', 'success') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_table = excluded.accessed_table, access_time = excluded.access_time, access_result = excluded.access_result;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (4, 104, 'Data4', '2022-01-04 12:00:00', 'write') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_data = excluded.accessed_data, access_time = excluded.access_time, access_type = excluded.access_type;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, email) VALUES (4, 'user4', 'pwd4', 'user4@example.com') ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_data (id, data_blob, data_owner, access_level) VALUES (4, 'SensitiveData4', 104, 'low') ON CONFLICT (id) DO UPDATE SET data_blob = excluded.data_blob, data_owner = excluded.data_owner, access_level = excluded.access_level;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_tracking (id, user_id, accessed_table, access_time, access_result) VALUES (4, 104, 'users', '2022-01-04 12:05:00', 'failure') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_table = excluded.accessed_table, access_time = excluded.access_time, access_result = excluded.access_result;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_logs (id, user_id, accessed_data, access_time, access_type) VALUES (5, 105, 'Data5', '2022-01-05 13:00:00', 'read') ON CONFLICT (id) DO UPDATE SET user_id = excluded.user_id, accessed_data = excluded.accessed_data, access_time = excluded.access_time, access_type = excluded.access_type;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO users (id, username, password, email) VALUES (5, 'user5', 'pwd5', 'user5@example.com') ON CONFLICT (id) DO UPDATE SET username = excluded.username, password = excluded.password, email = excluded.email;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO sensitive_data (id, data_blob, data_owner, access_level) VALUES (5, 'SensitiveData5', 105, 'high') ON CONFLICT (id) DO UPDATE SET data_blob = excluded.data_blob, data_owner = excluded.data_owner, access_level = excluded.access_level;",
  "### TABLEDATA\n\nCREATE TABLE access_logs (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_data VARCHAR(255),\n    access_time TIMESTAMP,\n    access_type VARCHAR(50)\n);\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE,\n    password VARCHAR(100),\n    email VARCHAR(100)\n);\n\nCREATE TABLE sensitive_data (\n    id INT PRIMARY KEY,\n    data_blob TEXT,\n    data_owner INT,\n    access_level VARCHAR(20)\n);\n\nCREATE TABLE access_tracking (\n    id INT PRIMARY KEY,\n    user_id INT,\n    accessed_table VARCHAR(50),\n    access_time TIMESTAMP,\n    access_result VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO access_tracking (id, user_id, accessed_table, access_time, access_result) VALUES (5, 105, 'sensitive_data', '2022-01-05 13:05:00', 'success');",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (1, 101, '2022-07-01 08:30:00', 'Data1') ON CONFLICT (log_id) DO UPDATE SET user_id = EXCLUDED.user_id, access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (101, 'user101', 'password101', 'user101@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (1, 'Source1', 'Type1') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (1, 101, 'Data1', '2022-07-01 08:30:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (1, 'Role1') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (2, 102, '2022-07-02 08:30:00', 'Data2') ON CONFLICT (log_id) DO UPDATE SET user_id = EXCLUDED.user_id, access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (102, 'user102', 'password102', 'user102@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (2, 'Source2', 'Type2') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (2, 102, 'Data2', '2022-07-02 08:30:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (2, 'Role2') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (3, 103, '2022-07-03 08:30:00', 'Data3') ON CONFLICT (log_id) DO UPDATE SET user_id = EXCLUDED.user_id, access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (103, 'user103', 'password103', 'user103@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (3, 'Source3', 'Type3') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (3, 103, 'Data3', '2022-07-03 08:30:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (3, 'Role3') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (4, 104, '2022-07-04 08:30:00', 'Data4') ON CONFLICT (log_id) DO UPDATE SET user_id = EXCLUDED.user_id, access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (104, 'user104', 'password101', 'user104@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (4, 'Source4', 'Type4') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (4, 104, 'Data4', '2022-07-04 08:30:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (4, 'Role4') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (1, 101, '2023-11-10 10:30:00', 'Data 1') ON CONFLICT (log_id) DO UPDATE SET access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (101, 'user1', 'password1', 'user1@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (1, 'Source 1', 'Type A') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (1, 101, 'Data 1', '2023-11-10 10:30:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (1, 'Admin') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (2, 102, '2023-11-10 11:00:00', 'Data 2') ON CONFLICT (log_id) DO UPDATE SET access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (102, 'user2', 'password2', 'user2@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (2, 'Source 2', 'Type B') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (2, 102, 'Data 2', '2023-11-10 11:00:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (2, 'User') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (3, 103, '2023-11-10 12:30:00', 'Data 3') ON CONFLICT (log_id) DO UPDATE SET access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (103, 'user3', 'password3', 'user3@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (3, 'Source 3', 'Type C') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (3, 103, 'Data 3', '2023-11-10 12:30:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (3, 'Guest') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (4, 104, '2023-11-10 13:00:00', 'Data 4') ON CONFLICT (log_id) DO UPDATE SET access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, password, email) VALUES (104, 'user4', 'password4', 'user4@example.com') ON CONFLICT (user_id) DO UPDATE SET username = EXCLUDED.username, password = EXCLUDED.password, email = EXCLUDED.email;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO DataSources (source_id, source_name, source_type) VALUES (4, 'Source 4', 'Type D') ON CONFLICT (source_id) DO UPDATE SET source_name = EXCLUDED.source_name, source_type = EXCLUDED.source_type;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessHistory (history_id, user_id, accessed_data, access_time) VALUES (4, 104, 'Data 4', '2023-11-10 13:00:00') ON CONFLICT (history_id) DO UPDATE SET user_id = EXCLUDED.user_id, accessed_data = EXCLUDED.accessed_data, access_time = EXCLUDED.access_time;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO UserRoles (role_id, role_name) VALUES (4, 'Developer') ON CONFLICT (role_id) DO UPDATE SET role_name = EXCLUDED.role_name;",
  "### TABLEDATA\n\nCREATE TABLE AccessLogs (\n    log_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    access_time TIMESTAMP NOT NULL,\n    accessed_data TEXT NOT NULL\n)\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE DataSources (\n    source_id INT PRIMARY KEY,\n    source_name VARCHAR(50) NOT NULL,\n    source_type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE AccessHistory (\n    history_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    accessed_data TEXT NOT NULL,\n    access_time TIMESTAMP NOT NULL\n)\n\nCREATE TABLE UserRoles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nINSERT INTO AccessLogs (log_id, user_id, access_time, accessed_data) VALUES (5, 105, '2023-11-10 14:30:00', 'Data 5') ON CONFLICT (log_id) DO UPDATE SET access_time = EXCLUDED.access_time, accessed_data = EXCLUDED.accessed_data;"
]