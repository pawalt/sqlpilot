[
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('1f3a4d77-a9d1-4a7f-b24d-ba81845ef90a', E'\\x1234567890abcdef');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('2f4e2c1b-49c3-4a62-8b31-abf813a8e552', E'\\xabcdef1234567890');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('5432cd8f-3cf7-4ed2-aa6d-9f2b47e88c9b', E'\\x0405060708090a0b0c0d0e0f');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('bbf9aaed-e1fc-4906-98b6-0bc8551ee64c', E'\\x6ffbf39a7eab93f6883591ce');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('8a4d44c8-1a1b-4ef3-9b10-33f72c8cb0f1', E'\\x1a1b1c1d1e1f2021222324');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('710f15fa-a599-4b0f-b8a5-4b8af9e94667', E'\\x43565768696a6b6c6d6e6f70');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('9a32c88e-9744-4288-af71-2cd86657c9d5', E'\\x7166273646000000');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('e1fd9407-51f9-412b-b5df-cabfedee20e1', E'\\x000000000000000000000001');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('22ca7057-677f-4d5e-8313-15ecdbc9037d', E'\\x72f2a3706ae95538402f7e04');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('6e389f2e-d8cf-4deb-84ff-3a9fd8a0a5a2', E'\\x7bf5952d6a7a4e2c995e52b5f');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('0b4af1f4-f497-46c1-914a-8683529a32ed', E'\\x5a2b3c4d5e6f708292822349');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('1be6e372-b8a4-44c7-8a41-448df7fcb5d2', E'\\x536475869db1a9febf69484c');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('296e5209-b552-4c7d-9979-19d5a0a6a81e', E'\\x929ea8f8f3f6f5d89ff5f5ff');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('ebd6fbff-49fd-41af-868e-0de959f5a181', E'\\x26364657395969789799a9b');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('6799d601-6e43-4602-8ae8-0ae0612292e0', E'\\x6a6b6c6d8d8f8e920224does');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('164f1f8f-0130-419c-b74d-4b88a367cce4', E'\\x696a6b6f6d6e70727374qqq');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('041a8961-3f3e-4df4-9321-49a634abef53', E'\\x2b5c4d6e1f2837465758595a');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('f0efb3f0-ad9a-4482-9d4d-c19becf8ce53', E'\\xf0f1f2f3f4f6f7f8f9fadebe');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('2e1004af-033c-478a-bf3a-d4b2946ed6a3', E'\\x1234567890abcdef1234567890abcdef');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('bb81ba9c-e5de-42e5-a86a-6c5d01e58d9f', E'\\xabcdef1234567890abcdef1234567890');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('6bfa8d56-0276-4d55-9be0-9035fe7d474e', '\\x4A614E515843546A5979357456384B5764524B484B772F6F306E503562744D79486B4C666B62384F5849354E')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('a8026c57-8a19-4b46-99a7-ace8a0369d41', '\\x2B7269446D36544C2F484D596F684D566D784853484D5551353967673D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('f6cced4a-0228-4970-a22e-8f5980475744', '\\x38635332423650486C483962497A526D6B4366576246537650335869363D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('1e9be2f3-632b-4094-b598-2ea2c03cf81f', '\\x6848576A4C305A775449494A724A4539597943774D6955386D6C486D3D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('d753c27e-39b6-4d12-a465-9722a68f5710', '\\x65414B2F38542B3461314F672F74342B5532662B677858734245643D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('9caddcf9-0845-4fbf-a182-47fd54baf4bb', '\\x744A4E65446D66544672676C38457A5170345376727A5058574A37753D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('7ea86921-8f44-4dde-9de9-826f4656a365', '\\x37535A617A2B4F6D49674E3737795765314A6D2F5259412F764639543D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('0f364499-e043-48cc-bb70-fdfa2b67adbe', '\\x734D7A3648536266503274676930766E6D6B5772574F46516B457A3D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('03631c54-120b-4219-a258-02337d91d8ad', '\\x663772674D3057357A63395578494B375A6A2F582B514C487649473D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('c7d4ca34-5e2c-4444-8d54-88fd2f71422b', '\\x747544594A5A366F59634B6776584436614B536C2F695536776F613D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('b5e4d88d-16f0-447a-a00d-1e105fa36d77', '\\x597663314C5172664C4A6244304C7A486A3535564B576B43675266453D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('3bb2bcf4-80ea-4d8d-a957-39d53b3c1f59', '\\x7933757145314C41557A45304C4A53636E466D785A734B4D6B4D663D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('d7f94915-9174-4dcb-80bf-4da0e986c7bd', '\\x4A794A38736F4A4647716F576C7858514E7738565066346A4B73773D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('a7b07438-526d-4d8f-990d-b3635c3537ea', '\\x3935507A7741566B444543366C33655A687A6F55725341666D30633D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('b073a8cb-3f51-4b56-9b41-76529ea05ff8', '\\x584B4F7076502F2B4D6B7156384D6558746D564C5366596D6857773D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('df7ff935-8d87-4530-9275-ce6c4f2edf5b', '\\x2B58446B487A4247365551694E79744D6E6369454F2F4A4170624A3D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('e34a9c49-81e0-4c85-b861-ecb9f6514cc2', '\\x525A7267676234544E6B6845714A75456F363332556F4C4A7A79513D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('13fffdf6-b1f3-4720-bb1c-d10e6802d331', '\\x547A486874514B765569756B6F594E414B562F6B785236305A5A363D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('7d45e753-f6c3-4b08-adae-8c64d8a71724', '\\x71754874694C506B2B4E507379396334465842446C7A55685577523D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    key_id UUID PRIMARY KEY,\n    key_value BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_id, key_value) VALUES ('b6e01329-781b-4bb5-8176-d89c23113c95', '\\x5048513079762F55336A7253377472454B73786B67664C39444A673D')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (1, 'key1', '9a8c2b7e');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (2, 'key2', '3e1f6a4b');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (3, 'key3', '6d5b8d2f');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (4, 'key4', '2c4e9d1a');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (5, 'key5', '8b3d1a7c');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (1, 'Message 1', '2022-01-15 13:30:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (2, 'Message 2', '2022-01-16 10:45:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (3, 'Message 3', '2022-01-17 09:20:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (4, 'Message 4', '2022-01-18 15:10:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (5, 'Message 5', '2022-01-19 11:05:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (6, 'key6', '4a1b3c6e');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryp...",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (1, 'key1', 'encryption_key1');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (2, 'key2', 'encryption_key2');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (3, 'key3', 'encryption_key3');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (4, 'key4', 'encryption_key4');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (5, 'key5', 'encryption_key5');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (6, 'key6', 'encryption_key6');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (7, 'key7', 'encryption_key7');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, encryption_key) VALUES (8, 'key8', 'encryption_key8');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (1, 'message1', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (2, 'message2', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (3, 'message3', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (4, 'message4', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (5, 'message5', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (6, 'message6', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (7, 'message7', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (8, 'message8', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (9, 'message9', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (10, 'message10', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys ( id INT PRIMARY KEY, key_name VARCHAR(50), encryption_key VARCHAR(100) );\n\nCREATE TABLE communication_logs ( log_id INT PRIMARY KEY, message TEXT, timestamp TIMESTAMP );\n\n### STATEMENT\n\nINSERT INTO communication_logs (log_id, message, timestamp) VALUES (11, 'message11', CURRENT_TIMESTAMP);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (1, 'key1', 'value1');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (2, 'key2', 'value2');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (3, 'key3', 'value3');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (4, 'key4', 'value4');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (5, 'key5', 'value5');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (6, 'key6', 'value6');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (7, 'key7', 'value7');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (8, 'key8', 'value8');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (9, 'key9', 'value9');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (10, 'key10', 'value10');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (11, 'key11', 'value11');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (12, 'key12', 'value12');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (13, 'key13', 'value13');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (14, 'key14', 'value14');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (15, 'key15', 'value15');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (16, 'key16', 'value16');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (17, 'key17', 'value17');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (18, 'key18', 'value18');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (19, 'key19', 'value19');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (20, 'key20', 'value20');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (1, 'key1', 'value1')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (2, 'key2', 'value2')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (3, 'key3', 'value3')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (4, 'key4', 'value4')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (5, 'key5', 'value5')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (6, 'key6', 'value6')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (7, 'key7', 'value7')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (8, 'key8', 'value8')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (9, 'key9', 'value9')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (10, 'key10', 'value10')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (11, 'key11', 'value11')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (12, 'key12', 'value12')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (13, 'key13', 'value13')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (14, 'key14', 'value14')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (15, 'key15', 'value15')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (16, 'key16', 'value16')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (17, 'key17', 'value17')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (18, 'key18', 'value18')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (19, 'key19', 'value19')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id INT PRIMARY KEY,\n  key_name TEXT,\n  key_value TEXT\n)\n\n### STATEMENT\n\nINSERT INTO encryption_keys (id, key_name, key_value) VALUES (20, 'key20', 'value20')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key1', '0110100101010101'::bytea);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key2', '1100110011001100'::bytea);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key3', '1010101010110101'::bytea);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key4', '1111000011110000'::bytea);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key5', '0000111100001111'::bytea);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash, encryption_key_id) VALUES ('user1', '010101010101010101010101'::bytea, 1);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash, encryption_key_id) VALUES ('user2', '101010101010101010101010'::bytea, 2);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash, encryption_key_id) VALUES ('user3', '111100001111000011110000'::bytea, 3);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash, encryption_key_id) VALUES ('user4', '000011110000111100001111'::bytea, 4);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash, encryption_key_id) VALUES ('user5', '110011001100110011001100'::bytea, 5);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO messages (sender_id, receiver_id, message_text, encryption_key_id) VALUES (1, 2, 'Hello user2', 1);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO messages (sender_id, receiver_id, message_text, encryption_key_id) VALUES (2, 3, 'Hi user3', 2);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO messages (sender_id, receiver_id, message_text, encryption_key_id) VALUES (3, 4, 'Hey user4', 3);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO messages (sender_id, receiver_id, message_text, encryption_key_id) VALUES (4, 5, 'Greetings user5', 4);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO messages (sender_id, receiver_id, message_text, encryption_key_id) VALUES (5, 1, 'Good afternoon user1', 5);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_message, timestamp) VALUES ('Log message 1', '2022-01-01 10:00:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_message, timestamp) VALUES ('Log message 2', '2022-01-02 12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_message, timestamp) VALUES ('Log message 3', '2022-01-03 14:00:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_message, timestamp) VALUES ('Log message 4', '2022-01-04 16:00:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO logs (log_message, timestamp) VALUES ('Log message 5', '2022-01-05 18:00:00');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key1', '\\x6e5c2a1b840bdf2e1fd1d3cdb8ff193b'), ('key2', '\\x8fa2c40f072e9d96616132f853080701'), ('key3', '\\xbf1b4c3e465d2a60ea3df70a4afc2bb0'), ('key4', '\\x17549760b023f7b26b2562c9e14c49ee'), ('key5', '\\xaaa4f674ccc9d9f81948cea7919c888a'), ('key6', '\\xfed1908448fe6c4577d754e33ec175c2'), ('key7', '\\x9efe9ba93e8ffda0a9054cfaaddc40d5'), ('key8', '\\xff3e92c166b3d17a319f1f860db9a135'), ('key9', '\\xb55d99b0e1fdc7d9458bd78d6ac785be'), ('key10', '\\xb36a35a68e7ba7f4a9b38e58a7bb85f6'), ('key11', '\\x1e5c110bfb5e41f2cfbf75bbf885e807'), ('key12', '\\xdf4180f8780cccafc7e712286d15dbfd'), ('key13', '\\x8c13ae74777cf725a8d9393e1a1f9736'), ('key14', '\\xac0af7f2064fc90e8d17a5fc5fe89411'), ('key15', '\\xd6b9e199b965b60da73a3bfccd83812b'), ('key16', '\\xa65c86a3eb64444b28f315e8a107d269'), ('key17', '\\xa946c40c8907f9b2d41ffc649c6236cc'), ('key18', '\\x48b5716cc5bf95e923e2b1348853b072'), ('key19', '\\xad97aa43fee93a2a36743a654c847537'), ('key20', '\\xe1cb1f7e771dfd6e0c6842bf025969c7')",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n  id SERIAL PRIMARY KEY,\n  key_name VARCHAR(255) NOT NULL,\n  key_value BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n  user_id SERIAL PRIMARY KEY,\n  username VARCHAR(100) NOT NULL,\n  password_hash BYTEA NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE messages (\n  message_id SERIAL PRIMARY KEY,\n  sender_id INT NOT NULL,\n  receiver_id INT NOT NULL,\n  message_text TEXT NOT NULL,\n  encryption_key_id INT NOT NULL,\n  FOREIGN KEY (sender_id) REFERENCES users(user_id),\n  FOREIGN KEY (receiver_id) REFERENCES users(user_id),\n  FOREIGN KEY (encryption_key_id) REFERENCES encryption_keys(id)\n);\n\n\nCREATE TABLE logs (\n  log_id SERIAL PRIMARY KEY,\n  log_message TEXT NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash, encryption_key_id) VALUES ('user1', '\\x3492a6e36dd05f6e2369a89732f1fd78', 1), ('user2', '\\x4faf92c4a36f720d436ecf8ef9ccc851', 2), ('user3', '\\x8fd9ea46cc5875bde3c1564e5c7ede20', 3), ('user4', '\\x4b12dece94641e5613a5e94d485701b3', 4), ('user5', '\\xc1ba9e840de71420f77a2e6c1b03e2d4', 5), ('user6', '\\xc2337a5c69de4e359d4635de907db7cc', 6), ('user7', '\\x99b008cdeba5482b7d3287d5b773fcef', 7), ('user8', '\\xe418f9335e8e91cddfd7e4525ff3438e', 8), ('user9', '\\xdebad692cc62c7e1bb367b2b4ced4384', 9), ('user10', '\\x1cb2e82b28805a59fed1b5df9abec738', 10), ('user11', '\\x9e6ae...",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key1', E'\\\\x0123456789ABCDEF');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key2', E'\\\\xABCDEF0123456789');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('key3', E'\\\\x9876543210ABCDEF');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user1', 'hashedpassword1');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user2', 'hashedpassword2');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user3', 'hashedpassword3');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (1, 2, 'Hello User2', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (2, 1, 'Hello User1', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (3, 1, 'Hello User1', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (1, 'Log from communication 1');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (2, 'Log from communication 2');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (3, 'Log from communication 3');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_metadata (key_id, encryption_type, encryption_details) VALUES (1, 'type1', '{\"details\":\"encryption1\"}');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_metadata (key_id, encryption_type, encryption_details) VALUES (2, 'type2', '{\"details\":\"encryption2\"}');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_metadata (key_id, encryption_type, encryption_details) VALUES (3, 'type3', '{\"details\":\"encryption3\"}');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('Key1', E'\\x0123456789ABCDEF');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('Key2', E'\\x0A0B0C0D0E0F');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('Key3', E'\\x0F0E0D0C0B0A');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_keys (key_name, key_value) VALUES ('Key4', E'\\x1122334455667788');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user1', 'hash1');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user2', 'hash2');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user3', 'hash3');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO users (username, password_hash) VALUES ('user4', 'hash4');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (1, 2, 'Hello!', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (2, 1, 'Hi!', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (3, 4, 'Greetings!', FALSE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communications (sender_id, receiver_id, message, encrypted) VALUES (4, 3, 'Salutations!', TRUE);",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (1, 'Log 1');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (2, 'Log 2');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (3, 'Log 3');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO communication_logs (communication_id, log_text) VALUES (4, 'Log 4');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_metadata (key_id, encryption_type, encryption_details) VALUES (1, 'AES-256', '{\"mode\": \"CBC\"}');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_metadata (key_id, encryption_type, encryption_details) VALUES (2, 'RSA', '{\"key_size\": 2048}');",
  "### TABLEDATA\n\nCREATE TABLE encryption_keys (\n    id SERIAL PRIMARY KEY,\n    key_name TEXT NOT NULL,\n    key_value BYTEA NOT NULL,\n    created_at TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE communications (\n    communication_id SERIAL PRIMARY KEY,\n    sender_id INT REFERENCES users(user_id),\n    receiver_id INT REFERENCES users(user_id),\n    message TEXT NOT NULL,\n    encrypted BOOLEAN DEFAULT FALSE\n);\n\nCREATE TABLE communication_logs (\n    log_id SERIAL PRIMARY KEY,\n    communication_id INT REFERENCES communications(communication_id),\n    log_text TEXT NOT NULL,\n    log_timestamp TIMESTAMP NOT NULL DEFAULT NOW()\n);\n\nCREATE TABLE encryption_metadata (\n    metadata_id SERIAL PRIMARY KEY,\n    key_id INT REFERENCES encryption_keys(id),\n    encryption_type TEXT NOT NULL,\n    encryption_details JSONB\n);\n\n### STATEMENT\n\nINSERT INTO encryption_metadata (key_id, encryption_type, encryption_details) VALUES (3, 'AES-128', '{\"mode\": \"ECB\"}');"
]