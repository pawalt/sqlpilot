<t>CREATE TABLE security_table (id INT PRIMARY KEY, username TEXT NOT NULL, password TEXT NOT NULL)</t><stat>TRUNCATE TABLE security_table;</stat><divider><t>CREATE TABLE security_table (id INT PRIMARY KEY, username TEXT NOT NULL, password TEXT NOT NULL)</t><stat>truncate table security_table;</stat><divider><t>CREATE TABLE security_table (id INT PRIMARY KEY, username TEXT NOT NULL, password TEXT NOT NULL)</t><stat>TRUNCATE TABLE security_table CASCADE;</stat><divider><t>CREATE TABLE security_table (id INT PRIMARY KEY, username TEXT NOT NULL, password TEXT NOT NULL)</t><stat>truncate table security_table cascade;</stat><divider><t>CREATE TABLE security_table (id INT PRIMARY KEY, username TEXT NOT NULL, password TEXT NOT NULL)</t><stat>TRUNCATE TABLE security_table RESTART IDENTITY;</stat><divider><t>CREATE TABLE security_table (id INT PRIMARY KEY, username TEXT NOT NULL, password TEXT NOT NULL)</t><stat>truncate table security_table restart identity;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users;</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions;</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users, permissions;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users, permissions;</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users, permissions;</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users, permissions;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE users</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table users</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE roles</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table roles</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>TRUNCATE TABLE permissions</stat><divider><t>CREATE TABLE user_roles (id INT, role_id INT, FOREIGN KEY (id) REFERENCES users (id), FOREIGN KEY (role_id) REFERENCES roles (role_id))

CREATE TABLE permissions (permission_id INT PRIMARY KEY, permission_name VARCHAR(50) NOT NULL)

CREATE TABLE roles (role_id INT PRIMARY KEY, role_name VARCHAR(50) NOT NULL)

CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL)</t><stat>truncate table permissions</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table users;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table users;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table roles;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table roles;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);</t><stat>truncate table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>TRUNCATE table permissions;</stat><divider><t>CREATE TABLE role_permissions (
    role_id UUID,
    permission_id UUID,
    PRIMARY KEY (role_id, permission_id)
);

CREATE TABLE user_roles (
    user_id UUID,
    role_id UUID,
    PRIMARY KEY (user_id, role_id)
);

CREATE TABLE permissions (
    permission_id UUID PRIMARY KEY,
    permission_name STRING
);

CREATE TABLE roles (
    role_id UUID PRIMARY KEY,
    role_name STRING
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    username STRING,
    password STRING
);</t><stat>truncate table permissions;</stat>