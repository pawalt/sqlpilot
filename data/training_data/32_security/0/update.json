[
  "### TABLEDATA\n\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET password = 'new_password' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'new_email@example.com' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'jane_smith' WHERE email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET password = 'newpassword' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'jane_doe', email = 'jane_doe@example.com' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    expiration_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET username='john_doe' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    expiration_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash='hashed_password' WHERE username='jane_smith';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    expiration_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_sessions SET session_token='new_token' WHERE user_id=2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    expiration_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash='newpassword' WHERE user_id=123;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    expiration_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET username='newusername' WHERE user_id=456;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    session_token VARCHAR(255) NOT NULL,\n    expiration_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_sessions SET expiration_time='2022-12-31 23:59:59' WHERE session_id='123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL);\n\n\nCREATE TABLE user_tokens (token_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), token VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP);\n\n\nCREATE TABLE password_resets (reset_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), reset_code VARCHAR(10) NOT NULL, created_at TIMESTAMP);\n\n### STATEMENT\n\nUPDATE users SET password_hash='newpassword' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL);\n\n\nCREATE TABLE user_tokens (token_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), token VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP);\n\n\nCREATE TABLE password_resets (reset_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), reset_code VARCHAR(10) NOT NULL, created_at TIMESTAMP);\n\n### STATEMENT\n\nUPDATE user_tokens SET token='newtoken' WHERE token_id=2;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL);\n\n\nCREATE TABLE user_tokens (token_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), token VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP);\n\n\nCREATE TABLE password_resets (reset_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), reset_code VARCHAR(10) NOT NULL, created_at TIMESTAMP);\n\n### STATEMENT\n\nUPDATE password_resets SET reset_code='newcode' WHERE reset_id=3;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL);\n\n\nCREATE TABLE user_tokens (token_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), token VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP);\n\n\nCREATE TABLE password_resets (reset_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), reset_code VARCHAR(10) NOT NULL, created_at TIMESTAMP);\n\n### STATEMENT\n\nUPDATE users SET username='john_doe', password_hash='hashed_password' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL);\n\n\nCREATE TABLE user_tokens (token_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), token VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP);\n\n\nCREATE TABLE password_resets (reset_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), reset_code VARCHAR(10) NOT NULL, created_at TIMESTAMP);\n\n### STATEMENT\n\nUPDATE user_tokens SET token='token123' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL);\n\n\nCREATE TABLE user_tokens (token_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), token VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP);\n\n\nCREATE TABLE password_resets (reset_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id), reset_code VARCHAR(10) NOT NULL, created_at TIMESTAMP);\n\n### STATEMENT\n\nUPDATE password_resets SET reset_code='abc123' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash CHAR(64) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50) UNIQUE NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE users SET username='new_username' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash CHAR(64) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50) UNIQUE NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_name='admin' WHERE role_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash CHAR(64) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50) UNIQUE NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_accounts SET account_name='new_account_name' WHERE account_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash CHAR(64) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50) UNIQUE NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE users SET email='newemail@example.com' WHERE user_id=123;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash CHAR(64) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50) UNIQUE NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_name='Admin' WHERE role_id=5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password_hash CHAR(64) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) UNIQUE NOT NULL\n);\n\n\nCREATE TABLE user_accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50) UNIQUE NOT NULL,\n    user_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n\nCREATE TABLE user_sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_accounts SET user_id=456 WHERE account_id=789;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    login_time TIMESTAMP NOT NULL,\n    logout_time TIMESTAMP\n);\n\nCREATE TABLE tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    token_type VARCHAR(50) NOT NULL,\n    token_value VARCHAR(100) NOT NULL,\n    expiry_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    login_time TIMESTAMP NOT NULL,\n    logout_time TIMESTAMP\n);\n\nCREATE TABLE tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    token_type VARCHAR(50) NOT NULL,\n    token_value VARCHAR(100) NOT NULL,\n    expiry_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE roles SET role_name = 'new_role_name' WHERE role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    login_time TIMESTAMP NOT NULL,\n    logout_time TIMESTAMP\n);\n\nCREATE TABLE tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    token_type VARCHAR(50) NOT NULL,\n    token_value VARCHAR(100) NOT NULL,\n    expiry_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_id = 2 WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    login_time TIMESTAMP NOT NULL,\n    logout_time TIMESTAMP\n);\n\nCREATE TABLE tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    token_type VARCHAR(50) NOT NULL,\n    token_value VARCHAR(100) NOT NULL,\n    expiry_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash = 'newpassword' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    login_time TIMESTAMP NOT NULL,\n    logout_time TIMESTAMP\n);\n\nCREATE TABLE tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    token_type VARCHAR(50) NOT NULL,\n    token_value VARCHAR(100) NOT NULL,\n    expiry_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE roles SET role_name = 'Admin' WHERE role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash TEXT NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role_id INT NOT NULL,\n    PRIMARY KEY (user_id, role_id),\n    FOREIGN KEY (user_id) REFERENCES users(id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    login_time TIMESTAMP NOT NULL,\n    logout_time TIMESTAMP\n);\n\nCREATE TABLE tokens (\n    token_id UUID PRIMARY KEY,\n    user_id INT NOT NULL,\n    token_type VARCHAR(50) NOT NULL,\n    token_value VARCHAR(100) NOT NULL,\n    expiry_time TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_id = 2 WHERE user_id = 1;"
]