[
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'new_hash' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nUPDATE passwords SET username = 'new_username' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'another_hash', username = 'another_username' WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'newhash123' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'encrypted123' WHERE username = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'securepass345' WHERE id = 2 OR username = 'user1';",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'newhash' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET full_name = 'John Doe' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'johndoe@example.com' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = '\\x1543897F' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET full_name = 'John Doe', email = 'johndoe@example.com' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'newpassword123' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role = 'admin' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE passwords SET password_hash = 'newpassword123' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE user_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role = 'admin' WHERE user_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_name = 'admin' WHERE role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_credentials SET password_hash = 'new_password_hash' WHERE credential_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE users SET username = 'new_username' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_name = 'admin_role' WHERE role_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nUPDATE user_permissions SET permission_name = 'write_access' WHERE permission_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nUPDATE passwords SET password = 'newpassword' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nUPDATE users SET name = 'John Doe' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nUPDATE roles SET role_name = 'Admin' WHERE role_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nUPDATE passwords SET password = 'new_password123' WHERE username = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nUPDATE users SET email = 'new_email@example.com' WHERE name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nUPDATE user_roles SET role_id = 2 WHERE user_id = 1;"
]