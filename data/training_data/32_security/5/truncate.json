[
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords, users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_permissions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_roles;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE user_credentials;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE roles;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE passwords;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE users;",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE roles;"
]