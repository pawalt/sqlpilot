[
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (1, 'user1', 'hash1');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (2, 'user2', 'hash2');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (3, 'user3', 'hash3');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (4, 'user4', 'hash4');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (5, 'user5', 'hash5');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (6, 'user6', 'hash6');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (7, 'user7', 'hash7');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (8, 'user8', 'hash8');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (9, 'user9', 'hash9');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (10, 'user10', 'hash10');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (11, 'user11', 'hash11');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (12, 'user12', 'hash12');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (13, 'user13', 'hash13');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (14, 'user14', 'hash14');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (15, 'user15', 'hash15');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (16, 'user16', 'hash16');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (17, 'user17', 'hash17');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (18, 'user18', 'hash18');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (19, 'user19', 'hash19');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (20, 'user20', 'hash20');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (1, 'john_doe', '\\x68656c6c6f');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (2, 'jane_smith', '\\x776f726c64');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (3, 'alice_wonderland', '\\x696e776f6e646572');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (4, 'bob_marley', '\\x626f62736b79');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (5, 'eve_hacker', '\\x6861636b6572');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (6, 'charlie_brown', '\\x636861726c6965');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (7, 'sam_msith', '\\x73616d');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (8, 'mia_jones', '\\x6a6f6e6573');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (9, 'oliver_queen', '\\x6f6c69766572');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (10, 'sara_connor', '\\x636f6e6e6f72');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (11, 'peter_parker', '\\x7061726b6572');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (12, 'lucy_rogers', '\\x726f67657273');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (13, 'david_smith', '\\x736d697468');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (14, 'emily_jackson', '\\x6a61636b736f6e');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (15, 'mark_green', '\\x677265656e');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (16, 'sophia_baker', '\\x62616b6572');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (17, 'jacob_clark', '\\x636c61726b');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (18, 'grace_hill', '\\x68696c6c');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (19, 'ryan_murphy', '\\x6d7572706879');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(255),\n    password_hash BYTEA\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (20, 'amy_watson', '\\x776174736f6e');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (1, 'john_doe', 'hash123')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (2, 'jane_smith', 'hash456')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (3, 'alice_jones', 'hash789')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (4, 'bob_white', 'hash321')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (5, 'sarah_wilson', 'hash654')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (6, 'david_brown', 'hash987')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (7, 'laura_smith', 'hash234')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (8, 'michael_johnson', 'hash567')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (9, 'emma_davis', 'hash890')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (10, 'alexander_carter', 'hash112')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (11, 'olivia_king', 'hash334')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (12, 'william_lee', 'hash566')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (13, 'sophia_miller', 'hash788')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (14, 'ryan_clark', 'hash990')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (15, 'zoey_scott', 'hash1234')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (16, 'nathan_nelson', 'hash1456')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (17, 'victoria_hall', 'hash1678')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (18, 'adam_bell', 'hash1890')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (19, 'madison_gordon', 'hash2012')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (20, 'daniel_wright', 'hash2234')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (1, 'john_doe', 'e71e04b92b2bf322453f9f97089e0756'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (2, 'jane_smith', 'a4bd1b342563cf64be1c22b6c88c61ae'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (3, 'alice_wonderland', 'c383d30a59d24b8611c4288efa165ca2'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (4, 'bob_marley', '78f822abf327712eb47e61769f4d2e41'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (5, 'emily_jones', '99a64b9cff564378f566a02e87bf7ee1'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (6, 'david_smith', '47f76f03915c5cc218209cd1c047db8c'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (7, 'sophia_williams', '322d7533d8b83a2f12d49e3d8b5d20ab'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (8, 'oliver_davis', '5f7a8d1ebe10dd075e3d9c171f19157f'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (9, 'ava_miller', 'bd524f79abec85cde35bab97b7dd2bfe'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (10, 'logan_wilson', '07e6195d21b89ee39ae621d89363aaff'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (11, 'michael_jackson', 'ce1c9bfde90b905f23856480acefc34a'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (12, 'emma_thompson', '66b9a8499d3414410479acb1bf24a40f'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (13, 'jacob_louis', '32684c2a9644f8f2eafc5a39129e2c16'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (14, 'mia_johnson', '956c72ef9396188df3f170a77c63a72f'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (15, 'william_martin', 'cf18b8e408438a45234810bc5761529a'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (16, 'alexandra_brown', 'f9e7bdb11d69ab1f4d9549385f74fcdd'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (17, 'noah_anderson', 'c9d037e24bfc37cedbd92f1e840850cc'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (18, 'olivia_thomas', '8b82a37c5c81b5a2bb81e085b5bb0977'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (19, 'elijah_hernandez', '86c3526ac2412b8c9b50f6befc7be354'),",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash BYTEA NOT NULL\n);\n\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO passwords (user_id, username, password_hash) VALUES (20, 'isabella_lee', 'dba542a1348909b1e024039617942428')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (1, 'user1', 'hash1')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (2, 'user2', 'hash2')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (3, 'user3', 'hash3')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (4, 'user4', 'hash4')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (5, 'user5', 'hash5')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (6, 'user6', 'hash6')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (7, 'user7', 'hash7')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (8, 'user8', 'hash8')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (9, 'user9', 'hash9')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (10, 'user10', 'hash10')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (1, 'user1', 'user1@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (2, 'user2', 'user2@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (3, 'user3', 'user3@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (4, 'user4', 'user4@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (5, 'user5', 'user5@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (1, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (2, 'user')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (3, 'user')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (4, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role) VALUES (5, 'user')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (1, 'user1', 'password1_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (2, 'user2', 'password2_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (3, 'user3', 'password3_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (4, 'user4', 'password4_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (5, 'user5', 'password5_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (6, 'user6', 'password6_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (7, 'user7', 'password7_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (8, 'user8', 'password8_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (9, 'user9', 'password9_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (10, 'user10', 'password10_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (11, 'user11', 'password11_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (12, 'user12', 'password12_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (13, 'user13', 'password13_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (14, 'user14', 'password14_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (15, 'user15', 'password15_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (16, 'user16', 'password16_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (17, 'user17', 'password17_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (18, 'user18', 'password18_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (19, 'user19', 'password19_hash')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT NOT NULL,\n    role VARCHAR(20) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password_hash) VALUES (20, 'user20', 'password20_hash')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'jane_smith', 'securepass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'mike_jackson', 'safepassword')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'sarah_brown', 'pass1234')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'chris_green', 'passwordabc')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (6, 'emily_white', 'secure123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (7, 'alex_miller', 'passpass')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (8, 'samantha_taylor', 'password1')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (9, 'david_clark', 'abc123')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (10, 'lisa_adams', 'password2022')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (1, 'Admin')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (2, 'User')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (3, 'Manager')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (4, 'Guest')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (5, 'Supervisor')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (1, 'Read')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (2, 'Write')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (3, 'Delete')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (4, 'Execute')",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (1, 'john_doe', 'password123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (1, 'admin');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (1, 'read');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_credentials (credential_id, user_id, password_hash) VALUES (1, 1, 'hash123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (2, 'jane_smith', 'abc123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (2, 'user');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (2, 'write');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_credentials (credential_id, user_id, password_hash) VALUES (2, 2, 'hash456');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (3, 'alice_jones', 'securepass');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (3, 'manager');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (3, 'delete');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_credentials (credential_id, user_id, password_hash) VALUES (3, 3, 'hash789');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (4, 'bob_smith', 'pass123');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (4, 'editor');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (4, 'upload');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_credentials (credential_id, user_id, password_hash) VALUES (4, 4, 'hashabc');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, password) VALUES (5, 'sara_jones', 'mypassword');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (role_id, role_name) VALUES (5, 'viewer');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_permissions (permission_id, permission_name) VALUES (5, 'download');",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_permissions (\n    permission_id INT PRIMARY KEY,\n    permission_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_credentials (\n    credential_id INT PRIMARY KEY,\n    user_id INT NOT NULL,\n    password_hash VARCHAR(150) NOT NULL,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\n### STATEMENT\n\nINSERT INTO user_credentials (credential_id, user_id, password_hash) VALUES (5, 5, 'hashxyz');",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (1, 'john_doe', 'password123')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (2, 'jane_smith', 'securepass')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (1, 'John Doe', 'john.doe@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (2, 'Jane Smith', 'jane.smith@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'admin')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'user')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (1, 'user1', 'password1')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (2, 'user2', 'password2')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (3, 'user3', 'password3')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (4, 'user4', 'password4')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO passwords (id, username, password) VALUES (5, 'user5', 'password5')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (1, 'John Doe', 'john.doe@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (2, 'Jane Smith', 'jane.smith@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (4, 'Bob Brown', 'bob.brown@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, name, email) VALUES (5, 'Emma Davis', 'emma.davis@example.com')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (1, 'Admin')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (2, 'User')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (3, 'Moderator')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (4, 'Editor')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO roles (role_id, role_name) VALUES (5, 'Guest')",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_roles (user_id, role_id) VALUES (5, 5)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (1, 1)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (2, 2)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (3, 3)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (4, 4)",
  "### TABLEDATA\n\nCREATE TABLE passwords (\n    id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARBINARY(100) NOT NULL\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nCREATE TABLE roles (\n    role_id INT PRIMARY KEY,\n    role_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE user_roles (\n    user_id INT,\n    role_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (role_id) REFERENCES roles(role_id)\n);\n\n\nCREATE TABLE user_passwords (\n    user_id INT,\n    password_id INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id),\n    FOREIGN KEY (password_id) REFERENCES passwords(id)\n);\n\n### STATEMENT\n\nINSERT INTO user_passwords (user_id, password_id) VALUES (5, 5)"
]