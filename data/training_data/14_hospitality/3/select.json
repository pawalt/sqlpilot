[
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE feedback_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, rating FROM HotelFeedback WHERE review_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT feedback_text FROM HotelFeedback WHERE rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE feedback_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, rating FROM HotelFeedback WHERE rating < 2;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE review_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text FROM HotelFeedback WHERE rating = 5;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE guest_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT feedback_id, review_date FROM HotelFeedback WHERE rating = 4;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text, rating FROM HotelFeedback WHERE review_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE rating <= 3;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT feedback_id, guest_name FROM HotelFeedback WHERE feedback_text IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE review_date > '2022-02-01' AND rating < 4;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT MAX(rating), MIN(rating) FROM HotelFeedback;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM HotelFeedback WHERE guest_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT DISTINCT rating FROM HotelFeedback;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT AVG(rating) FROM HotelFeedback WHERE review_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, COUNT(*) FROM HotelFeedback GROUP BY guest_name;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT SUM(rating) FROM HotelFeedback WHERE review_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback ORDER BY review_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE rating >= 4 AND review_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text FROM HotelFeedback WHERE rating < 3;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_feedbacks FROM HotelFeedback;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, AVG(rating) AS average_rating FROM HotelFeedback GROUP BY guest_name;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text, review_date FROM HotelFeedback ORDER BY review_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE guest_name LIKE 'John%';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT guest_name) AS total_guests FROM HotelFeedback;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT AVG(rating) AS overall_average_rating FROM HotelFeedback;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, MAX(rating) AS highest_rating FROM HotelFeedback GROUP BY guest_name;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT feedback_id, guest_name, feedback_text, rating, review_date FROM HotelFeedback WHERE feedback_text ILIKE '%great%' OR feedback_text ILIKE '%excellent%';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text, review_date FROM HotelFeedback WHERE review_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT AVG(rating) AS average_rating, COUNT(*) AS total_feedbacks FROM HotelFeedback GROUP BY rating HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, review_date, EXTRACT(MONTH FROM review_date) AS month, COUNT(*) AS feedback_count FROM HotelFeedback GROUP BY guest_name, month ORDER BY guest_name, month;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, SUM(rating) AS total_rating FROM HotelFeedback GROUP BY guest_name HAVING SUM(rating) > 20;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text, rating, review_date FROM HotelFeedback WHERE feedback_text IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT feedback_id, guest_name, feedback_text, rating, review_date FROM HotelFeedback WHERE feedback_text LIKE '%complaint%';",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT guest_name, feedback_text, review_date FROM HotelFeedback WHERE guest_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT DISTINCT guest_name, feedback_text FROM HotelFeedback WHERE feedback_text IS NOT NULL ORDER BY guest_name;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT DISTINCT review_date FROM HotelFeedback ORDER BY review_date;",
  "### TABLEDATA\n\nCREATE TABLE HotelFeedback ( \n  feedback_id SERIAL PRIMARY KEY, \n  guest_name VARCHAR(50) NOT NULL, \n  feedback_text TEXT, \n  rating INT, \n  review_date DATE \n)\n\n### STATEMENT\n\nSELECT * FROM HotelFeedback WHERE feedback_id = (SELECT MAX(feedback_id) FROM HotelFeedback);",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, rating FROM Hotels WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM GuestFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, feedback_text FROM GuestFeedback WHERE rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, rating FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, feedback_text FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE Hotels.rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, SUM(rating) AS total_rating FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, AVG(rating) AS avg_rating FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT location, COUNT(hotel_id) AS total_hotels FROM Hotels GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, COUNT(feedback_id) AS total_feedback FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, feedback_text FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, feedback_text FROM Hotels RIGHT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, feedback_text FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE GuestFeedback.hotel_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, AVG(rating) AS avg_rating FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, rating FROM Hotels UNION SELECT hotel_name, location, rating FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels ORDER BY rating DESC;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, rating FROM Hotels WHERE rating > (SELECT AVG(rating) FROM Hotels);",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels WHERE rating IN (SELECT rating FROM GuestFeedback WHERE feedback_text LIKE '%great%');",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, MAX(rating) FROM Hotels GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels WHERE rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, rating, feedback_id, guest_name, feedback_text FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, rating, feedback_text FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE GuestFeedback.rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, SUM(rating) AS total_rating FROM Hotels GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, COUNT(feedback_id) AS total_feedback FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, AVG(rating) AS avg_rating FROM GuestFeedback GROUP BY hotel_id HAVING avg_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, MAX(rating) AS max_rating FROM GuestFeedback JOIN Hotels ON GuestFeedback.hotel_id = Hotels.hotel_id GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, MIN(rating) AS min_rating FROM GuestFeedback JOIN Hotels ON GuestFeedback.hotel_id = Hotels.hotel_id GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, feedback_text FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE feedback_text LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, COUNT(feedback_id) AS total_feedback FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY hotel_id HAVING total_feedback > 5;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, AVG(rating) AS avg_rating FROM Hotels WHERE location = 'New York' GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(feedback_id) AS total_feedback FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE GuestFeedback.rating > 3 GROUP BY hotel_name HAVING total_feedback > 10;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT hotel_name FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, SUM(rating) AS total_rating FROM Hotels WHERE rating > 3 GROUP BY hotel_name HAVING total_rating > 50;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(feedback_id) AS total_feedback FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE GuestFeedback.feedback_text LIKE '%dirty%' GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(feedback_id) AS total_feedback FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE GuestFeedback.guest_name = 'John Smith' GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, AVG(rating) AS avg_rating FROM Hotels GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, COUNT(feedback_id) AS total_feedback FROM GuestFeedback WHERE rating < 2 GROUP BY hotel_name HAVING total_feedback > 3;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(feedback_id) AS total_feedback, AVG(rating) AS avg_rating FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY hotel_name HAVING avg_rating > 3 AND total_feedback < 20;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR,\n    location VARCHAR,\n    rating INT\n);\n\nCREATE TABLE GuestFeedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR,\n    feedback_text TEXT,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(feedback_id) AS total_feedback, AVG(rating) AS avg_rating FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY hotel_name HAVING avg_rating > 4 OR total_feedback > 15;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM GuestFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT feedback_id, guest_name FROM GuestFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT guest_name, feedback_text, rating FROM GuestFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Reviews;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT review_id, reviewer_name FROM Reviews;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT reviewer_name, review_text FROM Reviews;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, guest_name, feedback_text, rating FROM Hotels JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, reviewer_name, review_text, date_posted FROM Hotels JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, g.guest_name, g.feedback_text, g.rating FROM Hotels h JOIN GuestFeedback g ON h.hotel_id = g.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, r.reviewer_name, r.review_text, r.date_posted FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_id, AVG(rating) AS avg_rating FROM GuestFeedback GROUP BY hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, COUNT(feedback_id) AS num_feedback FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, COUNT(r.review_id) AS num_reviews FROM Hotels h LEFT JOIN Reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, AVG(g.rating) AS avg_rating FROM Hotels h JOIN GuestFeedback g ON h.hotel_id = g.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, MAX(r.date_posted) AS latest_review FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, MIN(r.date_posted) AS earliest_review FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels WHERE location = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels WHERE hotel_name LIKE '%Marriott%';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels ORDER BY hotel_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels WHERE hotel_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, rating FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, review_text FROM Hotels INNER JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id WHERE date_posted > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, feedback_text FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE feedback_text LIKE '%great%';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS average_rating FROM GuestFeedback GROUP BY hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, AVG(rating) AS average_rating FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, reviewer_name, review_text, date_posted FROM Hotels INNER JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id WHERE Hotels.location = 'Miami';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, guest_name, feedback_text, rating FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id WHERE Hotels.location = 'Las Vegas';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_hotels FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS average_rating FROM GuestFeedback;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(feedback_id) AS total_feedback FROM Hotels LEFT JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(review_id) AS total_reviews FROM Hotels LEFT JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, MAX(rating) AS max_rating FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, MIN(rating) AS min_rating FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n  hotel_id INT PRIMARY KEY,\n  hotel_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE GuestFeedback (\n  feedback_id INT PRIMARY KEY,\n  hotel_id INT,\n  guest_name VARCHAR(255),\n  feedback_text TEXT,\n  rating INT\n);\n\n\nCREATE TABLE Reviews (\n  review_id INT PRIMARY KEY,\n  hotel_id INT,\n  reviewer_name VARCHAR(255),\n  review_text TEXT,\n  date_posted TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, SUM(rating) AS total_rating FROM Hotels INNER JOIN GuestFeedback ON Hotels.hotel_id = GuestFeedback.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM guests;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email FROM guests;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM feedback;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, guest_id, feedback_text, rating FROM feedback;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, review_text, rating, guest_id FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, feedback_text, rating FROM hotels INNER JOIN feedback ON hotels.hotel_id = feedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email, feedback_text, rating FROM guests INNER JOIN feedback ON guests.guest_id = feedback.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, review_text, rating FROM hotels INNER JOIN reviews ON hotels.hotel_id = reviews.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email, review_text, rating FROM guests INNER JOIN reviews ON guests.guest_id = reviews.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, feedback_text, rating FROM hotels LEFT JOIN feedback ON hotels.hotel_id = feedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email, feedback_text, rating FROM guests LEFT JOIN feedback ON guests.guest_id = feedback.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, review_text, rating FROM hotels LEFT JOIN reviews ON hotels.hotel_id = reviews.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email, review_text, rating FROM guests LEFT JOIN reviews ON guests.guest_id = reviews.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, feedback_text, rating FROM hotels INNER JOIN feedback ON hotels.hotel_id = feedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_id, guest_name, email, feedback_text, rating FROM guests INNER JOIN feedback ON guests.guest_id = feedback.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, review_text, rating FROM hotels INNER JOIN reviews ON hotels.hotel_id = reviews.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_id, guest_name, email, review_text, rating FROM guests INNER JOIN reviews ON guests.guest_id = reviews.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels WHERE hotel_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email FROM guests WHERE guest_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT feedback_text, rating FROM feedback WHERE hotel_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT review_text, rating FROM reviews WHERE guest_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels INNER JOIN feedback ON hotels.hotel_id = feedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, guest_name FROM hotels INNER JOIN feedback ON hotels.hotel_id = feedback.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM guests LEFT JOIN reviews ON guests.guest_id = reviews.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email FROM guests WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM feedback WHERE rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM reviews WHERE rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, COUNT(feedback_id) AS total_feedback FROM hotels LEFT JOIN feedback ON hotels.hotel_id = feedback.hotel_id GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT AVG(rating) AS average_rating FROM feedback WHERE hotel_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, AVG(rating) AS average_rating FROM hotels INNER JOIN feedback ON hotels.hotel_id = feedback.hotel_id GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM feedback WHERE hotel_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT * FROM reviews WHERE guest_id NOT IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels ORDER BY hotel_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    feedback_text TEXT NOT NULL,\n    rating INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    review_text TEXT NOT NULL,\n    rating INT,\n    guest_id INT,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES guests(guest_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email FROM guests ORDER BY guest_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, location, star_rating FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Guests;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_id, guest_name, email, phone_number FROM Guests;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Reviews;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT review_id, hotel_id, guest_id, rating, comment FROM Reviews;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Amenities;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT amenity_id, amenity_name, description FROM Amenities;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM HotelAmenities;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, amenity_id FROM HotelAmenities;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, a.amenity_name FROM Hotels h JOIN HotelAmenities ha ON h.hotel_id = ha.hotel_id JOIN Amenities a ON ha.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, g.guest_name, r.rating FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id JOIN Guests g ON r.guest_id = g.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, AVG(r.rating) AS average_rating FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, COUNT(r.review_id) AS num_reviews FROM Hotels h LEFT JOIN Reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, a.amenity_name, a.description FROM Hotels h LEFT JOIN HotelAmenities ha ON h.hotel_id = ha.hotel_id LEFT JOIN Amenities a ON ha.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, g.guest_name, r.rating, r.comment FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id JOIN Guests g ON r.guest_id = g.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, r.rating, r.comment FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id WHERE r.rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT g.guest_name, COUNT(r.review_id) AS num_reviews FROM Guests g LEFT JOIN Reviews r ON g.guest_id = r.guest_id GROUP BY g.guest_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, COUNT(ra.amenity_id) AS num_amenities FROM Hotels h JOIN HotelAmenities ra ON h.hotel_id = ra.hotel_id GROUP BY h.hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT h.hotel_name, AVG(r.rating) AS average_rating, COUNT(r.review_id) AS num_reviews FROM Hotels h JOIN Reviews r ON h.hotel_id = r.hotel_id GROUP BY h.hotel_name HAVING AVG(r.rating) > 3;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT g.guest_name, MAX(r.rating) AS highest_rating FROM Guests g JOIN Reviews r ON g.guest_id = r.guest_id GROUP BY g.guest_name;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Hotels;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, star_rating FROM Hotels WHERE star_rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, COUNT(*) AS num_reviews FROM Hotels JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, AVG(rating) AS avg_rating FROM Hotels JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, amenity_name FROM Hotels JOIN HotelAmenities ON Hotels.hotel_id = HotelAmenities.hotel_id JOIN Amenities ON HotelAmenities.amenity_id = Amenities.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email, phone_number FROM Guests WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email FROM Guests WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, AVG(rating) AS avg_rating FROM Guests JOIN Reviews ON Guests.guest_id = Reviews.guest_id GROUP BY Guests.guest_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, hotel_name, rating, comment FROM Guests JOIN Reviews ON Guests.guest_id = Reviews.guest_id JOIN Hotels ON Reviews.hotel_id = Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, star_rating FROM Hotels ORDER BY star_rating DESC;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, email, hotel_name, rating, comment FROM Guests JOIN Reviews ON Guests.guest_id = Reviews.guest_id JOIN Hotels ON Reviews.hotel_id = Hotels.hotel_id WHERE rating >= 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, AVG(rating) AS avg_rating, COUNT(*) AS num_reviews FROM Hotels JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id GROUP BY Hotels.hotel_id HAVING AVG(rating) >= 4;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM Hotels WHERE star_rating > (SELECT AVG(star_rating) FROM Hotels);",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, COUNT(*) AS num_amenities FROM Hotels JOIN HotelAmenities ON Hotels.hotel_id = HotelAmenities.hotel_id GROUP BY Hotels.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, amenity_name FROM Hotels JOIN HotelAmenities ON Hotels.hotel_id = HotelAmenities.hotel_id JOIN Amenities ON HotelAmenities.amenity_id = Amenities.amenity_id WHERE amenity_name = 'Pool';",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, hotel_name, rating, comment FROM Guests JOIN Reviews ON Guests.guest_id = Reviews.guest_id JOIN Hotels ON Reviews.hotel_id = Hotels.hotel_id WHERE comment IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, star_rating, COUNT(*) AS num_reviews FROM Hotels JOIN Reviews ON Hotels.hotel_id = Reviews.hotel_id GROUP BY Hotels.hotel_id ORDER BY num_reviews DESC;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, avg_rating FROM Hotels JOIN (SELECT hotel_id, AVG(rating) AS avg_rating FROM Reviews GROUP BY hotel_id) AS subquery ON Hotels.hotel_id = subquery.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, COUNT(*) AS num_reviews FROM Guests JOIN Reviews ON Guests.guest_id = Reviews.guest_id GROUP BY Guests.guest_id HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    star_rating INT\n);\n\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    guest_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Reviews (\n    review_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_id INT,\n    rating INT,\n    comment TEXT,\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests(guest_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE HotelAmenities (\n    hotel_id INT,\n    amenity_id INT,\n    PRIMARY KEY (hotel_id, amenity_id),\n    FOREIGN KEY (hotel_id) REFERENCES Hotels(hotel_id),\n    FOREIGN KEY (amenity_id) REFERENCES Amenities(amenity_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, amenity_name FROM Hotels JOIN HotelAmenities ON Hotels.hotel_id = HotelAmenities.hotel_id JOIN Amenities ON HotelAmenities.amenity_id = Amenities.amenity_id WHERE hotel_name LIKE '%Marriott%';"
]