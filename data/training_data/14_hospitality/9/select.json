[
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name, player_email FROM tee_time_bookings WHERE player_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE tee_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, player_email FROM tee_time_bookings ORDER BY booking_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT player_name FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, tee_time FROM tee_time_bookings WHERE player_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, player_email FROM tee_time_bookings WHERE player_email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(booking_id) FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, player_email FROM tee_time_bookings WHERE booking_id = 50 OR booking_id = 100 OR booking_id = 150;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE player_name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(booking_id) FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, tee_time FROM tee_time_bookings WHERE tee_time < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, tee_time FROM tee_time_bookings WHERE player_email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(booking_id) FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT player_email FROM tee_time_bookings WHERE player_email LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, tee_time FROM tee_time_bookings WHERE player_name = 'Alice' AND player_email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE player_name = 'Alice' AND player_email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, tee_time FROM tee_time_bookings WHERE player_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, player_email FROM tee_time_bookings WHERE tee_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(tee_time) FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_email FROM tee_time_bookings WHERE player_email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT player_name FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name, tee_time FROM tee_time_bookings WHERE player_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name, tee_time FROM tee_time_bookings ORDER BY tee_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name, player_email FROM tee_time_bookings WHERE player_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(NOW(), tee_time)) AS average_days_booking FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, COUNT(*) AS bookings_count FROM tee_time_bookings GROUP BY booking_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name, player_email FROM tee_time_bookings WHERE player_email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, SUBSTRING(player_name, 1, 3) AS initial FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, tee_time, DATE_FORMAT(tee_time, '%H:%i') AS tee_time_formatted FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS player_bookings FROM tee_time_bookings GROUP BY player_name ORDER BY player_bookings DESC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, MIN(tee_time) AS first_booking_date FROM tee_time_bookings GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT booking_id, player_name, player_email FROM tee_time_bookings WHERE DATEDIFF(NOW(), tee_time) < 7;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(*) AS total_bookings, AVG(DATEDIFF(NOW(), tee_time)) AS average_days_since_booking FROM tee_time_bookings GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id INT PRIMARY KEY,\n    tee_time DATETIME,\n    player_name VARCHAR(50),\n    player_email VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(DATEDIFF(NOW(), tee_time)) AS total_days_since_bookings FROM tee_time_bookings GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT booking_id, player_id, tee_time, booking_date FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT booking_id, player_id FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, tee_time FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT booking_id, booking_date FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap, tournament_id FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournament_id FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE tournament_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE handicap > 10;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE player_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE tournament_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings JOIN player_handicaps ON tee_time_bookings.player_id = player_handicaps.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap, tee_time, booking_date FROM player_handicaps JOIN tee_time_bookings ON player_handicaps.player_id = tee_time_bookings.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT tee_time_bookings.booking_id, player_handicaps.player_id FROM tee_time_bookings JOIN player_handicaps ON tee_time_bookings.player_id = player_handicaps.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_date BETWEEN '2022-10-01' AND '2022-10-31';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE player_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE player_id IN (3, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, tee_time FROM tee_time_bookings ORDER BY tee_time DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_handicaps WHERE handicap > 10;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings JOIN player_handicaps ON tee_time_bookings.player_id = player_handicaps.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(handicap) FROM player_handicaps WHERE tournament_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, COUNT(*) as booking_count FROM tee_time_bookings GROUP BY player_id HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM player_handicaps WHERE tournament_id IN (456, 789);",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT booking_id, player_id, tee_time, booking_date FROM tee_time_bookings WHERE player_id = 100 ORDER BY booking_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE handicap BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_date > '2023-01-01' AND booking_date < '2023-02-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(handicap) FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM tee_time_bookings WHERE booking_date >= '2022-08-01' AND booking_date < '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, SUM(handicap) as total_handicap FROM player_handicaps GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE tee_time < NOW();",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, MIN(handicap) as min_handicap FROM player_handicaps GROUP BY player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT booking_id, player_id, tee_time, booking_date FROM tee_time_bookings ORDER BY booking_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, AVG(handicap) as avg_handicap FROM player_handicaps GROUP BY player_id HAVING AVG(handicap) > 8;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE player_id IN (100, 200);",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(handicap) FROM player_handicaps WHERE tournament_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n  booking_id SERIAL PRIMARY KEY,\n  player_id INT NOT NULL,\n  tee_time TIMESTAMP NOT NULL,\n  booking_date DATE NOT NULL\n);\n\nCREATE TABLE player_handicaps (\n  player_id INT PRIMARY KEY,\n  handicap DECIMAL NOT NULL,\n  tournament_id INT NOT NULL\n);\n\n### STATEMENT\n\nSELECT booking_id, player_id, tee_time, booking_date FROM tee_time_bookings WHERE booking_date BETWEEN '2022-08-01' AND '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, club_id, booking_date FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT player_id, booking_time FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tournaments;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_id, tournament_name FROM tournaments;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT start_date, end_date FROM tournaments;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, club_id, player_id, booking_date, booking_time FROM tee_time_bookings WHERE club_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE player_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_name, start_date FROM tournaments WHERE end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE handicap < 10.0;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, club_id, player_id, booking_date, booking_time FROM tee_time_bookings ORDER BY booking_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_name, start_date, end_date FROM tournaments ORDER BY start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tournaments WHERE tournament_name LIKE '%Championship%';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE player_id IN (101, 102, 103);",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_name, start_date, end_date FROM tournaments WHERE start_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT player_id, handicap FROM player_handicaps WHERE handicap >= 10.0;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, club_id, player_id, booking_date, booking_time FROM tee_time_bookings LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, club_id, booking_date FROM tee_time_bookings WHERE booking_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT t.tournament_name, t.start_date, t.end_date, pb.player_id, pb.handicap FROM tournaments t JOIN player_handicaps pb ON t.tournament_id = pb.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tb.booking_id, t.tournament_name, tb.booking_date FROM tee_time_bookings tb JOIN tournaments t ON tb.club_id = t.tournament_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tb.booking_id, ph.handicap FROM tee_time_bookings tb JOIN player_handicaps ph ON tb.player_id = ph.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM tee_time_bookings WHERE booking_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT club_id, COUNT(player_id) AS player_count FROM tee_time_bookings GROUP BY club_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(handicap) AS max_handicap FROM player_handicaps;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, club_id, booking_date, booking_time FROM tee_time_bookings WHERE club_id = 1 AND player_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, booking_date, booking_time FROM tee_time_bookings WHERE club_id = 2 AND booking_date > '2022-06-01' AND player_id IN (SELECT player_id FROM player_handicaps WHERE handicap < 15);",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_name, start_date, end_date FROM tournaments WHERE start_date < '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, booking_date FROM tee_time_bookings WHERE club_id = 3 AND booking_date > '2022-10-01' ORDER BY booking_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_name, COUNT(*) AS player_count FROM tournaments t JOIN tee_time_bookings tb ON t.tournament_id = tb.club_id GROUP BY tournament_name;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT club_id FROM tee_time_bookings;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT t.tournament_name, pb.handicap FROM tournaments t LEFT JOIN player_handicaps pb ON t.tournament_id = pb.player_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, booking_date, booking_time FROM tee_time_bookings WHERE club_id = 4 AND booking_date < '2022-07-01' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT tournament_id, tournament_name FROM tournaments WHERE end_date > '2022-12-31' ORDER BY tournament_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, booking_date, booking_time FROM tee_time_bookings WHERE club_id = 5 AND booking_date = '2022-08-15' AND booking_time BETWEEN '10:00:00' AND '12:00:00' ORDER BY booking_time;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT club_id, AVG(handicap) AS avg_handicap FROM tee_time_bookings tb JOIN player_handicaps ph ON tb.player_id = ph.player_id GROUP BY club_id;",
  "### TABLEDATA\n\nCREATE TABLE tee_time_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    club_id INT,\n    player_id INT,\n    booking_date DATE,\n    booking_time TIME\n);\n\nCREATE TABLE player_handicaps (\n    player_id INT PRIMARY KEY,\n    handicap DECIMAL\n);\n\nCREATE TABLE tournaments (\n    tournament_id SERIAL PRIMARY KEY,\n    tournament_name VARCHAR(50),\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT booking_id, player_id, booking_date, booking_time FROM tee_time_bookings WHERE booking_date = (SELECT MAX(booking_date) FROM tee_time_bookings);",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM golf_courses;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT course_id, course_name FROM golf_courses;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT course_name, course_location FROM golf_courses;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM players;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, player_name FROM players;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, player_handicap FROM players;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tee_times;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tee_time_id, tee_time FROM tee_times;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tee_time, course_id, player_id FROM tee_times;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tournaments;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournament_id, tournament_name FROM tournaments;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournament_name, start_date FROM tournaments;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT golf_courses.course_name, players.player_name FROM golf_courses, players WHERE golf_courses.course_id = players.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT golf_courses.course_name, tee_times.tee_time FROM golf_courses, tee_times WHERE golf_courses.course_id = tee_times.course_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT players.player_name, tournaments.tournament_name FROM players, tournaments WHERE players.player_id = tournaments.tournament_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT players.player_name, tee_times.tee_time FROM players, tee_times WHERE players.player_id = tee_times.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournaments.tournament_name, golf_courses.course_name FROM tournaments, golf_courses, tee_times WHERE tournaments.tournament_id = tee_times.player_id AND tee_times.course_id = golf_courses.course_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournaments.tournament_name, players.player_name FROM tournaments, players, tee_times WHERE tournaments.tournament_id = tee_times.player_id AND tee_times.player_id = players.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM golf_courses;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(player_handicap) FROM players;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM golf_courses WHERE course_location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_id, player_name FROM players WHERE player_handicap < 10;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT course_name, course_location FROM golf_courses WHERE course_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, player_handicap FROM players WHERE player_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tee_time, course_id, player_id FROM tee_times WHERE tee_time > '2022-01-01' AND tee_time < '2022-01-30';",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournament_id, tournament_name, start_date FROM tournaments WHERE start_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM golf_courses JOIN tee_times ON golf_courses.course_id = tee_times.course_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM players JOIN tee_times ON players.player_id = tee_times.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM tournaments JOIN tee_times ON tournaments.tournament_id = tee_times.tournament_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, tee_time FROM players INNER JOIN tee_times ON players.player_id = tee_times.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT course_name, player_name FROM golf_courses INNER JOIN tee_times ON golf_courses.course_id = tee_times.course_id INNER JOIN players ON players.player_id = tee_times.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT t.tournament_name, p.player_name, tt.tee_time FROM tournaments t INNER JOIN tee_times tt ON t.tournament_id = tt.tournament_id INNER JOIN players p ON p.player_id = tt.player_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM golf_courses WHERE course_location = 'California' AND course_id IN (SELECT course_id FROM tee_times WHERE player_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(player_handicap) AS total_handicap FROM players GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT course_id, COUNT(player_id) AS total_players FROM tee_times GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT tournament_id, COUNT(tee_time_id) AS total_tee_times FROM tee_times WHERE tee_time > '2022-06-01' GROUP BY tournament_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT course_id, AVG(player_handicap) AS average_handicap FROM players GROUP BY course_id;",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM golf_courses WHERE course_id IN (SELECT course_id FROM tee_times GROUP BY course_id HAVING COUNT(player_id) > 2);",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT player_name, DATEDIFF('2022-06-01', tee_time) AS days_until_tee_time FROM players INNER JOIN tee_times ON players.player_id = tee_times.player_id WHERE tee_time > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE golf_courses (\n    course_id INT PRIMARY KEY,\n    course_name VARCHAR(255) NOT NULL,\n    course_location VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(255) NOT NULL,\n    player_handicap FLOAT NOT NULL\n);\n\n\nCREATE TABLE tee_times (\n    tee_time_id INT PRIMARY KEY,\n    tee_time DATETIME NOT NULL,\n    course_id INT NOT NULL,\n    player_id INT NOT NULL,\n    FOREIGN KEY (course_id) REFERENCES golf_courses (course_id),\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\n\nCREATE TABLE tournaments (\n    tournament_id INT PRIMARY KEY,\n    tournament_name VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL\n);\n\n### STATEMENT\n\nSELECT t.tournament_name, COUNT(tt.tee_time_id) AS total_tee_times FROM tournaments t INNER JOIN tee_times tt ON t.tournament_id = tt.tournament_id GROUP BY t.tournament_id HAVING COUNT(tt.tee_time_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimes;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT id, tee_time FROM TeeTimes WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT name FROM Players WHERE handicap > 10;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Tournaments WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT id, name, date FROM Tournaments WHERE name LIKE 'Summer%';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimeBookings WHERE player_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT id, player_id FROM TeeTimeBookings WHERE tee_time_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TournamentPlayers WHERE tournament_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT player_id FROM TournamentPlayers WHERE tournament_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT id, name, handicap FROM Players WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimes ORDER BY tee_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT name, date FROM Tournaments ORDER BY date;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimeBookings WHERE tee_time_id IN (SELECT id FROM TeeTimes WHERE player_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Players WHERE handicap BETWEEN 5 AND 15;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimes WHERE tee_time BETWEEN '2022-07-01' AND '2022-07-31';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Tournaments WHERE EXTRACT(YEAR FROM date) = 2023;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT count(*) FROM TeeTimes;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(handicap) FROM Players;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT MIN(date) FROM Tournaments;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT SUM(handicap) FROM Players;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimes WHERE tee_time > NOW();",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, Players.handicap, TeeTimes.tee_time FROM Players JOIN TeeTimeBookings ON Players.id = TeeTimeBookings.player_id JOIN TeeTimes ON TeeTimeBookings.tee_time_id = TeeTimes.id;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Tournaments.name, COUNT(TournamentPlayers.player_id) AS total_players FROM Tournaments JOIN TournamentPlayers ON Tournaments.id = TournamentPlayers.tournament_id GROUP BY Tournaments.name;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT TeeTimes.tee_time, Players.name FROM TeeTimes JOIN TeeTimeBookings ON TeeTimes.id = TeeTimeBookings.tee_time_id JOIN Players ON TeeTimeBookings.player_id = Players.id ORDER BY TeeTimes.tee_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, Tournaments.name FROM Players JOIN TournamentPlayers ON Players.id = TournamentPlayers.player_id JOIN Tournaments ON TournamentPlayers.tournament_id = Tournaments.id;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimes WHERE player_id IN (SELECT id FROM Players WHERE handicap < 10);",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT Tournaments.name FROM Tournaments JOIN TournamentPlayers ON Tournaments.id = TournamentPlayers.tournament_id WHERE TournamentPlayers.player_id IN (SELECT id FROM Players WHERE handicap > 15);",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT TeeTimes.tee_time, Players.name FROM TeeTimes JOIN TeeTimeBookings ON TeeTimes.id = TeeTimeBookings.tee_time_id JOIN Players ON TeeTimeBookings.player_id = Players.id WHERE Players.handicap < 10;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT TeeTimes.tee_time, Players.name FROM TeeTimes JOIN TeeTimeBookings ON TeeTimes.id = TeeTimeBookings.tee_time_id JOIN Players ON TeeTimeBookings.player_id = Players.id WHERE Players.handicap > 20 ORDER BY TeeTimes.tee_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, COUNT(TournamentPlayers.tournament_id) AS total_tournaments FROM Players JOIN TournamentPlayers ON Players.id = TournamentPlayers.player_id GROUP BY Players.name;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(player_id) AS total_players FROM TournamentPlayers WHERE tournament_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT tee_time, COUNT(player_id) AS total_players FROM TeeTimeBookings WHERE tee_time_id = 1 GROUP BY tee_time;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Tournaments.name, COUNT(TournamentPlayers.player_id) AS total_players FROM Tournaments JOIN TournamentPlayers ON Tournaments.id = TournamentPlayers.tournament_id WHERE Tournaments.date > '2023-01-01' GROUP BY Tournaments.name;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, TeeTimes.tee_time FROM Players JOIN TeeTimeBookings ON Players.id = TeeTimeBookings.player_id JOIN TeeTimes ON TeeTimeBookings.tee_time_id = TeeTimes.id WHERE Players.handicap < 15 AND TeeTimes.tee_time < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, Tournaments.name FROM Players JOIN TournamentPlayers ON Players.id = TournamentPlayers.player_id JOIN Tournaments ON TournamentPlayers.tournament_id = Tournaments.id WHERE Players.handicap > 15 AND Tournaments.date > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, TeeTimes.tee_time FROM Players JOIN TeeTimeBookings ON Players.id = TeeTimeBookings.player_id JOIN TeeTimes ON TeeTimeBookings.tee_time_id = TeeTimes.id WHERE Players.handicap > 20 AND TeeTimes.tee_time > NOW();",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM TeeTimes WHERE tee_time > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT Players.name FROM Players JOIN TournamentPlayers ON Players.id = TournamentPlayers.player_id WHERE TournamentPlayers.tournament_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Tournaments.name, COUNT(DISTINCT TournamentPlayers.player_id) AS total_players FROM Tournaments JOIN TournamentPlayers ON Tournaments.id = TournamentPlayers.tournament_id GROUP BY Tournaments.name HAVING total_players > 5;",
  "### TABLEDATA\n\nCREATE TABLE TeeTimes (\n    id SERIAL PRIMARY KEY,\n    tee_time TIMESTAMP,\n    player_id INT\n);\n\n\nCREATE TABLE Players (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    handicap INT\n);\n\n\nCREATE TABLE Tournaments (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    date DATE\n);\n\n\nCREATE TABLE TeeTimeBookings (\n    id SERIAL PRIMARY KEY,\n    tee_time_id INT,\n    player_id INT\n);\n\n\nCREATE TABLE TournamentPlayers (\n    id SERIAL PRIMARY KEY,\n    tournament_id INT,\n    player_id INT\n);\n\n### STATEMENT\n\nSELECT Players.name, Tournaments.name, TeeTimes.tee_time FROM Players JOIN TeeTimeBookings ON Players.id = TeeTimeBookings.player_id JOIN TeeTimes ON TeeTimeBookings.tee_time_id = TeeTimes.id JOIN TournamentPlayers ON Players.id = TournamentPlayers.player_id JOIN Tournaments ON TournamentPlayers.tournament_id = Tournaments.id WHERE Players.handicap < 15 AND Tournaments.date > '2023-01-01' ORDER BY TeeTimes.tee_time DESC LIMIT 5;"
]