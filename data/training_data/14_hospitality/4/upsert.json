[
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 1', '2023-01-10', 'John Doe', 10);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 2', '2023-02-15', 'Jane Smith', 15);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 3', '2023-03-20', 'Alice Johnson', 20);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 4', '2023-04-25', 'Bob Brown', 25);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 5', '2023-05-30', 'Eve Wilson', 30);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 6', '2023-06-05', 'Michael Lee', 5);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 7', '2023-07-10', 'Sara Miller', 10);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 8', '2023-08-15', 'David Brown', 15);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 9', '2023-09-20', 'Olivia Moore', 20);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 10', '2023-10-25', 'Lucas Harris', 25);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 11', '2023-11-30', 'Sophia Wilson', 30);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 12', '2023-12-05', 'Matthew Brown', 5);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 13', '2024-01-10', 'Emma Johnson', 10);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 14', '2024-02-15', 'Logan Smith', 15);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 15', '2024-03-20', 'Ava Wilson', 20);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 16', '2024-04-25', 'Daniel Lee', 25);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 17', '2024-05-30', 'Grace Miller', 30);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 18', '2024-06-05', 'Nathan Brown', 5);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 19', '2024-07-10', 'Isabella Moore', 10);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nUPSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 20', '2024-08-15', 'Liam Harris', 15);",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 1', '2022-08-15', 'John Doe', 1) ON CONFLICT (event_name, event_date, attendee_name) DO UPDATE SET seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 2', '2022-09-20', 'Jane Smith', 2) ON CONFLICT (event_name) DO UPDATE SET attendee_name = EXCLUDED.attendee_name, event_date = EXCLUDED.event_date;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 3', '2022-10-10', 'Alice Johnson', 3) ON CONFLICT (event_date) DO UPDATE SET attendee_name = EXCLUDED.attendee_name, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 4', '2022-11-25', 'Bob Brown', 4) ON CONFLICT (event_date, attendee_name) DO UPDATE SET seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 5', '2022-12-30', 'Sarah Lee', 5) ON CONFLICT (event_name, attendee_name) DO UPDATE SET event_date = EXCLUDED.event_date, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 6', '2023-01-05', 'Michael Evans', 6) ON CONFLICT (event_date) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 7', '2023-02-15', 'Emily White', 7) ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 8', '2023-03-20', 'David Rogers', 8) ON CONFLICT (event_name) DO UPDATE SET attendee_name = EXCLUDED.attendee_name, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 9', '2023-04-10', 'Olivia James', 9) ON CONFLICT (event_date, attendee_name) DO UPDATE SET event_name = EXCLUDED.event_name, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 10', '2023-05-25', 'Tom Baker', 10) ON CONFLICT (event_date) DO UPDATE SET event_name = EXCLUDED.event_name, attendee_name = EXCLUDED.attendee_name;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 11', '2023-06-30', 'Sophia Martinez', 11) ON CONFLICT (attendee_name) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 12', '2023-07-05', 'Jack Johnson', 12) ON CONFLICT (event_name, attendee_name) DO UPDATE SET event_date = EXCLUDED.event_date;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 13', '2023-08-15', 'Grace Parker', 13) ON CONFLICT (event_name, event_date) DO UPDATE SET attendee_name = EXCLUDED.attendee_name, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 14', '2023-09-20', 'Lucas Taylor', 14) ON CONFLICT DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 15', '2023-10-10', 'Natalie Hill', 15) ON CONFLICT (attendee_name) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 16', '2023-11-25', 'Ella Roberts', 16) ON CONFLICT (event_date, attendee_name) DO UPDATE SET event_name = EXCLUDED.event_name;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 17', '2023-12-30', 'Liam Turner', 17) ON CONFLICT (event_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 18', '2024-01-05', 'Ava Scott', 18) ON CONFLICT (event_date) DO UPDATE SET event_name = EXCLUDED.event_name, attendee_name = EXCLUDED.attendee_name;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 19', '2024-02-20', 'Noah Morris', 19) ON CONFLICT (event_name, event_date, attendee_name) DO UPDATE SET seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id SERIAL PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    attendee_name VARCHAR(255) NOT NULL,\n    seat_number INT\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (event_name, event_date, attendee_name, seat_number) VALUES ('Event 20', '2024-03-10', 'Mia Young', 20) ON CONFLICT (event_date) DO UPDATE SET event_name = EXCLUDED.event_name, attendee_name = EXCLUDED.attendee_name, seat_number = EXCLUDED.seat_number;",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (1, 'Event 1', '2022-10-10', '10:00:00', 'John Doe', 'john@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 1', booking_date = '2022-10-10', booking_time = '10:00:00', attendee_name = 'John Doe', attendee_email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (2, 'Event 2', '2022-11-11', '11:00:00', 'Jane Doe', 'jane@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 2', booking_date = '2022-11-11', booking_time = '11:00:00', attendee_name = 'Jane Doe', attendee_email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (3, 'Event 3', '2022-12-12', '12:00:00', 'Alice Smith', 'alice@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 3', booking_date = '2022-12-12', booking_time = '12:00:00', attendee_name = 'Alice Smith', attendee_email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (4, 'Event 4', '2023-01-01', '13:00:00', 'Bob Johnson', 'bob@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 4', booking_date = '2023-01-01', booking_time = '13:00:00', attendee_name = 'Bob Johnson', attendee_email = 'bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (5, 'Event 5', '2023-02-02', '14:00:00', 'Eve Taylor', 'eve@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 5', booking_date = '2023-02-02', booking_time = '14:00:00', attendee_name = 'Eve Taylor', attendee_email = 'eve@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (6, 'Event 6', '2023-03-03', '15:00:00', 'Charlie Brown', 'charlie@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 6', booking_date = '2023-03-03', booking_time = '15:00:00', attendee_name = 'Charlie Brown', attendee_email = 'charlie@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (7, 'Event 7', '2023-04-04', '16:00:00', 'Grace Lee', 'grace@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 7', booking_date = '2023-04-04', booking_time = '16:00:00', attendee_name = 'Grace Lee', attendee_email = 'grace@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (8, 'Event 8', '2023-05-05', '17:00:00', 'Sam Adams', 'sam@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 8', booking_date = '2023-05-05', booking_time = '17:00:00', attendee_name = 'Sam Adams', attendee_email = 'sam@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (9, 'Event 9', '2023-06-06', '18:00:00', 'Linda Wilson', 'linda@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 9', booking_date = '2023-06-06', booking_time = '18:00:00', attendee_name = 'Linda Wilson', attendee_email = 'linda@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (10, 'Event 10', '2023-07-07', '19:00:00', 'Tom Brown', 'tom@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 10', booking_date = '2023-07-07', booking_time = '19:00:00', attendee_name = 'Tom Brown', attendee_email = 'tom@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (11, 'Event 11', '2023-08-08', '20:00:00', 'Sarah White', 'sarah@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 11', booking_date = '2023-08-08', booking_time = '20:00:00', attendee_name = 'Sarah White', attendee_email = 'sarah@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (12, 'Event 12', '2023-09-09', '21:00:00', 'Mike Miller', 'mike@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 12', booking_date = '2023-09-09', booking_time = '21:00:00', attendee_name = 'Mike Miller', attendee_email = 'mike@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (13, 'Event 13', '2023-10-10', '22:00:00', 'Emily Young', 'emily@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 13', booking_date = '2023-10-10', booking_time = '22:00:00', attendee_name = 'Emily Young', attendee_email = 'emily@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (14, 'Event 14', '2023-11-11', '23:00:00', 'Paul Green', 'paul@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 14', booking_date = '2023-11-11', booking_time = '23:00:00', attendee_name = 'Paul Green', attendee_email = 'paul@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (15, 'Event 15', '2023-12-12', '00:00:00', 'Karen King', 'karen@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 15', booking_date = '2023-12-12', booking_time = '00:00:00', attendee_name = 'Karen King', attendee_email = 'karen@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (16, 'Event 16', '2024-01-01', '01:00:00', 'Jack Scott', 'jack@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 16', booking_date = '2024-01-01', booking_time = '01:00:00', attendee_name = 'Jack Scott', attendee_email = 'jack@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (17, 'Event 17', '2024-02-02', '02:00:00', 'Olivia Brown', 'olivia@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 17', booking_date = '2024-02-02', booking_time = '02:00:00', attendee_name = 'Olivia Brown', attendee_email = 'olivia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (18, 'Event 18', '2024-03-03', '03:00:00', 'Henry Thomas', 'henry@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 18', booking_date = '2024-03-03', booking_time = '03:00:00', attendee_name = 'Henry Thomas', attendee_email = 'henry@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (19, 'Event 19', '2024-04-04', '04:00:00', 'Anna Adams', 'anna@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 19', booking_date = '2024-04-04', booking_time = '04:00:00', attendee_name = 'Anna Adams', attendee_email = 'anna@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (20, 'Event 20', '2024-05-05', '05:00:00', 'Kevin Martin', 'kevin@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event 20', booking_date = '2024-05-05', booking_time = '05:00:00', attendee_name = 'Kevin Martin', attendee_email = 'kevin@example.com';",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (1, 'Event A', '2022-01-15', '12:00:00', 'John Doe', 'john.doe@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event A Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (2, 'Event B', '2022-02-28', '15:30:00', 'Jane Smith', 'jane.smith@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event B Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (3, 'Event C', '2022-03-10', '10:00:00', 'Alice Johnson', 'alice.johnson@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event C Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (4, 'Event D', '2022-04-20', '18:00:00', 'Bob Brown', 'bob.brown@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event D Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (5, 'Event E', '2022-05-25', '14:00:00', 'Emily Davis', 'emily.davis@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event E Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (6, 'Event F', '2022-06-30', '17:30:00', 'Charlie Wilson', 'charlie.wilson@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event F Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (7, 'Event G', '2022-07-05', '13:00:00', 'Ella Martinez', 'ella.martinez@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event G Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (8, 'Event H', '2022-08-10', '11:30:00', 'George Adams', 'george.adams@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event H Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (9, 'Event I', '2022-09-15', '19:00:00', 'Hannah Young', 'hannah.young@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event I Updated'",
  "### TABLEDATA\n\nCREATE TABLE event_bookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    booking_date DATE,\n    booking_time TIME,\n    attendee_name VARCHAR(255),\n    attendee_email VARCHAR(255)\n);\n\nCREATE TABLE seating_arrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number VARCHAR(10),\n    seating_section VARCHAR(50),\n    is_booked BOOLEAN,\n    booking_id INT,\n    FOREIGN KEY (booking_id) REFERENCES event_bookings(booking_id)\n);\n\n### STATEMENT\n\nINSERT INTO event_bookings (booking_id, event_name, booking_date, booking_time, attendee_name, attendee_email) VALUES (10, 'Event J', '2022-10-20', '16:00:00', 'Kyle Thomas', 'kyle.thomas@example.com') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Event J Updated'",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('1', 'Concert', '2022-10-15', '2022-09-30') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('2', 'Conference', '2022-11-20', '2022-10-05') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('3', 'Workshop', '2022-09-25', '2022-09-10') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (101, 10, 'A', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (102, 10, 'A', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (103, 11, 'B', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('1', 101) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('2', 102) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('3', 103) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('4', 'Seminar', '2022-12-10', '2022-11-25') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('5', 'Meeting', '2022-08-30', '2022-08-15') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6', 'Exhibition', '2023-01-15', '2022-12-30') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (104, 12, 'C', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (105, 12, 'C', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (106, 13, 'D', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('4', 104) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('5', 105) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6', 106) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('7', 'Training', '2023-02-20', '2023-01-05') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('8', 'Product Launch', '2023-03-15', '2023-02-28') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('9', 'Festival', '2023-04-10', '2023-03-25') ON CONFLICT (booking_id) DO UPDATE SET event_name = excluded.event_name, event_date = excluded.event_date, booking_date = excluded.booking_date;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (107, 14, 'E', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (108, 14, 'E', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (109, 15, 'F', false) ON CONFLICT (seat_number) DO UPDATE SET seat_row = excluded.seat_row, seat_section = excluded.seat_section, is_booked = excluded.is_booked;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('7', 107) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('8', 108) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nINSERT INTO BookingDetails (booking_id, seat_number) VALUES ('9', 109) ON CONFLICT (booking_id, seat_number) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430c8', 'Concert', '2022-12-31', '2022-11-01 10:00:00') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Updated Concert' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (101, 1, 'A', true) ON CONFLICT (seat_number) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430c8', 101) ON CONFLICT (booking_id, seat_number) DO UPDATE SET booking_id = '7b385bc3-1ad5-4cef-a128-121403b261d7' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430c9', 'Sports Game', '2022-11-15', '2022-11-01 09:00:00') ON CONFLICT (booking_id) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (102, 2, 'B', false) ON CONFLICT (seat_number) DO UPDATE SET is_booked = true RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430c9', 102) ON CONFLICT (booking_id, seat_number) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430ca', 'Theater Play', '2022-11-20', '2022-11-01 11:00:00') ON CONFLICT (booking_id) DO UPDATE SET event_date = '2022-11-22' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (103, 1, 'A', true) ON CONFLICT (seat_number) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430ca', 103) ON CONFLICT (booking_id, seat_number) DO UPDATE SET booking_id = '46638e4c-34e2-4b38-8fb6-07316bf81ecb' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cb', 'Conference', '2022-12-10', '2022-11-01 13:00:00') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Updated Conference', booking_date = '2022-11-02 14:00:00' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (104, 2, 'B', false) ON CONFLICT (seat_number) DO UPDATE SET is_booked = true RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cb', 104) ON CONFLICT (booking_id, seat_number) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cc', 'Workshop', '2022-11-30', '2022-11-01 15:00:00') ON CONFLICT (booking_id) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (105, 1, 'A', true) ON CONFLICT (seat_number) DO UPDATE SET seat_row = 3 RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cc', 105) ON CONFLICT (booking_id, seat_number) DO UPDATE SET booking_id = '593e83f4-416f-4534-8120-d4cb845f4664' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cd', 'Music Festival', '2022-12-20', '2022-11-01 17:00:00') ON CONFLICT (booking_id) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (106, 2, 'B', false) ON CONFLICT (seat_number) DO UPDATE SET seat_section = 'C' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430cd', 106) ON CONFLICT (booking_id, seat_number) DO NOTHING RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO EventBookings (booking_id, event_name, event_date, booking_date) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430ce', 'Art Exhibition', '2022-11-25', '2022-11-01 19:00:00') ON CONFLICT (booking_id) DO UPDATE SET event_name = 'Updated Art Exhibition', event_date = '2022-11-27' RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seat_number, seat_row, seat_section, is_booked) VALUES (107, 1, 'A', true) ON CONFLICT (seat_number) DO UPDATE SET is_booked = false RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    booking_date TIMESTAMP\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_number INT PRIMARY KEY,\n    seat_row INT,\n    seat_section VARCHAR(50),\n    is_booked BOOLEAN\n);\n\n\nCREATE TABLE BookingDetails (\n    booking_id UUID PRIMARY KEY,\n    seat_number INT,\n    FOREIGN KEY (booking_id) REFERENCES EventBookings(booking_id),\n    FOREIGN KEY (seat_number) REFERENCES SeatingArrangements(seat_number)\n);\n\n### STATEMENT\n\nUPSERT INTO BookingDetails (booking_id, seat_number) VALUES ('6ba7b810-9dad-11d1-80b4-00c04fd430ce', 107) ON CONFLICT (booking_id, seat_number) DO UPDATE SET seat_number = 108 RETURNING *;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (1, 'EventA', '2022-08-15', 'Alice') ON DUPLICATE KEY UPDATE event_name = 'EventA', event_date = '2022-08-15', attendee_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (2, 'EventB', '2022-09-20', 'Bob') ON DUPLICATE KEY UPDATE event_name = 'EventB', event_date = '2022-09-20', attendee_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (3, 'EventC', '2022-10-25', 'Charlie') ON DUPLICATE KEY UPDATE event_name = 'EventC', event_date = '2022-10-25', attendee_name = 'Charlie';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (4, 'EventD', '2022-11-30', 'David') ON DUPLICATE KEY UPDATE event_name = 'EventD', event_date = '2022-11-30', attendee_name = 'David';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (5, 'EventE', '2022-12-31', 'Eve') ON DUPLICATE KEY UPDATE event_name = 'EventE', event_date = '2022-12-31', attendee_name = 'Eve';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (1, 101, 1, 'Alice') ON DUPLICATE KEY UPDATE room_number = 101, seat_number = 1, attendee_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (2, 102, 2, 'Bob') ON DUPLICATE KEY UPDATE room_number = 102, seat_number = 2, attendee_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (3, 103, 3, 'Charlie') ON DUPLICATE KEY UPDATE room_number = 103, seat_number = 3, attendee_name = 'Charlie';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (4, 104, 4, 'David') ON DUPLICATE KEY UPDATE room_number = 104, seat_number = 4, attendee_name = 'David';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (5, 105, 5, 'Eve') ON DUPLICATE KEY UPDATE room_number = 105, seat_number = 5, attendee_name = 'Eve';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (1, 'EventA', '2022-08-15', 100) ON DUPLICATE KEY UPDATE event_name = 'EventA', event_date = '2022-08-15', available_seats = 100;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (2, 'EventB', '2022-09-20', 200) ON DUPLICATE KEY UPDATE event_name = 'EventB', event_date = '2022-09-20', available_seats = 200;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (3, 'EventC', '2022-10-25', 150) ON DUPLICATE KEY UPDATE event_name = 'EventC', event_date = '2022-10-25', available_seats = 150;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (4, 'EventD', '2022-11-30', 120) ON DUPLICATE KEY UPDATE event_name = 'EventD', event_date = '2022-11-30', available_seats = 120;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (5, 'EventE', '2022-12-31', 180) ON DUPLICATE KEY UPDATE event_name = 'EventE', event_date = '2022-12-31', available_seats = 180;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (1, 101, 50) ON DUPLICATE KEY UPDATE room_number = 101, capacity = 50;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (2, 102, 60) ON DUPLICATE KEY UPDATE room_number = 102, capacity = 60;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (3, 103, 70) ON DUPLICATE KEY UPDATE room_number = 103, capacity = 70;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (4, 104, 80) ON DUPLICATE KEY UPDATE room_number = 104, capacity = 80;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (5, 105, 90) ON DUPLICATE KEY UPDATE room_number = 105, capacity = 90;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (1, 'Music Concert', '2022-10-15', 'John Doe') ON DUPLICATE KEY UPDATE event_name = 'Music Concert', event_date = '2022-10-15', attendee_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (1, 101, 1, 'John Doe') ON DUPLICATE KEY UPDATE room_number = 101, seat_number = 1, attendee_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (1, 'Music Concert', '2022-10-15', 100) ON DUPLICATE KEY UPDATE event_name = 'Music Concert', event_date = '2022-10-15', available_seats = 100;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (1, 101, 200) ON DUPLICATE KEY UPDATE room_number = 101, capacity = 200;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (2, 'Science Conference', '2022-11-20', 'Jane Smith') ON DUPLICATE KEY UPDATE event_name = 'Science Conference', event_date = '2022-11-20', attendee_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (2, 201, 2, 'Jane Smith') ON DUPLICATE KEY UPDATE room_number = 201, seat_number = 2, attendee_name = 'Jane Smith';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (2, 'Science Conference', '2022-11-20', 150) ON DUPLICATE KEY UPDATE event_name = 'Science Conference', event_date = '2022-11-20', available_seats = 150;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (2, 201, 150) ON DUPLICATE KEY UPDATE room_number = 201, capacity = 150;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (3, 'Art Exhibition', '2022-12-10', 'Alice Brown') ON DUPLICATE KEY UPDATE event_name = 'Art Exhibition', event_date = '2022-12-10', attendee_name = 'Alice Brown';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (3, 301, 3, 'Alice Brown') ON DUPLICATE KEY UPDATE room_number = 301, seat_number = 3, attendee_name = 'Alice Brown';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (3, 'Art Exhibition', '2022-12-10', 80) ON DUPLICATE KEY UPDATE event_name = 'Art Exhibition', event_date = '2022-12-10', available_seats = 80;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (3, 301, 100) ON DUPLICATE KEY UPDATE room_number = 301, capacity = 100;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (4, 'Theater Play', '2022-12-25', 'Tom Green') ON DUPLICATE KEY UPDATE event_name = 'Theater Play', event_date = '2022-12-25', attendee_name = 'Tom Green';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (4, 401, 4, 'Tom Green') ON DUPLICATE KEY UPDATE room_number = 401, seat_number = 4, attendee_name = 'Tom Green';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (4, 'Theater Play', '2022-12-25', 120) ON DUPLICATE KEY UPDATE event_name = 'Theater Play', event_date = '2022-12-25', available_seats = 120;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (4, 401, 120) ON DUPLICATE KEY UPDATE room_number = 401, capacity = 120;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO EventBookings (booking_id, event_name, event_date, attendee_name) VALUES (5, 'Dance Recital', '2023-01-05', 'Emily White') ON DUPLICATE KEY UPDATE event_name = 'Dance Recital', event_date = '2023-01-05', attendee_name = 'Emily White';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, room_number, seat_number, attendee_name) VALUES (5, 501, 5, 'Emily White') ON DUPLICATE KEY UPDATE room_number = 501, seat_number = 5, attendee_name = 'Emily White';",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, available_seats) VALUES (5, 'Dance Recital', '2023-01-05', 90) ON DUPLICATE KEY UPDATE event_name = 'Dance Recital', event_date = '2023-01-05', available_seats = 90;",
  "### TABLEDATA\n\nCREATE TABLE EventBookings (\n    booking_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE SeatingArrangements (\n    seating_id INT PRIMARY KEY,\n    room_number INT,\n    seat_number INT,\n    attendee_name VARCHAR(255)\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    available_seats INT\n);\n\nCREATE TABLE Rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_number, capacity) VALUES (5, 501, 100) ON DUPLICATE KEY UPDATE room_number = 501, capacity = 100;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (1, 'Birthday Party', '2022-07-15', 50) ON DUPLICATE KEY UPDATE event_name='Birthday Party', event_date='2022-07-15', event_capacity=50;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (1, 1, '2022-07-13', 'Alice Smith') ON DUPLICATE KEY UPDATE booking_date='2022-07-13', guest_name='Alice Smith';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (1, 'Alice Smith', 'alice@example.com') ON DUPLICATE KEY UPDATE guest_name='Alice Smith', guest_email='alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (1, 1, 1, 101) ON DUPLICATE KEY UPDATE event_id=1, guest_id=1, seat_number=101;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (1, 'Main Hall', 100) ON DUPLICATE KEY UPDATE room_name='Main Hall', room_capacity=100;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (2, 'Wedding', '2022-09-20', 150) ON DUPLICATE KEY UPDATE event_name='Wedding', event_date='2022-09-20', event_capacity=150;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (2, 2, '2022-09-18', 'Bob Johnson') ON DUPLICATE KEY UPDATE booking_date='2022-09-18', guest_name='Bob Johnson';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (2, 'Bob Johnson', 'bob@example.com') ON DUPLICATE KEY UPDATE guest_name='Bob Johnson', guest_email='bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (2, 2, 2, 201) ON DUPLICATE KEY UPDATE event_id=2, guest_id=2, seat_number=201;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (2, 'Banquet Hall', 200) ON DUPLICATE KEY UPDATE room_name='Banquet Hall', room_capacity=200;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (3, 'Conference', '2023-02-10', 80) ON DUPLICATE KEY UPDATE event_name='Conference', event_date='2023-02-10', event_capacity=80;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (3, 3, '2023-02-08', 'Carol Davis') ON DUPLICATE KEY UPDATE booking_date='2023-02-08', guest_name='Carol Davis';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (3, 'Carol Davis', 'carol@example.com') ON DUPLICATE KEY UPDATE guest_name='Carol Davis', guest_email='carol@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (3, 3, 3, 301) ON DUPLICATE KEY UPDATE event_id=3, guest_id=3, seat_number=301;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (3, 'Meeting Room', 50) ON DUPLICATE KEY UPDATE room_name='Meeting Room', room_capacity=50;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (4, 'Music Concert', '2023-05-25', 200) ON DUPLICATE KEY UPDATE event_name='Music Concert', event_date='2023-05-25', event_capacity=200;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (4, 4, '2023-05-23', 'David Wilson') ON DUPLICATE KEY UPDATE booking_date='2023-05-23', guest_name='David Wilson';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (4, 'David Wilson', 'david@example.com') ON DUPLICATE KEY UPDATE guest_name='David Wilson', guest_email='david@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (4, 4, 4, 401) ON DUPLICATE KEY UPDATE event_id=4, guest_id=4, seat_number=401;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (4, 'Auditorium', 300) ON DUPLICATE KEY UPDATE room_name='Auditorium', room_capacity=300;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (5, 'Holiday Party', '2023-12-20', 120) ON DUPLICATE KEY UPDATE event_name='Holiday Party', event_date='2023-12-20', event_capacity=120;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (1, 'Event 1', '2022-10-15', 100) ON DUPLICATE KEY UPDATE event_name='Event Updated 1', event_date='2022-10-16', event_capacity=150;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (1, 1, '2022-10-01', 'John Doe') ON DUPLICATE KEY UPDATE event_id=2, booking_date='2022-10-02', guest_name='Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (1, 'Alice', 'alice@example.com') ON DUPLICATE KEY UPDATE guest_name='Alice Updated', guest_email='alice.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (1, 1, 1, 101) ON DUPLICATE KEY UPDATE event_id=2, guest_id=2, seat_number=102;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (1, 'Room 1', 50) ON DUPLICATE KEY UPDATE room_name='Room Updated 1', room_capacity=60;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (2, 'Event 2', '2022-11-20', 120) ON DUPLICATE KEY UPDATE event_name='Event Updated 2', event_date='2022-11-21', event_capacity=150;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (2, 2, '2022-11-01', 'Jane Smith') ON DUPLICATE KEY UPDATE event_id=3, booking_date='2022-11-02', guest_name='Sarah Smith';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (2, 'Bob', 'bob@example.com') ON DUPLICATE KEY UPDATE guest_name='Bob Updated', guest_email='bob.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (2, 2, 2, 201) ON DUPLICATE KEY UPDATE event_id=3, guest_id=3, seat_number=202;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (2, 'Room 2', 70) ON DUPLICATE KEY UPDATE room_name='Room Updated 2', room_capacity=80;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (3, 'Event 3', '2022-12-25', 150) ON DUPLICATE KEY UPDATE event_name='Event Updated 3', event_date='2022-12-26', event_capacity=200;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (3, 3, '2022-12-01', 'David Brown') ON DUPLICATE KEY UPDATE event_id=4, booking_date='2022-12-02', guest_name='Emily Brown';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (3, 'Charlie', 'charlie@example.com') ON DUPLICATE KEY UPDATE guest_name='Charlie Updated', guest_email='charlie.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (3, 3, 3, 301) ON DUPLICATE KEY UPDATE event_id=4, guest_id=4, seat_number=302;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (3, 'Room 3', 100) ON DUPLICATE KEY UPDATE room_name='Room Updated 3', room_capacity=120;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (4, 'Event 4', '2023-01-10', 80) ON DUPLICATE KEY UPDATE event_name='Event Updated 4', event_date='2023-01-11', event_capacity=100;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (4, 4, '2023-01-01', 'Karen Green') ON DUPLICATE KEY UPDATE event_id=5, booking_date='2023-01-02', guest_name='Mike Green';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Guests (guest_id, guest_name, guest_email) VALUES (4, 'Diana', 'diana@example.com') ON DUPLICATE KEY UPDATE guest_name='Diana Updated', guest_email='diana.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO SeatingArrangements (seating_id, event_id, guest_id, seat_number) VALUES (4, 4, 4, 401) ON DUPLICATE KEY UPDATE event_id=5, guest_id=5, seat_number=402;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Rooms (room_id, room_name, room_capacity) VALUES (4, 'Room 4', 90) ON DUPLICATE KEY UPDATE room_name='Room Updated 4', room_capacity=110;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Events (event_id, event_name, event_date, event_capacity) VALUES (5, 'Event 5', '2023-02-14', 200) ON DUPLICATE KEY UPDATE event_name='Event Updated 5', event_date='2023-02-15', event_capacity=250;",
  "### TABLEDATA\n\nCREATE TABLE Events (event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_capacity INT NOT NULL\n);\n\nCREATE TABLE Bookings (booking_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  booking_date DATE NOT NULL,\n  guest_name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Guests (guest_id INT PRIMARY KEY,\n  guest_name VARCHAR(255) NOT NULL,\n  guest_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE SeatingArrangements (seating_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  guest_id INT NOT NULL,\n  seat_number INT NOT NULL\n);\n\nCREATE TABLE Rooms (room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  room_capacity INT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO Bookings (booking_id, event_id, booking_date, guest_name) VALUES (5, 5, '2023-02-01', 'Sam Watson') ON DUPLICATE KEY UPDATE event_id=6, booking_date='2023-02-02', guest_name='Emma Watson';"
]