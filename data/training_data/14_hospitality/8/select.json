[
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, revenue FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) AS average_revenue FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT SUM(revenue) AS total_revenue FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity_sold FROM sales_data GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, MAX(revenue) AS max_revenue FROM sales_data GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) AS average_revenue, MAX(quantity) AS max_quantity FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name LIKE '%shirt%';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT sale_date, SUM(revenue) AS total_revenue FROM sales_data GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, revenue FROM sales_data WHERE quantity > 5 AND revenue < 500;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date = '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE quantity IN (10, 20, 30);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) AS average_revenue, SUM(quantity) AS total_quantity FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date = '2022-01-01' AND revenue > 1000",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, SUM(revenue) FROM sales_data GROUP BY product_name HAVING SUM(revenue) > 5000",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT sale_id, product_name, quantity FROM sales_data WHERE quantity >= 10 AND revenue < 500",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT MAX(revenue) FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data ORDER BY sale_date DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, AVG(revenue) AS avg_revenue FROM sales_data GROUP BY product_name ORDER BY avg_revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name LIKE '%phone%'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT sale_date, SUM(revenue) FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY sale_date",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT sale_id, product_name, quantity FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-15'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-15'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE quantity = (SELECT MAX(quantity) FROM sales_data)",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE revenue > (SELECT AVG(revenue) FROM sales_data)",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_sales FROM sales_data GROUP BY product_name ORDER BY total_sales DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date = (SELECT MAX(sale_date) FROM sales_data)",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT AVG(revenue) FROM sales_data WHERE product_name = 'Laptop'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name IN ('Phone', 'Tablet')",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL(10, 2),\n    product_name TEXT,\n    quantity INT\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date, revenue * quantity AS total_sales FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country FROM hotels WHERE country='USA';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, revenue FROM hotels WHERE revenue > 10000;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM bookings;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, check_in_date, check_out_date FROM bookings WHERE hotel_id=1;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, total_amount FROM bookings WHERE check_in_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT city FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_bookings FROM bookings;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, SUM(total_amount) as total_revenue FROM bookings GROUP BY hotel_name;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels LEFT JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels RIGHT JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels INNER JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, AVG(revenue) as avg_revenue FROM hotels GROUP BY hotel_name HAVING AVG(revenue) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, SUM(total_amount) as total_spent FROM bookings GROUP BY guest_name ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT city, COUNT(*) as total_hotels FROM hotels GROUP BY city ORDER BY total_hotels DESC;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT MAX(revenue) as max_revenue FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT country FROM hotels ORDER BY country ASC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels WHERE hotel_id IN (1, 3, 5, 7, 9);",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels WHERE hotel_name LIKE '%Marriott%';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, revenue FROM hotels WHERE revenue > 100000",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels WHERE country = 'USA'",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, check_in_date, check_out_date FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, check_in_date, check_out_date, total_amount FROM bookings WHERE total_amount > 500",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, city, check_in_date, check_out_date, total_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id WHERE city = 'London'",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, check_in_date, check_out_date FROM bookings WHERE check_in_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, SUM(total_amount) AS total_revenue FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id GROUP BY hotel_name, city HAVING total_revenue > 50000",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, city, country, SUM(total_amount) AS total_booking_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id GROUP BY hotel_id, hotel_name, city, country ORDER BY total_booking_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, revenue FROM hotels WHERE revenue < 50000 ORDER BY revenue ASC",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, revenue FROM hotels WHERE revenue > 100000 ORDER BY revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, check_in_date, check_out_date, total_amount FROM bookings WHERE guest_name LIKE 'John%'",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, revenue FROM hotels WHERE revenue BETWEEN 50000 AND 100000 ORDER BY revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_bookings FROM bookings",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT city, COUNT(*) AS total_hotels FROM hotels GROUP BY city ORDER BY total_hotels DESC",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_id, hotel_name, city, check_in_date, check_out_date, total_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id WHERE check_out_date > '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, MAX(revenue) AS max_revenue FROM hotels GROUP BY hotel_name, city, country ORDER BY max_revenue DESC",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, check_in_date, check_out_date, total_amount FROM bookings WHERE check_out_date < '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, SUM(total_amount) AS total_booking_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id GROUP BY hotel_name, city, country HAVING total_booking_amount < 100000",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT hotel_name, city, country, AVG(revenue) AS avg_revenue FROM hotels GROUP BY hotel_name, city, country HAVING avg_revenue > 60000",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    city VARCHAR(100),\n    country VARCHAR(100),\n    revenue DECIMAL\n);\n\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    guest_name VARCHAR(255),\n    check_in_date DATE,\n    check_out_date DATE,\n    total_amount DECIMAL,\n    FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id)\n);\n\n### STATEMENT\n\nSELECT guest_name, check_in_date, check_out_date, total_amount FROM bookings WHERE total_amount < 1000",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, sale_amount FROM sales_data WHERE sale_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(sale_amount) AS total_sales FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM revenue_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, revenue_amount FROM revenue_data WHERE revenue_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(revenue_amount) AS max_revenue FROM revenue_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM trends_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description FROM trends_data WHERE trend_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_trends FROM trends_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, sale_amount FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(revenue_amount) AS avg_revenue FROM revenue_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_id, trend_name FROM trends_data WHERE trend_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(sale_amount) AS total_sales, AVG(sale_amount) AS avg_sale FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, revenue_amount FROM revenue_data ORDER BY revenue_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_date FROM trends_data ORDER BY trend_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT firm_name FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT firm_name FROM revenue_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT trend_name, trend_description FROM trends_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE firm_name = 'ABC Corp' AND sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM revenue_data WHERE revenue_date = (SELECT MAX(revenue_date) FROM revenue_data);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, sale_amount FROM sales_data WHERE sale_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS average_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales FROM sales_data WHERE firm_name = 'ABC Inc.';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, SUM(sale_amount) AS total_sales_amount FROM sales_data GROUP BY firm_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_name, trend_description FROM trends_data WHERE trend_date = '2021-10-15';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT firm_name FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(revenue_amount) AS max_revenue FROM revenue_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(sale_amount) AS min_sale_amount FROM sales_data WHERE sale_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(revenue_amount) AS average_revenue FROM revenue_data WHERE revenue_date > '2021-06-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, COUNT(*) AS total_revenues FROM revenue_data GROUP BY firm_name HAVING total_revenues > 3;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT trend_name FROM trends_data WHERE trend_description LIKE '%analysis%';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, sale_amount, sale_date FROM sales_data WHERE sale_amount > 5000 AND sale_date < '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, SUM(revenue_amount) AS total_revenue_amount FROM revenue_data GROUP BY firm_name HAVING total_revenue_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount, AVG(revenue_amount) AS avg_revenue_amount FROM sales_data INNER JOIN revenue_data ON sales_data.firm_name = revenue_data.firm_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data JOIN trends_data ON sales_data.firm_name = trends_data.trend_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT trend_name, COUNT(*) AS total_trends FROM trends_data WHERE trend_id IN (SELECT trend_id FROM sales_data WHERE sale_amount > 2000);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, COUNT(*) AS total_sales FROM sales_data WHERE sale_date = (SELECT MAX(sale_date) FROM sales_data);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT firm_name, SUM(sale_amount) AS total_sales_amount FROM sales_data WHERE sale_date BETWEEN '2021-01-01' AND '2021-06-30' GROUP BY firm_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\nCREATE TABLE revenue_data (\n    revenue_id UUID PRIMARY KEY,\n    firm_name VARCHAR(255),\n    revenue_amount DECIMAL,\n    revenue_date DATE\n);\n\nCREATE TABLE trends_data (\n    trend_id UUID PRIMARY KEY,\n    trend_name VARCHAR(255),\n    trend_description TEXT,\n    trend_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(revenue_amount) AS average_revenue FROM revenue_data WHERE revenue_date BETWEEN '2021-04-01' AND '2021-07-01';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, hotel_rating FROM hotels WHERE hotel_rating > 3;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM bookings;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT booking_id, total_amount FROM bookings WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, booking_date FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE phone_number LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT sale_date, sale_amount FROM sales WHERE sale_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, total_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number, email FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT booking_id, sale_date FROM bookings JOIN sales ON bookings.booking_id = sales.booking_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, hotel_rating, total_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, booking_date, total_amount, sale_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id JOIN sales ON bookings.booking_id = sales.booking_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE email NOT LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, total_amount, sale_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id JOIN sales ON bookings.booking_id = sales.booking_id WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT booking_id, sale_date, sale_amount FROM bookings JOIN sales ON bookings.booking_id = sales.booking_id WHERE sale_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, customer_name, email FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id JOIN sales ON bookings.booking_id = sales.booking_id JOIN customers ON sales.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, hotel_rating, location FROM hotels WHERE hotel_rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, hotel_rating FROM hotels WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM customers WHERE phone_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, hotel_rating FROM hotels WHERE hotel_rating BETWEEN 3 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location FROM hotels WHERE hotel_id IN (SELECT hotel_id FROM bookings);",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_id IN (SELECT customer_id FROM bookings);",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, hotel_rating FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers JOIN bookings ON customers.customer_id = bookings.hotel_id;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, total_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id WHERE total_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, booking_date FROM customers JOIN bookings ON customers.customer_id = bookings.hotel_id WHERE booking_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, hotel_rating, booking_date FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id WHERE booking_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number, total_amount FROM customers JOIN bookings ON customers.customer_id = bookings.hotel_id WHERE total_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, hotel_rating, total_amount FROM hotels JOIN bookings ON hotels.hotel_id = bookings.hotel_id WHERE total_amount BETWEEN 200 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number, booking_date FROM customers JOIN bookings ON customers.customer_id = bookings.hotel_id WHERE booking_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT hotel_name, location, hotel_rating, sale_amount FROM hotels JOIN sales ON hotels.hotel_id = sales.booking_id WHERE sale_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE hotels (\n    hotel_id INT PRIMARY KEY,\n    hotel_name VARCHAR(255),\n    location VARCHAR(255),\n    hotel_rating INT\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    hotel_id INT,\n    booking_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email VARCHAR(255),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    booking_id INT,\n    sale_date TIMESTAMP,\n    sale_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number, sale_date FROM customers JOIN sales ON customers.customer_id = sales.booking_id WHERE sale_date BETWEEN '2022-04-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_date, revenue FROM sales;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, quantity FROM orders;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sales_report;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_id, report_date, total_revenue FROM sales_report;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, revenue FROM sales WHERE sale_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id FROM orders WHERE order_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_date, total_revenue FROM sales_report WHERE report_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_date, revenue FROM sales LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, quantity FROM orders WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sales_report WHERE total_revenue >= 500;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, quantity FROM orders WHERE customer_id = 1 AND product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM sales JOIN customers ON sales.sale_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, product_name, price FROM customers JOIN products ON customers.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, revenue, total_revenue FROM customers JOIN sales_report ON customers.customer_id = sales_report.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price, quantity FROM products JOIN orders ON products.product_id = orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, total_revenue FROM sales JOIN sales_report ON sales.sale_id = sales_report.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, revenue FROM sales WHERE revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT report_id, report_date, total_revenue FROM sales_report WHERE total_revenue < 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_name LIKE '%chair%';",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, revenue FROM sales WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, total_revenue FROM customers JOIN sales_report ON customers.customer_id = sales_report.sale_id WHERE total_revenue > 3000;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price >= 50 ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, SUM(revenue) AS total_revenue FROM customers JOIN sales_report ON customers.customer_id = sales_report.sale_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM products JOIN orders ON products.product_id = orders.product_id GROUP BY product_name ORDER BY total_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, MAX(revenue) AS max_revenue FROM customers JOIN sales_report ON customers.customer_id = sales_report.sale_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, AVG(price) AS avg_price FROM products GROUP BY product_id, product_name HAVING AVG(price) > 50;",
  "### TABLEDATA\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    revenue DECIMAL\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    quantity INT\n);\n\nCREATE TABLE sales_report (\n    report_id INT PRIMARY KEY,\n    sale_id INT,\n    report_date DATE,\n    total_revenue DECIMAL\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(quantity) AS total_quantity FROM orders GROUP BY customer_id HAVING total_quantity > 10;"
]