[
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_name, member_email FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points FROM loyalty_program WHERE member_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE member_tier = 'Silver';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_email FROM loyalty_program WHERE member_phone LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_members FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(member_points) AS average_points FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(member_points) AS max_points, MIN(member_points) AS min_points FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_name, CASE WHEN member_points > 100 THEN 'Loyal' ELSE 'Regular' END AS loyalty_status FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, CONCAT(member_name, ' - ', member_email) AS full_details FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, CONCAT(SUBSTRING(member_name, 1, 3), '****') AS masked_name FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT member_tier FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name FROM loyalty_program ORDER BY member_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name FROM loyalty_program ORDER BY member_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program ORDER BY member_points DESC LIMIT 3 OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE member_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE member_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE member_email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name FROM loyalty_program WHERE member_points > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_email FROM loyalty_program WHERE member_points BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_members FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_email, member_points FROM loyalty_program WHERE member_tier = 'Gold';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program ORDER BY member_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, CONCAT(member_email, ' : ', member_phone) AS contact_info FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_tier, MAX(member_points) AS max_points FROM loyalty_program GROUP BY member_tier;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(member_points) AS avg_points, MAX(member_points) AS max_points, MIN(member_points) AS min_points FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points*10 AS points_multiplier FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT(member_tier) FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points FROM loyalty_program WHERE member_tier = 'Silver' OR member_tier = 'Gold';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_phone FROM loyalty_program WHERE member_email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points FROM loyalty_program WHERE member_points >= (SELECT MAX(member_points) FROM loyalty_program);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points FROM loyalty_program WHERE member_points IN (SELECT MIN(member_points) FROM loyalty_program);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT member_tier) AS total_tiers FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points FROM loyalty_program WHERE member_tier LIKE '%Tier%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, member_points FROM loyalty_program WHERE member_tier IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, CHAR_LENGTH(member_name) AS name_length, member_points FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    member_id INT PRIMARY KEY,\n    member_name VARCHAR(255),\n    member_email VARCHAR(255),\n    member_phone VARCHAR(20),\n    member_points INT,\n    member_tier VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT member_id, member_tier, RANK() OVER (ORDER BY member_points DESC) AS tier_rank FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, member_name FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, points_balance FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, reward_name FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_description FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, points_balance FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, reward_name, expiration_date FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, expiration_date FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, member_name, points_balance FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE points_balance > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM rewards WHERE expiration_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE member_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, member_name FROM loyalty_program WHERE points_balance < 50;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, points_balance FROM loyalty_program WHERE member_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM rewards WHERE reward_name LIKE '%Discount%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, reward_name FROM rewards WHERE expiration_date < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, member_name, points_balance FROM loyalty_program WHERE member_id < 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM rewards WHERE loyalty_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE points_balance BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program WHERE points_balance > 100",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_name, points_balance FROM loyalty_program WHERE member_id = 3",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, expiration_date FROM rewards WHERE loyalty_id = 5",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_name, points_balance, reward_name FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_name, points_balance, reward_name, expiration_date FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id WHERE points_balance > 200",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, reward_description FROM rewards WHERE expiration_date > '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_name, points_balance, reward_name, expiration_date FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id WHERE points_balance > 50 AND expiration_date > '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_name, points_balance, reward_name, expiration_date FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id ORDER BY points_balance DESC",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_rewards FROM rewards",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(points_balance) as total_points FROM loyalty_program",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(points_balance) as avg_points FROM loyalty_program",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(points_balance) as max_points FROM loyalty_program",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(points_balance) as min_points FROM loyalty_program",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, COUNT(*) as total_rewards FROM rewards GROUP BY member_id",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, SUM(points_balance) as total_points FROM loyalty_program GROUP BY loyalty_id",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, AVG(points_balance) as avg_points FROM loyalty_program GROUP BY member_id",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, COUNT(*) as total_rewards FROM rewards GROUP BY reward_name",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT reward_name, AVG(rewards.points_balance) as avg_points FROM rewards JOIN loyalty_program ON rewards.loyalty_id = loyalty_program.loyalty_id GROUP BY reward_name",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT loyalty_id, member_name, SUM(points_balance) as total_points FROM loyalty_program GROUP BY loyalty_id, member_name HAVING SUM(points_balance) > 200",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    loyalty_id INT PRIMARY KEY,\n    member_id INT,\n    member_name VARCHAR(50),\n    points_balance INT\n);\n\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    loyalty_id INT,\n    reward_name VARCHAR(50),\n    reward_description TEXT,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT member_id, reward_name, SUM(points_balance) as total_points FROM loyalty_program JOIN rewards ON loyalty_program.loyalty_id = rewards.loyalty_id GROUP BY member_id, reward_name HAVING SUM(points_balance) > 100",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT loyalty_program_id, program_name FROM loyalty_programs WHERE start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name, last_name, email FROM members WHERE loyalty_program_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, value FROM rewards WHERE value > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM loyalty_programs WHERE end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM members WHERE member_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, value, expiry_date FROM rewards WHERE expiry_date < '2023-06-30';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM members WHERE first_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rewards WHERE reward_name LIKE '%points%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM members WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT loyalty_program_id, program_name, start_date, end_date FROM loyalty_programs WHERE start_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM members WHERE loyalty_program_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name, last_name FROM members WHERE last_name = 'Smith';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, value, expiry_date FROM rewards WHERE expiry_date > '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name FROM loyalty_programs WHERE program_name LIKE '%Gold%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name, last_name, email FROM members WHERE member_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, value FROM rewards WHERE value < 100.00;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE loyalty_program_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM members WHERE email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date FROM loyalty_programs WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM members JOIN loyalty_programs ON members.loyalty_program_id = loyalty_programs.loyalty_program_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name, last_name, email FROM members WHERE loyalty_program_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, value FROM rewards WHERE expiry_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE program_name LIKE '%Gold%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, program_name FROM members JOIN loyalty_programs ON members.loyalty_program_id = loyalty_programs.loyalty_program_id WHERE start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, value FROM rewards JOIN members ON rewards.member_id = members.member_id WHERE members.member_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT program_name FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name, last_name, email FROM members WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(member_id) AS total_members FROM loyalty_programs JOIN members ON loyalty_programs.loyalty_program_id = members.loyalty_program_id GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, SUM(value) AS total_value FROM rewards GROUP BY reward_name HAVING total_value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM members WHERE loyalty_program_id IN (SELECT loyalty_program_id FROM loyalty_programs WHERE program_name LIKE '%Platinum%');",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(member_id) AS total_members FROM loyalty_programs JOIN members ON loyalty_programs.loyalty_program_id = members.loyalty_program_id GROUP BY program_name HAVING COUNT(member_id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rewards WHERE expiry_date < CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT loyalty_program_id, COUNT(member_id) AS total_members FROM loyalty_programs JOIN members ON loyalty_programs.loyalty_program_id = members.loyalty_program_id GROUP BY loyalty_program_id HAVING total_members > 5;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT MAX(value) AS highest_reward_value FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM members ORDER BY first_name ASC, last_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, MIN(start_date) AS earliest_start_date FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, MAX(end_date) AS latest_end_date FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    loyalty_program_id INT PRIMARY KEY,\n    program_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE members (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    loyalty_program_id INT,\n    FOREIGN KEY (loyalty_program_id) REFERENCES loyalty_programs(loyalty_program_id)\n);\n\nCREATE TABLE rewards (\n    reward_id INT PRIMARY KEY,\n    reward_name VARCHAR(255) NOT NULL,\n    value DECIMAL(10,2) NOT NULL,\n    expiry_date DATE,\n    member_id INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, LAST_INSERT_ID() AS last_inserted_id FROM members WHERE member_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, start_date, end_date, description FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM members;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name, last_name, email, join_date FROM members;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name, points_required, description, expiration_date FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT transaction_id, member_id, transaction_date, points_earned, points_redeemed FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, join_date FROM members;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, points_required, expiration_date FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT transaction_date, points_earned, points_redeemed FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT member_id, first_name FROM members;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_id, reward_name FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT transaction_id, member_id FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, description FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM members;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, points_required, expiration_date, description FROM rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT transaction_date, points_earned FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date, description FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date FROM loyalty_program WHERE end_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT m.first_name, m.last_name, r.reward_name FROM members m JOIN rewards r ON m.member_id = r.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_date, t.points_earned, t.points_redeemed, m.first_name, m.last_name FROM transactions t JOIN members m ON t.member_id = m.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, start_date FROM loyalty_program WHERE end_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT program_name FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.points_earned, t.points_redeemed, m.first_name, m.last_name, r.reward_name FROM transactions t JOIN members m ON t.member_id = m.member_id JOIN rewards r ON t.points_earned >= r.points_required;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT m.first_name, m.last_name, COUNT(t.transaction_id) AS transaction_count FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, description FROM loyalty_program WHERE description LIKE '%loyalty%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, start_date, COALESCE(end_date, 'Ongoing') AS end_date FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT m.first_name, m.last_name, SUM(t.points_earned) AS total_points_earned, SUM(t.points_redeemed) AS total_points_redeemed FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT m.first_name, m.last_name, MAX(t.transaction_date) AS latest_transaction_date FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(DISTINCT m.member_id) AS total_members FROM loyalty_program JOIN members m ON m.program_id = loyalty_program.program_id GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, start_date, 'Active' AS status FROM loyalty_program WHERE CURRENT_DATE BETWEEN start_date AND COALESCE(end_date, CURRENT_DATE);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_date, t.points_earned, t.points_redeemed, m.first_name, m.last_name, r.reward_name FROM transactions t JOIN members m ON t.member_id = m.member_id JOIN rewards r ON t.points_redeemed >= r.points_required;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, SUM(r.points_required) AS total_points_required FROM loyalty_program JOIN rewards r ON r.program_id = loyalty_program.program_id GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT m.first_name, m.last_name, AVG(t.points_earned) AS avg_points_earned, AVG(t.points_redeemed) AS avg_points_redeemed FROM members m LEFT JOIN transactions t ON m.member_id = t.member_id GROUP BY m.first_name, m.last_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, description, CASE WHEN end_date > start_date THEN 'Open' ELSE 'Closed' END AS program_status FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id UUID PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE members (\n    member_id UUID PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    join_date DATE NOT NULL\n);\n\nCREATE TABLE rewards (\n    reward_id UUID PRIMARY KEY,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT NOT NULL,\n    description TEXT,\n    expiration_date DATE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    member_id UUID NOT NULL,\n    transaction_date DATE NOT NULL,\n    points_earned INT NOT NULL,\n    points_redeemed INT,\n    FOREIGN KEY (member_id) REFERENCES members(member_id)\n);\n\n### STATEMENT\n\nSELECT program_name, COUNT(t.transaction_id) AS total_transactions FROM loyalty_program JOIN members m ON m.program_id = loyalty_program.program_id JOIN transactions t ON m.member_id = m.member_id GROUP BY program_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM member;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM member;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM member_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT member_id, reward_name, points_required FROM member_rewards;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM transaction;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT transaction_date, amount FROM transaction;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM transaction_history;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT description FROM transaction_history;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT program_name, start_date, end_date FROM loyalty_program WHERE program_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM member WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, points_required FROM member_rewards WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT transaction_date, amount FROM transaction WHERE member_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT description FROM transaction_history WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, start_date, end_date FROM loyalty_program ORDER BY start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM member ORDER BY last_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT reward_name, points_required FROM member_rewards ORDER BY points_required DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT transaction_date, amount FROM transaction ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT description FROM transaction_history ORDER BY transaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name FROM loyalty_program WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM member WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM member WHERE last_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM member_rewards WHERE points_required <= 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT * FROM transaction WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_date, t.amount, m.first_name, m.last_name FROM transaction t, member m WHERE t.member_id = m.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_date, th.description FROM transaction t JOIN transaction_history th ON t.transaction_id = th.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT lp.program_id, lp.program_name, m.first_name, m.last_name FROM loyalty_program lp INNER JOIN member m ON lp.program_id = m.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT mr.reward_id, mr.reward_name, m.first_name, m.last_name FROM member_rewards mr INNER JOIN member m ON mr.member_id = m.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.transaction_date, m.first_name, m.last_name, tr.reward_name FROM transaction t JOIN member m ON t.member_id = m.member_id JOIN member_rewards tr ON m.member_id = tr.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT th.history_id, th.transaction_date, t.amount, t.transaction_date FROM transaction_history th JOIN transaction t ON th.transaction_id = t.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT lp.program_id, lp.program_name, m.first_name, m.last_name, tr.reward_name FROM loyalty_program lp JOIN member m ON lp.program_id = m.member_id JOIN member_rewards tr ON m.member_id = tr.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT th.history_id, th.description, t.transaction_date, amounts.amount FROM transaction_history th JOIN transaction t ON th.transaction_id = t.transaction_id JOIN (SELECT transaction_id, SUM(amount) AS amount FROM transaction GROUP BY transaction_id) amounts ON t.transaction_id = amounts.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT m.first_name, m.last_name FROM member m JOIN transaction t ON m.member_id = t.member_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT lp.program_id, m.first_name, COUNT(tr.reward_id) AS total_rewards FROM loyalty_program lp INNER JOIN member m ON lp.program_id = m.member_id INNER JOIN member_rewards tr ON m.member_id = tr.member_id GROUP BY lp.program_id, m.first_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT program_id, program_name, CASE WHEN start_date < '2022-06-01' THEN 'Active' ELSE 'Inactive' END AS status FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT m.first_name, tr.reward_name, SUM(tr.points_required) AS total_points FROM member m JOIN member_rewards tr ON m.member_id = tr.member_id GROUP BY m.first_name, tr.reward_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT lp.program_id, m.first_name, m.last_name, COUNT(*) AS total_transactions FROM loyalty_program lp JOIN member m ON lp.program_id = m.member_id JOIN transaction t ON m.member_id = t.member_id GROUP BY lp.program_id, m.first_name, m.last_name;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_program (\n    program_id INT PRIMARY KEY,\n    program_name VARCHAR(50) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE member (\n    member_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE member_rewards (\n    reward_id INT PRIMARY KEY,\n    member_id INT,\n    reward_name VARCHAR(50) NOT NULL,\n    points_required INT,\n    expiration_date DATE,\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction (\n    transaction_id INT PRIMARY KEY,\n    member_id INT,\n    transaction_date TIMESTAMP,\n    amount DECIMAL(10,2),\n    FOREIGN KEY (member_id) REFERENCES member(member_id)\n);\n\nCREATE TABLE transaction_history (\n    history_id INT PRIMARY KEY,\n    transaction_id INT,\n    transaction_date TIMESTAMP,\n    description TEXT,\n    FOREIGN KEY (transaction_id) REFERENCES transaction(transaction_id)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.amount, t.transaction_date, AVG(t.amount) OVER() AS avg_amount FROM transaction t;"
]