[
  "### TABLEDATA\n\nCREATE TABLE TicketSales (\n  ticket_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  seat_section VARCHAR(50) NOT NULL,\n  seat_number INTEGER NOT NULL\n)\n\n### STATEMENT\n\nUPDATE TicketSales SET ticket_price = 75.00 WHERE event_name = 'Concert'",
  "### TABLEDATA\n\nCREATE TABLE TicketSales (\n  ticket_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  seat_section VARCHAR(50) NOT NULL,\n  seat_number INTEGER NOT NULL\n)\n\n### STATEMENT\n\nUPDATE TicketSales SET seat_section = 'VIP' WHERE event_name = 'Theater Play'",
  "### TABLEDATA\n\nCREATE TABLE TicketSales (\n  ticket_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  seat_section VARCHAR(50) NOT NULL,\n  seat_number INTEGER NOT NULL\n)\n\n### STATEMENT\n\nUPDATE TicketSales SET seat_section = 'General' WHERE event_name = 'Sports Event'",
  "### TABLEDATA\n\nCREATE TABLE TicketSales (\n  ticket_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  seat_section VARCHAR(50) NOT NULL,\n  seat_number INTEGER NOT NULL\n)\n\n### STATEMENT\n\nUPDATE TicketSales SET ticket_price = 50.00 WHERE event_name = 'Concert' AND seat_section = 'VIP'",
  "### TABLEDATA\n\nCREATE TABLE TicketSales (\n  ticket_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  seat_section VARCHAR(50) NOT NULL,\n  seat_number INTEGER NOT NULL\n)\n\n### STATEMENT\n\nUPDATE TicketSales SET event_date = '2022-12-31' WHERE event_name = 'Sports Match' AND seat_number BETWEEN 1 AND 100",
  "### TABLEDATA\n\nCREATE TABLE TicketSales (\n  ticket_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  ticket_price DECIMAL(10, 2) NOT NULL,\n  seat_section VARCHAR(50) NOT NULL,\n  seat_number INTEGER NOT NULL\n)\n\n### STATEMENT\n\nUPDATE TicketSales SET seat_section = 'General Admission', ticket_price = 30.00 WHERE ticket_id = 5",
  "### TABLEDATA\n\nCREATE TABLE EventTickets (\n    ticket_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    ticket_price DECIMAL,\n    seat_number INT\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number INT UNIQUE,\n    seat_section VARCHAR(50),\n    seat_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE EventTickets SET ticket_price = 50 WHERE ticket_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE EventTickets (\n    ticket_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    ticket_price DECIMAL,\n    seat_number INT\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number INT UNIQUE,\n    seat_section VARCHAR(50),\n    seat_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE SeatingArrangements SET seat_section = 'VIP' WHERE seat_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE EventTickets (\n    ticket_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    ticket_price DECIMAL,\n    seat_number INT\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number INT UNIQUE,\n    seat_section VARCHAR(50),\n    seat_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE EventTickets SET event_name = 'Music Concert' WHERE ticket_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE EventTickets (\n    ticket_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    ticket_price DECIMAL,\n    seat_number INT\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number INT UNIQUE,\n    seat_section VARCHAR(50),\n    seat_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE EventTickets SET ticket_price = ticket_price * 1.1 WHERE ticket_price > 100",
  "### TABLEDATA\n\nCREATE TABLE EventTickets (\n    ticket_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    ticket_price DECIMAL,\n    seat_number INT\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number INT UNIQUE,\n    seat_section VARCHAR(50),\n    seat_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE EventTickets SET seat_number = (SELECT seat_number FROM SeatingArrangements WHERE seat_id = 1) WHERE ticket_id = 1",
  "### TABLEDATA\n\nCREATE TABLE EventTickets (\n    ticket_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    ticket_price DECIMAL,\n    seat_number INT\n);\n\n\nCREATE TABLE SeatingArrangements (\n    seat_id INT PRIMARY KEY,\n    seat_number INT UNIQUE,\n    seat_section VARCHAR(50),\n    seat_status VARCHAR(10)\n);\n\n### STATEMENT\n\nUPDATE SeatingArrangements SET seat_status = 'Booked' WHERE seat_number IN (SELECT seat_number FROM EventTickets WHERE ticket_id = 2)",
  "### TABLEDATA\n\nCREATE TABLE event (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE\n);\n\nCREATE TABLE ticket (\n  ticket_id INT PRIMARY KEY,\n  event_id INT,\n  seat_number VARCHAR(10),\n  price DECIMAL(10, 2),\n  FOREIGN KEY (event_id) REFERENCES event(event_id)\n);\n\nCREATE TABLE customer (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPDATE event SET event_name = 'New Event Name' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE event (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE\n);\n\nCREATE TABLE ticket (\n  ticket_id INT PRIMARY KEY,\n  event_id INT,\n  seat_number VARCHAR(10),\n  price DECIMAL(10, 2),\n  FOREIGN KEY (event_id) REFERENCES event(event_id)\n);\n\nCREATE TABLE customer (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPDATE ticket SET price = 29.99 WHERE ticket_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE event (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE\n);\n\nCREATE TABLE ticket (\n  ticket_id INT PRIMARY KEY,\n  event_id INT,\n  seat_number VARCHAR(10),\n  price DECIMAL(10, 2),\n  FOREIGN KEY (event_id) REFERENCES event(event_id)\n);\n\nCREATE TABLE customer (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPDATE customer SET email = 'newemail@example.com' WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE event (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE\n);\n\nCREATE TABLE ticket (\n  ticket_id INT PRIMARY KEY,\n  event_id INT,\n  seat_number VARCHAR(10),\n  price DECIMAL(10, 2),\n  FOREIGN KEY (event_id) REFERENCES event(event_id)\n);\n\nCREATE TABLE customer (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPDATE event SET event_name='Updated Event 1', event_date='2022-10-15' WHERE event_id=1;",
  "### TABLEDATA\n\nCREATE TABLE event (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE\n);\n\nCREATE TABLE ticket (\n  ticket_id INT PRIMARY KEY,\n  event_id INT,\n  seat_number VARCHAR(10),\n  price DECIMAL(10, 2),\n  FOREIGN KEY (event_id) REFERENCES event(event_id)\n);\n\nCREATE TABLE customer (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPDATE ticket SET price=99.99 WHERE ticket_id=1;",
  "### TABLEDATA\n\nCREATE TABLE event (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255),\n  event_date DATE\n);\n\nCREATE TABLE ticket (\n  ticket_id INT PRIMARY KEY,\n  event_id INT,\n  seat_number VARCHAR(10),\n  price DECIMAL(10, 2),\n  FOREIGN KEY (event_id) REFERENCES event(event_id)\n);\n\nCREATE TABLE customer (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  email VARCHAR(255),\n  phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nUPDATE customer SET email='updated_email@example.com' WHERE customer_id=1;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_date DATE,\n    total_seats INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    event_id INT,\n    customer_id INT,\n    num_tickets INT,\n    booking_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = 75.00 WHERE ticket_id = 1234;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_date DATE,\n    total_seats INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    event_id INT,\n    customer_id INT,\n    num_tickets INT,\n    booking_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE events SET event_date = '2023-12-31' WHERE event_id = 5678;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_date DATE,\n    total_seats INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    event_id INT,\n    customer_id INT,\n    num_tickets INT,\n    booking_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE customers SET phone_number = '+1-555-123-4567' WHERE customer_id = 7890;",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_date DATE,\n    total_seats INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    event_id INT,\n    customer_id INT,\n    num_tickets INT,\n    booking_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE tickets SET ticket_price = ticket_price * 1.1 WHERE ticket_price < 100",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_date DATE,\n    total_seats INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    event_id INT,\n    customer_id INT,\n    num_tickets INT,\n    booking_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE events SET total_seats = total_seats - 1 WHERE event_id = 123",
  "### TABLEDATA\n\nCREATE TABLE tickets (\n    ticket_id INT PRIMARY KEY,\n    event_id INT,\n    seat_number INT,\n    ticket_price DECIMAL(10, 2)\n);\n\nCREATE TABLE events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(50),\n    event_date DATE,\n    total_seats INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE bookings (\n    booking_id INT PRIMARY KEY,\n    event_id INT,\n    customer_id INT,\n    num_tickets INT,\n    booking_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE customers SET phone_number = '123-456-7890' WHERE customer_id = 456",
  "### TABLEDATA\n\nCREATE TABLE Event (\n  event_id SERIAL PRIMARY KEY,\n  event_name TEXT NOT NULL,\n  event_date DATE NOT NULL\n);\n\n\nCREATE TABLE Venue (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name TEXT NOT NULL,\n  capacity INT NOT NULL\n);\n\n\nCREATE TABLE Ticket (\n  ticket_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  seat_number TEXT NOT NULL,\n  price DECIMAL NOT NULL\n);\n\n\nCREATE TABLE Customer (\n  customer_id SERIAL PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT NOT NULL\n);\n\n\nCREATE TABLE Booking (\n  booking_id SERIAL PRIMARY KEY,\n  customer_id INT NOT NULL,\n  ticket_id INT NOT NULL,\n  booking_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Event SET event_date = '2023-10-15' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n  event_id SERIAL PRIMARY KEY,\n  event_name TEXT NOT NULL,\n  event_date DATE NOT NULL\n);\n\n\nCREATE TABLE Venue (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name TEXT NOT NULL,\n  capacity INT NOT NULL\n);\n\n\nCREATE TABLE Ticket (\n  ticket_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  seat_number TEXT NOT NULL,\n  price DECIMAL NOT NULL\n);\n\n\nCREATE TABLE Customer (\n  customer_id SERIAL PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT NOT NULL\n);\n\n\nCREATE TABLE Booking (\n  booking_id SERIAL PRIMARY KEY,\n  customer_id INT NOT NULL,\n  ticket_id INT NOT NULL,\n  booking_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Venue SET capacity = 500 WHERE venue_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n  event_id SERIAL PRIMARY KEY,\n  event_name TEXT NOT NULL,\n  event_date DATE NOT NULL\n);\n\n\nCREATE TABLE Venue (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name TEXT NOT NULL,\n  capacity INT NOT NULL\n);\n\n\nCREATE TABLE Ticket (\n  ticket_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  seat_number TEXT NOT NULL,\n  price DECIMAL NOT NULL\n);\n\n\nCREATE TABLE Customer (\n  customer_id SERIAL PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT NOT NULL\n);\n\n\nCREATE TABLE Booking (\n  booking_id SERIAL PRIMARY KEY,\n  customer_id INT NOT NULL,\n  ticket_id INT NOT NULL,\n  booking_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Ticket SET price = 50.00 WHERE ticket_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n  event_id SERIAL PRIMARY KEY,\n  event_name TEXT NOT NULL,\n  event_date DATE NOT NULL\n);\n\n\nCREATE TABLE Venue (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name TEXT NOT NULL,\n  capacity INT NOT NULL\n);\n\n\nCREATE TABLE Ticket (\n  ticket_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  seat_number TEXT NOT NULL,\n  price DECIMAL NOT NULL\n);\n\n\nCREATE TABLE Customer (\n  customer_id SERIAL PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT NOT NULL\n);\n\n\nCREATE TABLE Booking (\n  booking_id SERIAL PRIMARY KEY,\n  customer_id INT NOT NULL,\n  ticket_id INT NOT NULL,\n  booking_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Event SET event_date = '2023-12-31' WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n  event_id SERIAL PRIMARY KEY,\n  event_name TEXT NOT NULL,\n  event_date DATE NOT NULL\n);\n\n\nCREATE TABLE Venue (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name TEXT NOT NULL,\n  capacity INT NOT NULL\n);\n\n\nCREATE TABLE Ticket (\n  ticket_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  seat_number TEXT NOT NULL,\n  price DECIMAL NOT NULL\n);\n\n\nCREATE TABLE Customer (\n  customer_id SERIAL PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT NOT NULL\n);\n\n\nCREATE TABLE Booking (\n  booking_id SERIAL PRIMARY KEY,\n  customer_id INT NOT NULL,\n  ticket_id INT NOT NULL,\n  booking_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Venue SET capacity = 1000 WHERE venue_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Event (\n  event_id SERIAL PRIMARY KEY,\n  event_name TEXT NOT NULL,\n  event_date DATE NOT NULL\n);\n\n\nCREATE TABLE Venue (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name TEXT NOT NULL,\n  capacity INT NOT NULL\n);\n\n\nCREATE TABLE Ticket (\n  ticket_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  seat_number TEXT NOT NULL,\n  price DECIMAL NOT NULL\n);\n\n\nCREATE TABLE Customer (\n  customer_id SERIAL PRIMARY KEY,\n  first_name TEXT NOT NULL,\n  last_name TEXT NOT NULL,\n  email TEXT NOT NULL\n);\n\n\nCREATE TABLE Booking (\n  booking_id SERIAL PRIMARY KEY,\n  customer_id INT NOT NULL,\n  ticket_id INT NOT NULL,\n  booking_date DATE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Ticket SET price = 50.00 WHERE ticket_id = 1;"
]