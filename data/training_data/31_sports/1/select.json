[
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT * FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT match_id, home_team, away_team FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE match_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE home_score > away_score;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE match_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score, match_date FROM match_results ORDER BY match_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE home_team = 'Barcelona';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT COUNT(match_id) AS total_matches FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT AVG(home_score) AS avg_home_score, AVG(away_score) AS avg_away_score FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, SUM(home_score) AS total_home_goals, SUM(away_score) AS total_away_goals FROM match_results GROUP BY home_team;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT away_team, AVG(away_score - home_score) AS avg_margin FROM match_results GROUP BY away_team;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, COUNT(*) AS total_matches FROM match_results GROUP BY home_team HAVING total_matches > 5;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date, match_duration FROM match_results WHERE home_team LIKE 'Real%';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_duration FROM match_results WHERE match_duration > '1:30:00';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE match_date = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date, match_duration FROM match_results WHERE match_date = '2022-02-14' AND match_duration > '1:30:00';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE home_team IN ('Chelsea', 'Arsenal', 'Liverpool');",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE away_team = 'Manchester United';",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE away_score > home_score;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE match_id % 2 = 0;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date, match_duration FROM match_results WHERE home_score = 0 AND away_score = 0;",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT * FROM match_results WHERE home_score > 3 AND away_score < 2",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE match_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_matches FROM match_results",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT AVG(home_score) AS average_home_score FROM match_results WHERE home_team = 'Barcelona'",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results ORDER BY match_date DESC",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE home_team LIKE '%United%'",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE home_score < away_score",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, COUNT(*) AS total_matches FROM match_results GROUP BY home_team",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE match_date = CURDATE()",
  "### TABLEDATA\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT,\n    match_date DATE,\n    match_duration TIME\n)\n\n### STATEMENT\n\nSELECT home_team, away_team, match_date FROM match_results WHERE home_score = (SELECT MAX(home_score) FROM match_results)",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM games;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_date, home_team, away_team FROM games WHERE game_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, winning_team FROM games WHERE winning_team IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, score_home, score_away FROM games WHERE score_home > score_away;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team FROM games ORDER BY game_date;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, winning_team FROM games WHERE winning_team = 'Team A';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, score_home, score_away FROM games WHERE home_team = 'Team B';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT stats_id, game_id, team, goals_scored FROM statistics;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, goals_scored, goals_conceded FROM statistics WHERE goals_scored > goals_conceded;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, possession, fouls, yellow_cards FROM statistics WHERE fouls > 10;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, goals_scored, red_cards FROM statistics WHERE red_cards >= 2;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, score_home, score_away FROM games WHERE score_home = score_away;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, score_home, score_away FROM games WHERE score_home < 2 AND score_away < 2;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, score_home, score_away FROM games WHERE score_home >= 4 OR score_away >= 4;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, winning_team FROM games WHERE winning_team IN ('Team A', 'Team B');",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, winning_team FROM games WHERE winning_team LIKE 'Team %';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, SUM(goals_scored) AS total_goals FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, AVG(possession) AS avg_possession FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, MAX(goals_scored) AS max_goals_scored FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, MIN(goals_conceded) AS min_goals_conceded FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, COUNT(stats_id) AS total_stats FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM games WHERE game_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, winning_team FROM games WHERE score_home > score_away;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, score_home, score_away FROM games WHERE winning_team IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, SUM(score_home) AS total_goals FROM games GROUP BY home_team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, AVG(goals_scored) AS avg_goals FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, SUM(score_home) AS total_home_goals, AVG(score_home) AS avg_home_goals FROM games GROUP BY home_team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, SUM(goals_scored) AS total_goals_scored, SUM(goals_conceded) AS total_goals_conceded FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, COUNT(*) AS total_games FROM games GROUP BY home_team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, MAX(goals_scored) AS max_goals_scored FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM games ORDER BY game_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, SUM(yellow_cards) + SUM(red_cards) AS total_cards FROM statistics GROUP BY team HAVING total_cards > 5;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, MAX(score_home) AS max_home_score,  MAX(score_away) AS max_away_score FROM games;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, MIN(goals_scored) AS min_goals_scored FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team, winning_team, score_home, score_away FROM games WHERE game_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, AVG(possession) AS avg_possession FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, COUNT(*) AS total_home_games, AVG(score_home) AS avg_home_score FROM games GROUP BY home_team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, MAX(goals_scored) AS max_goals_scored, MIN(goals_scored) AS min_goals_scored FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM games WHERE home_team = 'Barcelona' OR away_team = 'Real Madrid';",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, COUNT(*) AS total_matches_played FROM statistics GROUP BY team HAVING total_matches_played > 5;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, SUM(score_home) AS total_home_goals, SUM(score_away) AS total_away_goals FROM games GROUP BY home_team, away_team ORDER BY total_home_goals DESC;",
  "### TABLEDATA\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    winning_team VARCHAR(50),\n    score_home INT,\n    score_away INT\n);\n\nCREATE TABLE statistics (\n    stats_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    team VARCHAR(50),\n    goals_scored INT,\n    goals_conceded INT,\n    possession DECIMAL,\n    fouls INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team, AVG(fouls) AS avg_fouls FROM statistics GROUP BY team;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT match_id, match_date, home_team, away_team, home_score, away_score FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team FROM match_results WHERE match_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM team_statistics;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_id, team_name, total_matches_played, total_wins FROM team_statistics;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_wins FROM team_statistics WHERE total_wins > 10;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_statistics;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, team_id, goals_scored FROM player_statistics;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored FROM player_statistics WHERE team_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE match_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_id, team_name, total_matches_played FROM team_statistics WHERE total_matches_played >= 20;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, assists FROM player_statistics WHERE assists > 5;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, home_score, away_score FROM match_results WHERE home_score > away_score;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_id, total_losses FROM team_statistics WHERE total_losses > 0;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, yellow_cards, red_cards FROM player_statistics WHERE yellow_cards >= 3 AND red_cards >= 1;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score + away_score AS total_goals FROM match_results;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_wins + total_draws AS total_points FROM team_statistics;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored, goals_scored * 100 AS goal_percentage FROM player_statistics;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results ORDER BY match_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_matches_played, total_wins, total_draws, total_losses FROM team_statistics ORDER BY total_wins DESC, total_losses ASC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT * FROM match_results WHERE match_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE home_score > away_score;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_matches_played FROM team_statistics ORDER BY total_matches_played DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored FROM player_statistics WHERE goals_scored > 5 ORDER BY goals_scored DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score + away_score AS total_goals FROM match_results ORDER BY total_goals DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_wins, total_losses FROM team_statistics WHERE total_wins > total_losses;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, assists, yellow_cards, red_cards FROM player_statistics WHERE assists > 0 AND (yellow_cards > 0 OR red_cards > 0);",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE home_score BETWEEN 2 AND 5 AND away_score > 0;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_matches_played, total_wins, total_losses FROM team_statistics WHERE total_matches_played >= 10;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored, assists FROM player_statistics WHERE goals_scored >= 10 OR assists >= 5;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE match_date >= '2022-06-01' AND match_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored, assists, yellow_cards, red_cards FROM player_statistics WHERE yellow_cards + red_cards > 5;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_wins, total_draws FROM team_statistics WHERE total_wins > 15 OR total_draws > 5;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_id, goals_scored FROM player_statistics WHERE goals_scored = (SELECT MAX(goals_scored) FROM player_statistics);",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE home_team <> away_team;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_matches_played, total_wins + total_draws AS total_points FROM team_statistics ORDER BY total_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored, assists, yellow_cards FROM player_statistics WHERE yellow_cards > 0 AND red_cards = 0;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM match_results WHERE home_team LIKE 'Real%' OR away_team LIKE 'Barcelona%';",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_matches_played, total_wins, (total_wins * 3) + total_draws AS total_points FROM team_statistics ORDER BY total_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE IF NOT EXISTS match_results (\n    match_id INT PRIMARY KEY,\n    match_date DATE,\n    home_team VARCHAR(50),\n    away_team VARCHAR(50),\n    home_score INT,\n    away_score INT\n);\n\nCREATE TABLE IF NOT EXISTS team_statistics (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50),\n    total_matches_played INT,\n    total_wins INT,\n    total_losses INT,\n    total_draws INT\n);\n\nCREATE TABLE IF NOT EXISTS player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50),\n    team_id INT,\n    goals_scored INT,\n    assists INT,\n    yellow_cards INT,\n    red_cards INT\n);\n\n### STATEMENT\n\nSELECT player_name, goals_scored, assists FROM player_statistics WHERE goals_scored + assists > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_results;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM player_statistics;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM team_standings;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM league_schedule;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM game_results;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_id, games_played, goals_scored FROM player_statistics;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points, wins, losses FROM team_standings;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_date, game_time, location, referee_id FROM league_schedule;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team FROM game_results WHERE home_score > away_score;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, team_id FROM player_statistics WHERE goals_scored > 5;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points, wins FROM team_standings WHERE wins > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_id, game_date, game_time, location FROM league_schedule WHERE location = 'Stadium A';",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_id, game_date, game_time, referee_id FROM league_schedule WHERE referee_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM game_results WHERE home_team = 'Team A';",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_id, games_played, goals_scored FROM player_statistics WHERE team_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points, wins, losses FROM team_standings WHERE total_points > 50;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_id, home_team, away_team FROM game_results WHERE home_team = 'Team B' OR away_team = 'Team C';",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_id, player_name, games_played, goals_scored FROM player_statistics WHERE games_played > 20;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points, wins, losses FROM team_standings WHERE wins < 5;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_id, game_date, game_time, location FROM league_schedule WHERE game_date > '2023-01-01' AND game_time < '15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM game_results;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, home_score, away_score FROM game_results WHERE home_score > away_score;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points FROM team_standings ORDER BY total_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, games_played, goals_scored FROM player_statistics WHERE goals_scored > 10;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT home_team, away_team, game_date, game_time FROM game_results INNER JOIN league_schedule ON game_results.game_id = league_schedule.game_id;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_name, games_played, goals_scored FROM player_statistics INNER JOIN team_standings ON player_statistics.team_id = team_standings.team_id;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, wins, losses FROM team_standings WHERE wins > losses;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT game_id, game_date, location, referee_id FROM league_schedule WHERE referee_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_games FROM game_results;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, SUM(total_points) AS total_points FROM team_standings GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, COUNT(games_played) AS total_games FROM player_statistics GROUP BY player_name HAVING total_games > 20;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, AVG(wins) AS avg_wins FROM team_standings GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_name, games_played, goals_scored FROM player_statistics WHERE games_played >= 20 AND goals_scored >= 5;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points, ROW_NUMBER() OVER(ORDER BY total_points DESC) AS ranking FROM team_standings;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_name, goals_scored, RANK() OVER(PARTITION BY team_name ORDER BY goals_scored DESC) AS goal_rank FROM player_statistics;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, total_points, LAG(total_points) OVER(ORDER BY total_points) AS prev_points FROM team_standings;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_teams, MAX(total_points) AS max_points FROM team_standings;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT team_name, COUNT(*) AS total_players FROM player_statistics INNER JOIN team_standings ON player_statistics.team_id = team_standings.team_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(home_score) AS avg_home_score, AVG(away_score) AS avg_away_score FROM game_results;",
  "### TABLEDATA\n\nCREATE TABLE game_results (\n    game_id INT PRIMARY KEY,\n    home_team VARCHAR(100),\n    away_team VARCHAR(100),\n    home_score INT,\n    away_score INT\n);\n\n\nCREATE TABLE player_statistics (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(100),\n    team_id INT,\n    games_played INT,\n    goals_scored INT\n);\n\n\nCREATE TABLE team_standings (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(100),\n    total_points INT,\n    wins INT,\n    losses INT\n);\n\n\nCREATE TABLE league_schedule (\n    game_id INT PRIMARY KEY,\n    game_date DATE,\n    game_time TIME,\n    location VARCHAR(100),\n    referee_id INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_name, games_played, goals_scored FROM player_statistics WHERE team_id IN (SELECT team_id FROM team_standings WHERE total_points > 50);",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT * FROM teams;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name FROM teams WHERE team_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, team_name FROM players JOIN teams ON players.team_id = teams.team_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT game_date, game_time FROM games;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, points_scored FROM players JOIN statistics ON players.player_id = statistics.player_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, COUNT(*) AS total_games FROM teams JOIN match_results ON teams.team_id = match_results.winner_team_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(points_scored) AS total_points FROM players JOIN statistics ON players.player_id = statistics.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT game_date, COUNT(*) AS total_matches FROM games JOIN match_results ON games.game_id = match_results.game_id GROUP BY game_date;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name AS winning_team, COUNT(*) AS total_wins FROM teams JOIN match_results ON teams.team_id = match_results.winner_team_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(points_scored) AS avg_points FROM players JOIN statistics ON players.player_id = statistics.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, MIN(points_scored) AS min_points FROM teams JOIN match_results ON teams.team_id = match_results.winner_team_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT game_date, MAX(points_scored) AS max_points FROM games JOIN match_results ON games.game_id = match_results.game_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY game_date;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(points_scored) AS total_points, SUM(rebounds) AS total_rebounds FROM players JOIN statistics ON players.player_id = statistics.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name AS winning_team, COUNT(*) AS total_wins, AVG(points_scored) AS avg_points FROM teams JOIN match_results ON teams.team_id = match_results.winner_team_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT game_date, COUNT(*) AS total_matches, MAX(points_scored) AS max_points FROM games JOIN match_results ON games.game_id = match_results.game_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY game_date;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, AVG(points_scored) AS avg_points, MIN(rebounds) AS min_rebounds FROM players JOIN statistics ON players.player_id = statistics.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name AS winning_team, COUNT(*) AS total_wins, SUM(assists) AS total_assists FROM teams JOIN match_results ON teams.team_id = match_results.winner_team_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT game_date, COUNT(*) AS total_matches, AVG(rebounds) AS avg_rebounds FROM games JOIN match_results ON games.game_id = match_results.game_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY game_date;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(points_scored) AS total_points, MAX(assists) AS max_assists FROM players JOIN statistics ON players.player_id = statistics.player_id GROUP BY player_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name AS winning_team, COUNT(*) AS total_wins, MIN(assists) AS min_assists FROM teams JOIN match_results ON teams.team_id = match_results.winner_team_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT game_date, COUNT(*) AS total_matches, SUM(rebounds) AS total_rebounds FROM games JOIN match_results ON games.game_id = match_results.game_id JOIN statistics ON match_results.match_id = statistics.match_id GROUP BY game_date;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT * FROM teams WHERE team_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, player_name FROM teams t INNER JOIN players p ON t.team_id = p.team_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, COUNT(player_id) AS total_players FROM teams t LEFT JOIN players p ON t.team_id = p.team_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, player_name, game_date FROM teams t INNER JOIN players p ON t.team_id = p.team_id INNER JOIN match_results m ON p.player_id = m.winner_team_id LEFT JOIN games g ON m.game_id = g.game_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT team_id) AS total_teams, SUM(points_scored) AS total_points FROM match_results mr INNER JOIN statistics s ON mr.match_id = s.match_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, AVG(points_scored) AS avg_points_scored FROM teams t INNER JOIN players p ON t.team_id = p.team_id INNER JOIN statistics s ON p.player_id = s.player_id GROUP BY team_name HAVING AVG(points_scored) > 50;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_matches, MIN(game_date) AS earliest_game_date FROM games;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, SUM(points_scored) AS total_points FROM teams t LEFT JOIN players p ON t.team_id = p.team_id LEFT JOIN statistics s ON p.player_id = s.player_id GROUP BY team_name HAVING SUM(points_scored) > 100;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(points_scored) AS total_points FROM players p INNER JOIN statistics s ON p.player_id = s.player_id GROUP BY player_name ORDER BY total_points DESC;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, AVG(points_scored) AS avg_points FROM teams t LEFT JOIN players p ON t.team_id = p.team_id LEFT JOIN statistics s ON p.player_id = s.player_id WHERE assists > 5 GROUP BY team_name HAVING avg_points > 70;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT t.team_name, p.player_name, g.game_date, m.winner_team_id, m.loser_team_id FROM teams t INNER JOIN players p ON t.team_id = p.team_id LEFT JOIN match_results m ON t.team_id = m.winner_team_id LEFT JOIN games g ON m.game_id = g.game_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT t.team_name, p.player_name, g.game_date, s.points_scored, s.rebounds, s.assists FROM teams t INNER JOIN players p ON t.team_id = p.team_id LEFT JOIN statistics s ON p.player_id = s.player_id LEFT JOIN match_results mr ON s.match_id = mr.match_id LEFT JOIN games g ON mr.game_id = g.game_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT t.team_name, COUNT(p.player_id) AS total_players, AVG(s.points_scored) AS avg_points_scored FROM teams t INNER JOIN players p ON t.team_id = p.team_id LEFT JOIN statistics s ON p.player_id = s.player_id GROUP BY t.team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, player_name, game_date, points_scored, rebounds, assists FROM teams t INNER JOIN players p ON t.team_id = p.team_id INNER JOIN match_results m ON p.player_id = m.winner_team_id LEFT JOIN games g ON m.game_id = g.game_id LEFT JOIN statistics s ON p.player_id = s.player_id;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT AVG(points_scored) AS avg_points, AVG(rebounds) AS avg_rebounds, AVG(assists) AS avg_assists FROM statistics;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_id, team_name, (SELECT COUNT(player_id) FROM players WHERE team_id = t.team_id) AS total_players FROM teams t;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, SUM(points_scored) AS total_points, AVG(assists) AS avg_assists FROM players p INNER JOIN statistics s ON p.player_id = s.player_id GROUP BY player_name HAVING AVG(assists) > 3;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, MAX(points_scored) AS max_points_scored, MIN(rebounds) AS min_rebounds FROM teams t LEFT JOIN players p ON t.team_id = p.team_id LEFT JOIN statistics s ON p.player_id = s.player_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT team_name, player_name, SUM(points_scored) AS total_points, SUM(rebounds) AS total_rebounds, SUM(assists) AS total_assists FROM teams t INNER JOIN players p ON t.team_id = p.team_id INNER JOIN statistics s ON p.player_id = s.player_id GROUP BY team_name, player_name;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT player_name, points_scored, rebounds, assists FROM players p INNER JOIN statistics s ON p.player_id = s.player_id WHERE points_scored > 20 AND rebounds > 5 AND assists > 3;",
  "### TABLEDATA\n\nCREATE TABLE teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n    player_id INT PRIMARY KEY,\n    player_name VARCHAR(50) NOT NULL,\n    team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE games (\n    game_id INT PRIMARY KEY,\n    game_date DATE NOT NULL,\n    game_time TIME NOT NULL\n);\n\nCREATE TABLE match_results (\n    match_id INT PRIMARY KEY,\n    game_id INT REFERENCES games(game_id),\n    winner_team_id INT REFERENCES teams(team_id),\n    loser_team_id INT REFERENCES teams(team_id)\n);\n\nCREATE TABLE statistics (\n    stat_id INT PRIMARY KEY,\n    player_id INT REFERENCES players(player_id),\n    match_id INT REFERENCES match_results(match_id),\n    points_scored INT,\n    rebounds INT,\n    assists INT\n);\n\n### STATEMENT\n\nSELECT MAX(points_scored) AS highest_score, MIN(points_scored) AS lowest_score, AVG(rebounds) AS avg_rebounds FROM statistics;"
]