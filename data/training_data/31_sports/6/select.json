[
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name, capacity FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE capacity > 5000;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE amenities IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(capacity) FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name, location FROM sports_venues WHERE capacity > 10000;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, location, amenities FROM sports_venues WHERE location IN ('Los Angeles', 'Chicago');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE capacity BETWEEN 8000 AND 12000;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, location FROM sports_venues WHERE amenities LIKE '%pool%';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, location, capacity FROM sports_venues ORDER BY capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS total_venues FROM sports_venues GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, location, amenities FROM sports_venues WHERE amenities LIKE '%wifi%' OR amenities LIKE '%parking%';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, capacity, location FROM sports_venues WHERE capacity < 5000 OR location = 'Dallas';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, location, amenities FROM sports_venues WHERE location = 'London' AND capacity > 15000;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE amenities NOT LIKE '%bar%';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT location, MAX(capacity) AS max_capacity FROM sports_venues GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, capacity, location FROM sports_venues WHERE location = 'Miami' AND amenities IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE capacity > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name FROM sports_venues WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE amenities LIKE '%pool%';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, capacity FROM sports_venues ORDER BY capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, location, COUNT(*) AS total_venues FROM sports_venues GROUP BY location HAVING total_venues > 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT location FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, location FROM sports_venues WHERE capacity BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_name, SUBSTRING(amenities, 1, 20) AS short_amenities FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, COUNT(*) AS total_venues FROM sports_venues GROUP BY venue_id HAVING total_venues > 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM sports_venues WHERE location IN ('Los Angeles', 'Chicago');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, LENGTH(venue_name) AS name_length FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name, capacity FROM sports_venues WHERE capacity < 5000 ORDER BY capacity ASC;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name FROM sports_venues WHERE LENGTH(venue_name) > 10;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(capacity) AS average_capacity FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name, capacity FROM sports_venues WHERE venue_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, venue_name FROM sports_venues WHERE venue_name NOT LIKE '%Stadium%';",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, location, LENGTH(amenities) AS amenities_length FROM sports_venues ORDER BY amenities_length DESC;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT venue_name, location FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT venue_id, location, amenities FROM sports_venues WHERE amenities IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nSELECT SUM(capacity) AS total_capacity FROM sports_venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, amenities FROM venues WHERE capacity > 500;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, venue_name FROM events INNER JOIN venues ON events.venue_id = venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity, location FROM venues WHERE amenities IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venue_amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT amenity_name FROM venue_amenities WHERE amenity_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, venue_name, capacity FROM events INNER JOIN venues ON events.venue_id = venues.venue_id WHERE event_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, venue_name FROM events INNER JOIN venues ON events.venue_id = venues.venue_id WHERE venue_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues WHERE capacity BETWEEN 200 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, location, amenities FROM venues WHERE location LIKE '%Beach%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events WHERE venue_id IN (SELECT venue_id FROM venues WHERE location = 'California');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity FROM venues WHERE venue_name = 'Convention Center';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, location FROM venues JOIN events ON venues.venue_id = events.venue_id WHERE event_date = '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events WHERE event_date < CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT venue_name FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, amenities FROM venues WHERE amenities LIKE '%WiFi%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues ORDER BY capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, amenities FROM venues WHERE amenities LIKE '%Parking%' AND capacity > 1000;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_id, venue_name FROM venues WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_id, v.venue_name, va.amenity_name FROM venues v JOIN venue_amenities va ON v.amenities ILIKE '%' || va.amenity_name || '%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues ORDER BY capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(e.event_id) AS num_events FROM venues v LEFT JOIN events e ON v.venue_id = e.venue_id GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, location FROM venues WHERE amenities IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, COUNT(event_id) AS num_events FROM venues v LEFT JOIN events e ON v.venue_id = e.venue_id GROUP BY venue_name HAVING COUNT(event_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, AVG(e.capacity) AS avg_capacity FROM venues v JOIN events e ON v.venue_id = e.venue_id GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, va.amenity_name FROM venues v LEFT JOIN venue_amenities va ON v.amenities ILIKE '%' || va.amenity_name || '%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, event_name, event_date FROM venues v JOIN events e ON v.venue_id = e.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, event_name, event_date FROM venues v JOIN events e ON v.venue_id = e.venue_id WHERE event_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, event_name FROM venues v JOIN events e ON v.venue_id = e.venue_id WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, va.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(e.event_id) AS num_events FROM venues v LEFT JOIN events e ON v.venue_id = e.venue_id WHERE location = 'New York' GROUP BY v.venue_name HAVING COUNT(e.event_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, event_name, event_date FROM venues v JOIN events e ON v.venue_id = e.venue_id WHERE event_date >= CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, event_name FROM venues v JOIN events e ON v.venue_id = e.venue_id WHERE capacity >= 200 AND event_date >= CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(event_id) AS num_events FROM events;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT event_name, venue_name, amenity_name FROM events e JOIN venues v ON e.venue_id = v.venue_id JOIN venue_amenities va ON v.amenities ILIKE '%' || va.amenity_name || '%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, MAX(capacity) AS max_capacity FROM venues GROUP BY venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, location FROM venues WHERE capacity > (SELECT AVG(capacity) FROM venues);",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, location FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity FROM venues WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, location, capacity FROM venues WHERE capacity > 1000;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT amenity_name FROM amenities WHERE description IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venue_amenities va JOIN venues v ON va.venue_id = v.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venue_amenities va JOIN venues v ON va.venue_id = v.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE v.location = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venue_amenities va JOIN venues v ON va.venue_id = v.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE a.description LIKE '%pool%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(a.amenity_name) as num_amenities FROM venue_amenities va JOIN venues v ON va.venue_id = v.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(a.amenity_name) as num_amenities FROM venue_amenities va JOIN venues v ON va.venue_id = v.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE v.capacity > 500 GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, AVG(v.capacity) as avg_capacity FROM venues v GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.location, SUM(v.capacity) as total_capacity FROM venues v GROUP BY v.location;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(va.amenity_id) as num_amenities FROM venues v LEFT JOIN venue_amenities va ON v.venue_id = va.venue_id GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, MAX(v.capacity) as max_capacity FROM venues v GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.location, MIN(v.capacity) as min_capacity FROM venues v GROUP BY v.location;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name, COUNT(va.amenity_id) as num_venues FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id GROUP BY v.venue_name, a.amenity_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name, COUNT(va.amenity_id) as num_venues FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE v.capacity > 500 GROUP BY v.venue_name, a.amenity_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name, COUNT(va.amenity_id) as num_venues FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE a.description IS NOT NULL GROUP BY v.venue_name, a.amenity_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.location, a.amenity_name, COUNT(va.amenity_id) as num_venues FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE va.venue_id = 'some_uuid' GROUP BY v.location, a.amenity_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT * FROM venues WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity FROM venues WHERE capacity > 500;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT va.venue_id, v.venue_name, a.amenity_name FROM venue_amenities va JOIN venues v ON va.venue_id = v.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(va.amenity_id) AS num_amenities FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id GROUP BY v.venue_name HAVING num_amenities > 2;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v LEFT JOIN venue_amenities va ON v.venue_id = va.venue_id LEFT JOIN amenities a ON va.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, AVG(va.amenity_id) AS avg_amenity_id FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id GROUP BY v.venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v CROSS JOIN amenities a;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v INNER JOIN venue_amenities va ON v.venue_id = va.venue_id INNER JOIN amenities a ON va.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name FROM venues v UNION SELECT a.amenity_name FROM amenities a;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE v.capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id ORDER BY v.capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id LIMIT 5 OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COALESCE(a.description, 'No description available') AS amenity_description FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, COUNT(va.amenity_id) AS num_amenities FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id GROUP BY v.venue_name ORDER BY num_amenities DESC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, SUM(v.capacity) AS total_capacity FROM venues v;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id GROUP BY v.venue_name, a.amenity_name HAVING COUNT(va.amenity_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE v.location LIKE '%Beach%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nSELECT v.venue_name, a.amenity_name FROM venues v JOIN venue_amenities va ON v.venue_id = va.venue_id JOIN amenities a ON va.amenity_id = a.amenity_id WHERE va.venue_id IN (SELECT venue_id FROM venues WHERE capacity > 200);",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM events;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM bookings;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT attendee_name, booking_date FROM bookings;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, location FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, venue_id FROM events;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT attendee_name, num_tickets FROM bookings;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT amenity_name FROM amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM venues WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, amenities FROM venues WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events WHERE venue_id = '1d8fadfb-745a-49c6-85f1-c9fa16505bf8';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT attendee_name, booking_date FROM bookings WHERE num_tickets >= 2;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM amenities WHERE amenity_id = 'a1c22a90-79aa-4851-8f71-b7f25acdf595';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM venues WHERE location LIKE '%beach%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity FROM venues ORDER BY capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date FROM events ORDER BY event_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM venues;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, capacity, location FROM venues WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, venue_name FROM events JOIN venues ON events.venue_id = venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, COUNT(event_id) AS num_events FROM venues LEFT JOIN events ON venues.venue_id = events.venue_id GROUP BY venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, amenities FROM venues WHERE amenities LIKE '%parking%';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, COUNT(booking_id) AS num_bookings FROM events LEFT JOIN bookings ON events.event_id = bookings.event_id GROUP BY event_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT booking_id, attendee_name, booking_date FROM bookings ORDER BY booking_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM amenities WHERE LENGTH(description) > 50;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_id, event_name FROM events WHERE event_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT booking_id, attendee_name, num_tickets FROM bookings WHERE num_tickets >= 5;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, venue_name, amenities FROM events JOIN venues ON events.venue_id = venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, COUNT(booking_id) AS total_bookings FROM venues LEFT JOIN events ON venues.venue_id = events.venue_id LEFT JOIN bookings ON events.event_id = bookings.event_id GROUP BY venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, AVG(capacity) AS avg_capacity FROM venues GROUP BY venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT event_name, event_date, venue_name, amenity_name FROM events JOIN venues ON events.venue_id = venues.venue_id JOIN amenities ON amenities.amenity_id = venues.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, amenities FROM venues WHERE JSON_CONTAINS(amenities, 'wifi');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT event_id) AS num_events FROM events;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, SUM(num_tickets) AS total_tickets FROM venues JOIN events ON venues.venue_id = events.venue_id JOIN bookings ON events.event_id = bookings.event_id GROUP BY venue_name;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT venue_name FROM events JOIN venues ON events.venue_id = venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT booking_id, COUNT(attendee_name) AS num_attendees FROM bookings GROUP BY booking_id HAVING num_attendees > 1;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nSELECT venue_name, COUNT(DISTINCT event_id) AS num_events FROM venues LEFT JOIN events ON venues.venue_id = events.venue_id GROUP BY venue_name;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Venues;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT name, location, capacity FROM Venues;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT venue_id, name, location, capacity FROM Venues WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Events;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, date FROM Events WHERE date >= '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Amenities;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM Amenities;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Teams;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, home_venue_id FROM Teams;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Spectators;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM Spectators;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT spectator_id, full_name, ticket_id FROM Spectators;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, date, venue_id FROM Events WHERE venue_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM Amenities WHERE amenity_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, home_venue_id FROM Teams WHERE team_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email, ticket_id FROM Spectators WHERE event_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Venues ORDER BY capacity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Events ORDER BY date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Amenities WHERE description LIKE '%indoor%';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, home_venue_id FROM Teams WHERE home_venue_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM Spectators WHERE ticket_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Venues WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM Venues;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_id, event_name, date FROM Events WHERE venue_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Amenities WHERE amenity_name LIKE 'Indoor%';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, Venues.name AS home_venue FROM Teams INNER JOIN Venues ON Teams.home_venue_id = Venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM Spectators WHERE event_id IN (SELECT event_id FROM Events WHERE date = '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Venues WHERE amenities IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, Venues.name, Spectators.full_name AS attendee FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id INNER JOIN Spectators ON Events.event_id = Spectators.event_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, Venues.name, COUNT(spectator_id) AS total_spectators FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id INNER JOIN Spectators ON Events.event_id = Spectators.event_id GROUP BY event_name, Venues.name;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, location, COUNT(spectator_id) AS total_spectators FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id INNER JOIN Spectators ON Events.event_id = Spectators.event_id GROUP BY event_name, location HAVING total_spectators > 100;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, venue_id FROM Teams WHERE venue_id IN (SELECT venue_id FROM Venues WHERE location = 'New York');",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name AS home_team, event_name AS match, location FROM Teams INNER JOIN Venues ON Teams.home_venue_id = Venues.venue_id INNER JOIN Events ON Teams.team_id = Events.event_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, COUNT(event_id) AS total_events FROM Teams INNER JOIN Events ON Teams.team_id = Events.venue_id GROUP BY team_name;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, venue_id, location, capacity FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id WHERE capacity >= 500;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email, event_name FROM Spectators INNER JOIN Events ON Spectators.event_id = Events.event_id WHERE date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, location, COUNT(spectator_id) AS total_spectators FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id INNER JOIN Spectators ON Events.event_id = Spectators.event_id WHERE location = 'Stadium' GROUP BY event_name, location;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT team_name, home_venue_id, Venues.location FROM Teams LEFT JOIN Venues ON Teams.home_venue_id = Venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email, event_name, Venues.location FROM Spectators INNER JOIN Events ON Spectators.event_id = Events.event_id INNER JOIN Venues ON Events.venue_id = Venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, date, venue_id, capacity, amenities FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT amenity_name, description FROM Amenities WHERE amenity_id NOT IN (SELECT amenity_id FROM Amenities WHERE description LIKE '%outdoor%');",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nSELECT event_name, Venues.name AS venue_name, COUNT(spectator_id) AS total_spectators FROM Events INNER JOIN Venues ON Events.venue_id = Venues.venue_id INNER JOIN Spectators ON Events.event_id = Spectators.event_id GROUP BY event_name, Venues.name HAVING total_spectators > 200;"
]