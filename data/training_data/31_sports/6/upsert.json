[
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (1, 'Stadium A', 50000, 'City A', 'Parking, Concessions');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (2, 'Arena B', 20000, 'City B', 'Restrooms, Wifi');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (3, 'Field C', 10000, 'City C', 'Scoreboard');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (4, 'Gymnasium D', 5000, 'City D', 'Locker Rooms, bleachers');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (5, 'Pool E', 1000, 'City E', 'Showers');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (6, 'Track F', 500, 'City F', 'Parking');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (7, 'Court G', 200, 'City G', 'Seating Area');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (8, 'Ice Rink H', 100, 'City H', 'Skate Rentals');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (9, 'Diamond I', 50, 'City I', 'Fencing');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (10, 'Pavilion J', 20, 'City J', 'Picnic Tables');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (11, 'Field K', 10, 'City K', 'Lights');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (12, 'Cage L', 5, 'City L', 'Netting');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (13, 'Course M', 8, 'City M', 'Obstacle Course');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (14, 'Arena N', 30, 'City N', 'Concessions, Restrooms');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (15, 'Stadium O', 100000, 'City O', 'VIP Suites');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (16, 'Field P', 15000, 'City P', 'Scoreboard, Bleachers');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (17, 'Gym Q', 8000, 'City Q', 'Lockers, Showers');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (18, 'Ice Rink R', 5000, 'City R', 'Skate Rentals, Concessions');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (19, 'Pool S', 2000, 'City S', 'Swim Lanes, Showers');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (20, 'Court T', 1000, 'City T', 'Basketball Hoops');",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (1, 'Stadium A', 50000, 'City A', 'Wifi, Parking, Concessions') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (2, 'Arena B', 20000, 'City B', 'Parking, Concessions') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (3, 'Field C', 10000, 'City C', 'Wifi, Concessions') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (4, 'Hall D', 5000, 'City D', 'Parking') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (5, 'Gym E', 500, 'City E', 'Wifi, Parking, Concessions') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (6, 'Stadium F', 30000, 'City F', 'Wifi, Parking') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (7, 'Arena G', 15000, 'City G', 'Parking') ON CONFLICT (venue_id) DO UPDATE SET location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (8, 'Field H', 8000, 'City H', 'Wifi, Concessions') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (9, 'Pavilion I', 1000, 'City I', 'Parking') ON CONFLICT (venue_id) DO UPDATE SET location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (10, 'Stadium J', 40000, 'City J', 'Wifi, Parking, Concessions') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (11, 'Arena K', 18000, 'City K', 'Parking, Concessions') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (12, 'Field L', 9000, 'City L', 'Wifi, Concessions') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (13, 'Hall M', 5500, 'City M', 'Parking') ON CONFLICT (venue_id) DO UPDATE SET location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (14, 'Gym N', 600, 'City N', 'Wifi, Parking, Concessions') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (15, 'Stadium O', 35000, 'City O', 'Wifi, Parking') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (16, 'Arena P', 17000, 'City P', 'Parking') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (17, 'Field Q', 8500, 'City Q', 'Wifi, Concessions') ON CONFLICT (venue_id) DO UPDATE SET location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (18, 'Pavilion R', 1200, 'City R', 'Parking') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (19, 'Stadium S', 45000, 'City S', 'Wifi, Parking, Concessions') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location;",
  "### TABLEDATA\n\nCREATE TABLE sports_venues (\n  venue_id INT PRIMARY KEY,\n  venue_name VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  amenities TEXT\n)\n\n### STATEMENT\n\nINSERT INTO sports_venues (venue_id, venue_name, capacity, location, amenities) VALUES (20, 'Arena T', 22000, 'City T', 'Parking, Concessions') ON CONFLICT (venue_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue A', 200, 'City A', 'Wifi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue B', 150, 'City B', '') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue C', 300, 'City A', 'Wifi, Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue D', 100, 'City C', 'Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue E', 250, 'City B', 'Wifi, Catering, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue F', 180, 'City D', 'Wifi') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue G', 220, 'City C', 'Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue H', 120, 'City D', '') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue I', 280, 'City A', 'Wifi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue J', 150, 'City B', 'Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue K', 350, 'City C', 'Wifi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue L', 130, 'City D', 'Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue M', 270, 'City A', 'Wifi, Catering, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue N', 200, 'City B', 'Wifi') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue O', 190, 'City C', 'Parking, Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue P', 140, 'City D', 'Wifi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue Q', 300, 'City A', '') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue R', 170, 'City B', 'Catering, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue S', 240, 'City C', 'Wifi') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue T', 160, 'City D', 'Wifi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue A', 1000, 'City A', 'WiFi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = 1000, location = 'City A', amenities = 'WiFi, Parking';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('WiFi') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event A', '2023-01-01', 1) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-01-01', venue_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue B', 500, 'City B', 'Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = 500, location = 'City B', amenities = 'Catering';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('Parking') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event B', '2023-02-01', 2) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-02-01', venue_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue C', 800, 'City C', 'WiFi, Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = 800, location = 'City C', amenities = 'WiFi, Catering';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('Catering') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event C', '2023-03-01', 3) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-03-01', venue_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue D', 1200, 'City D', 'WiFi, Parking, Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = 1200, location = 'City D', amenities = 'WiFi, Parking, Catering';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('WiFi') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event D', '2023-04-01', 4) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-04-01', venue_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue E', 600, 'City E', 'Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = 600, location = 'City E', amenities = 'Parking';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('WiFi') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event E', '2023-05-01', 5) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-05-01', venue_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue F', 900, 'City F', 'WiFi, Catering') ON CONFLICT (venue_name) DO UPDATE SET capacity = 900, location = 'City F', amenities = 'WiFi, Catering';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('Catering') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event F', '2023-06-01', 6) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-06-01', venue_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_name, capacity, location, amenities) VALUES ('Venue G', 1100, 'City G', 'WiFi, Parking') ON CONFLICT (venue_name) DO UPDATE SET capacity = 1100, location = 'City G', amenities = 'WiFi, Parking';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (amenity_name) VALUES ('Parking') ON CONFLICT (amenity_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id SERIAL PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  capacity INT NOT NULL,\n  location VARCHAR(100) NOT NULL,\n  amenities TEXT\n);\n\nCREATE TABLE venue_amenities (\n  amenity_id SERIAL PRIMARY KEY,\n  amenity_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  venue_id INT NOT NULL,\n  FOREIGN KEY (venue_id) REFERENCES venues(venue_id)\n);\n\n### STATEMENT\n\nINSERT INTO events (event_name, event_date, venue_id) VALUES ('Event G', '2023-07-01', 7) ON CONFLICT (event_name) DO UPDATE SET event_date = '2023-07-01', venue_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('2d3a65a4-471b-4c3b-8f58-3b34748d1037', 'Concert Hall', 'Downtown', 100) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('4134aafc-8202-4b38-8e42-dd4c7afbd587', 'Parking', 'Ample parking space available') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('2d3a65a4-471b-4c3b-8f58-3b34748d1037', '4134aafc-8202-4b38-8e42-dd4c7afbd587') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('36a4f69b-3599-4994-9e2d-c591fc565231', 'Conference Center', 'Business District', 150) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('58e5b83b-aeaa-4448-87b5-3a401d816bb6', 'Catering', 'Catering services available for events') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('36a4f69b-3599-4994-9e2d-c591fc565231', '58e5b83b-aeaa-4448-87b5-3a401d816bb6') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('8cb45f46-bd72-45d9-9c4f-0b9b73433cf0', 'Stadium', 'Sports Complex', 50000) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('ef22e846-785e-459f-872b-3f77be2e2bd0', 'WiFi', 'Free WiFi access throughout the venue') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('8cb45f46-bd72-45d9-9c4f-0b9b73433cf0', 'ef22e846-785e-459f-872b-3f77be2e2bd0') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('46aebeb7-8280-4a06-8c66-ae8ed9721c55', 'Theater', 'Arts District', 500) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('4e691c6d-c8ba-485f-9a68-6dd4185fab3a', 'Restrooms', 'Clean and well-maintained restrooms for guests') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('46aebeb7-8280-4a06-8c66-ae8ed9721c55', '4e691c6d-c8ba-485f-9a68-6dd4185fab3a') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('0acfd8c9-8842-4877-8027-d5037d462d83', 'Gym', 'Fitness Center', 200) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('d479ebc2-04cd-49d3-a3aa-b1d599c04221', 'Pool', 'Indoor and outdoor pool facilities for members') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('0acfd8c9-8842-4877-8027-d5037d462d83', 'd479ebc2-04cd-49d3-a3aa-b1d599c04221') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('ef6f21b6-6bd6-411a-8a95-422b16eeb6c1', 'Community Center', 'Local Neighborhood', 300) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('6531b166-84fc-4b10-87d7-2b14b3d844ea', 'Multipurpose Room', 'Spacious room for various events and activities') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('ef6f21b6-6bd6-411a-8a95-422b16eeb6c1', '6531b166-84fc-4b10-87d7-2b14b3d844ea') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('b6d10716-c39d-407d-a1ab-af37b0115b92', 'Auditorium', 'Educational Institution', 400) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('f7ca6c0e-afb8-4b98-9960-b450e122d2a6', 'Projector', 'High-quality projector for presentations and screenings') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('b6d10716-c39d-407d-a1ab-af37b0115b92', 'f7ca6c0e-afb8-4b98-9960-b450e122d2a6') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('fcae9307-bee9-4560-b1d5-35d654d6daab', 'Banquet Hall', 'Wedding Venue', 250) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('1c679e93-43ed-4c52-bd6f-5c27d88bfbc7', 'Dance Floor', 'Spacious dance floor area for events') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('fcae9307-bee9-4560-b1d5-35d654d6daab', '1c679e93-43ed-4c52-bd6f-5c27d88bfbc7') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('c52ee5e4-ae40-4e8d-82e3-2b33b667d1d7', 'Venue A', 'City A', 500) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('29553c81-b388-459f-9f4c-4f3337918b31', 'Venue B', 'City B', 700) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('a7bbd3e7-174f-4cf0-83a1-4a129d8614c1', 'Wifi', 'High-speed internet connection') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('d9c60b40-34f6-4983-85d6-d48bc5aef4f4', 'Parking', 'Ample parking space available') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('c52ee5e4-ae40-4e8d-82e3-2b33b667d1d7', 'a7bbd3e7-174f-4cf0-83a1-4a129d8614c1') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('29553c81-b388-459f-9f4c-4f3337918b31', 'd9c60b40-34f6-4983-85d6-d48bc5aef4f4') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('68afa56b-9d7f-4186-8e35-d3878b7d767f', 'Venue C', 'City C', 1000) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('f9c09b3a-4583-43b2-8710-6a34a8f116a7', 'Venue D', 'City D', 600) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('f4007995-08c6-4645-977c-7c4afd8849d3', 'Catering', 'Professional catering services') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('e67bb5ec-4f0a-4b44-8c39-3a2e77896cde', 'Security', '24/7 security surveillance') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('f9c09b3a-4583-43b2-8710-6a34a8f116a7', 'f4007995-08c6-4645-977c-7c4afd8849d3') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('68afa56b-9d7f-4186-8e35-d3878b7d767f', 'e67bb5ec-4f0a-4b44-8c39-3a2e77896cde') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('c1d58b7e-309e-487d-9ef0-4c4cc9bdb251', 'Venue E', 'City E', 800) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('205b2eef-913d-4cfe-b227-98dee7bdf552', 'Venue F', 'City F', 300) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('8d56b3ee-7005-4c4f-8ce2-64a04d2cf94e', 'Sound System', 'State-of-the-art sound system') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('9f3c68de-4be5-4feb-b768-52ef31334c04', 'Lighting', 'Customizable dynamic lighting') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('205b2eef-913d-4cfe-b227-98dee7bdf552', '8d56b3ee-7005-4c4f-8ce2-64a04d2cf94e') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('c1d58b7e-309e-487d-9ef0-4c4cc9bdb251', '9f3c68de-4be5-4feb-b768-52ef31334c04') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('580dacd1-563f-4f33-a427-721b138fa8d8', 'Venue G', 'City G', 400) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, location, capacity) VALUES ('f0c3e9fe-f291-43ea-92dc-7ec41f431c4a', 'Venue H', 'City H', 900) ON CONFLICT (venue_id) DO UPDATE SET venue_name = excluded.venue_name, location = excluded.location, capacity = excluded.capacity;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('b2b99047-2e4f-4864-9e6e-d0a5887223dc', 'Stage', 'Versatile stage setup') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('8321d2c4-9562-41ac-bc2b-497ad6ba6c20', 'Seating', 'Flexible seating arrangements') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('f0c3e9fe-f291-43ea-92dc-7ec41f431c4a', 'b2b99047-2e4f-4864-9e6e-d0a5887223dc') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n  venue_id UUID PRIMARY KEY,\n  venue_name VARCHAR(100) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  capacity INT NOT NULL\n);\n\nCREATE TABLE amenities (\n  amenity_id UUID PRIMARY KEY,\n  amenity_name VARCHAR(100) NOT NULL,\n  description TEXT\n);\n\nCREATE TABLE venue_amenities (\n  venue_id UUID,\n  amenity_id UUID,\n  FOREIGN KEY (venue_id) REFERENCES venues (venue_id),\n  FOREIGN KEY (amenity_id) REFERENCES amenities (amenity_id)\n);\n\n### STATEMENT\n\nINSERT INTO venue_amenities (venue_id, amenity_id) VALUES ('580dacd1-563f-4f33-a427-721b138fa8d8', '8321d2c4-9562-41ac-bc2b-497ad6ba6c20') ON CONFLICT (venue_id, amenity_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('11111111-1111-1111-1111-111111111111', 'Venue 1', 100, 'Location 1', 'Wifi, Parking, Food and Beverage') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('22222222-2222-2222-2222-222222222222', 'Event 1', '2022-12-31', '11111111-1111-1111-1111-111111111111') ON CONFLICT (event_id) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date, venue_id = EXCLUDED.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('33333333-3333-3333-3333-333333333333', '22222222-2222-2222-2222-222222222222', 'John Doe', '2022-12-31 10:00:00', 2) ON CONFLICT (booking_id) DO UPDATE SET event_id = EXCLUDED.event_id, attendee_name = EXCLUDED.attendee_name, booking_date = EXCLUDED.booking_date, num_tickets = EXCLUDED.num_tickets;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('44444444-4444-4444-4444-444444444444', 'Wifi', 'Wireless Internet Access') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = EXCLUDED.amenity_name, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('55555555-5555-5555-5555-555555555555', 'Venue 2', 200, 'Location 2', 'Wifi, Parking') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('66666666-6666-6666-6666-666666666666', 'Event 2', '2023-01-15', '55555555-5555-5555-5555-555555555555') ON CONFLICT (event_id) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date, venue_id = EXCLUDED.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('77777777-7777-7777-7777-777777777777', '66666666-6666-6666-6666-666666666666', 'Jane Smith', '2023-01-15 12:00:00', 3) ON CONFLICT (booking_id) DO UPDATE SET event_id = EXCLUDED.event_id, attendee_name = EXCLUDED.attendee_name, booking_date = EXCLUDED.booking_date, num_tickets = EXCLUDED.num_tickets;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('88888888-8888-8888-8888-888888888888', 'Parking', 'Parking Space Available') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = EXCLUDED.amenity_name, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('99999999-9999-9999-9999-999999999999', 'Venue 3', 150, 'Location 3', 'Food and Beverage') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('10101010-1010-1010-1010-101010101010', 'Event 3', '2023-02-28', '99999999-9999-9999-9999-999999999999') ON CONFLICT (event_id) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date, venue_id = EXCLUDED.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('11111111-1122-2233-4455-666677778899', '10101010-1010-1010-1010-101010101010', 'Alice Johnson', '2023-02-28 15:30:00', 1) ON CONFLICT (booking_id) DO UPDATE SET event_id = EXCLUDED.event_id, attendee_name = EXCLUDED.attendee_name, booking_date = EXCLUDED.booking_date, num_tickets = EXCLUDED.num_tickets;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('12121212-1212-1212-1212-121212121212', 'Food and Beverage', 'Catering and Refreshments Available') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = EXCLUDED.amenity_name, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('13131313-1313-1313-1313-131313131313', 'Venue 4', 120, 'Location 4', 'Wifi, Parking') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('14141414-1414-1414-1414-141414141414', 'Event 4', '2023-03-15', '13131313-1313-1313-1313-131313131313') ON CONFLICT (event_id) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date, venue_id = EXCLUDED.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('15151515-1515-1515-1515-151515151515', '14141414-1414-1414-1414-141414141414', 'Michael Brown', '2023-03-15 11:00:00', 4) ON CONFLICT (booking_id) DO UPDATE SET event_id = EXCLUDED.event_id, attendee_name = EXCLUDED.attendee_name, booking_date = EXCLUDED.booking_date, num_tickets = EXCLUDED.num_tickets;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('16161616-1616-1616-1616-161616161616', 'Wifi', 'Wireless Internet Access') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = EXCLUDED.amenity_name, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('17171717-1717-1717-1717-171717171717', 'Venue 5', 180, 'Location 5', 'Parking, Food and Beverage') ON CONFLICT (venue_id) DO UPDATE SET capacity = EXCLUDED.capacity, location = EXCLUDED.location, amenities = EXCLUDED.amenities;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('18181818-1818-1818-1818-181818181818', 'Event 5', '2023-04-20', '17171717-1717-1717-1717-171717171717') ON CONFLICT (event_id) DO UPDATE SET event_name = EXCLUDED.event_name, event_date = EXCLUDED.event_date, venue_id = EXCLUDED.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('19191919-1919-1919-1919-191919191919', '18181818-1818-1818-1818-181818181818', 'Sarah Johnson', '2023-04-20 14:00:00', 2) ON CONFLICT (booking_id) DO UPDATE SET event_id = EXCLUDED.event_id, attendee_name = EXCLUDED.attendee_name, booking_date = EXCLUDED.booking_date, num_tickets = EXCLUDED.num_tickets;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('20202020-2020-2020-2020-202020202020', 'Parking', 'Parking Space Available') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = EXCLUDED.amenity_name, description = EXCLUDED.description;",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('123e4567-e89b-12d3-a456-426614174001', 'Venue A', 100, 'Location A', 'Wifi, Parking');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('223e4567-e89b-12d3-a456-426614174002', 'Event X', '2023-10-15', '123e4567-e89b-12d3-a456-426614174001');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('323e4567-e89b-12d3-a456-426614174003', '223e4567-e89b-12d3-a456-426614174002', 'Alice', '2023-09-25 10:00:00', 2);",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('423e4567-e89b-12d3-a456-426614174004', 'Wifi', 'High-speed internet connectivity');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('523e4567-e89b-12d3-a456-426614174005', 'Venue B', 150, 'Location B', 'Catering, Security');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('623e4567-e89b-12d3-a456-426614174006', 'Event Y', '2023-11-20', '523e4567-e89b-12d3-a456-426614174005');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('723e4567-e89b-12d3-a456-426614174007', '623e4567-e89b-12d3-a456-426614174006', 'Bob', '2023-10-01 12:00:00', 3);",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('823e4567-e89b-12d3-a456-426614174008', 'Security', '24/7 security services');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE venues SET capacity = 120, amenities = 'Wifi, Parking, Catering' WHERE venue_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE events SET event_date = '2023-10-20' WHERE event_id = '223e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE bookings SET num_tickets = 4 WHERE booking_id = '323e4567-e89b-12d3-a456-426614174003';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE amenities SET description = 'High-speed internet and entertainment facilities' WHERE amenity_id = '423e4567-e89b-12d3-a456-426614174004';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO venues (venue_id, venue_name, capacity, location, amenities) VALUES ('923e4567-e89b-12d3-a456-426614174009', 'Venue C', 200, 'Location C', 'Parking, Security');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO events (event_id, event_name, event_date, venue_id) VALUES ('a23e4567-e89b-12d3-a456-426614174010', 'Event Z', '2023-12-25', '923e4567-e89b-12d3-a456-426614174009');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO bookings (booking_id, event_id, attendee_name, booking_date, num_tickets) VALUES ('b23e4567-e89b-12d3-a456-426614174011', 'a23e4567-e89b-12d3-a456-426614174010', 'Charlie', '2023-10-10 15:30:00', 5);",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO amenities (amenity_id, amenity_name, description) VALUES ('c23e4567-e89b-12d3-a456-426614174012', 'Catering', 'Gourmet food and beverage services');",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE venues SET capacity = 180, amenities = 'Wifi, Security' WHERE venue_id = '523e4567-e89b-12d3-a456-426614174005';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE events SET event_date = '2023-12-30' WHERE event_id = '623e4567-e89b-12d3-a456-426614174006';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE bookings SET num_tickets = 6 WHERE booking_id = '723e4567-e89b-12d3-a456-426614174007';",
  "### TABLEDATA\n\nCREATE TABLE venues (\n    venue_id UUID PRIMARY KEY,\n    venue_name VARCHAR(255),\n    capacity INT,\n    location VARCHAR(255),\n    amenities TEXT\n);\n\nCREATE TABLE events (\n    event_id UUID PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    venue_id UUID REFERENCES venues(venue_id)\n);\n\nCREATE TABLE bookings (\n    booking_id UUID PRIMARY KEY,\n    event_id UUID REFERENCES events(event_id),\n    attendee_name VARCHAR(255),\n    booking_date TIMESTAMP,\n    num_tickets INT\n);\n\nCREATE TABLE amenities (\n    amenity_id UUID PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\n### STATEMENT\n\nUPDATE amenities SET description = '24/7 security and access control' WHERE amenity_id = '823e4567-e89b-12d3-a456-426614174008';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Venues (venue_id, name, location, capacity, amenities) VALUES (1, 'Stadium A', 'City A', 5000, 'WiFi, Parking') ON CONFLICT (venue_id) DO UPDATE SET name = excluded.name, location = excluded.location, capacity = excluded.capacity, amenities = excluded.amenities;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, date, venue_id) VALUES (1, 'Concert A', '2022-05-15', 1) ON CONFLICT (event_id) DO UPDATE SET event_name = excluded.event_name, date = excluded.date, venue_id = excluded.venue_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Amenities (amenity_id, amenity_name, description) VALUES (1, 'WiFi', 'Internet connectivity') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = excluded.amenity_name, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Teams (team_id, team_name, home_venue_id) VALUES (1, 'Team A', 1) ON CONFLICT (team_id) DO UPDATE SET team_name = excluded.team_name, home_venue_id = excluded.home_venue_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Spectators (spectator_id, full_name, email, ticket_id, event_id) VALUES (1, 'John Doe', 'john@example.com', 12345, 1) ON CONFLICT (spectator_id) DO UPDATE SET full_name = excluded.full_name, email = excluded.email, ticket_id = excluded.ticket_id, event_id = excluded.event_id;",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Venues (venue_id, name, location, capacity, amenities) VALUES (1, 'Venue 1', 'Location 1', 1000, 'Wifi, Parking');",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Venues (venue_id, name, location, capacity, amenities) VALUES (2, 'Venue 2', 'Location 2', 1500, 'Wifi, Food Court');",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, date, venue_id) VALUES (1, 'Event 1', '2022-08-15', 1) ON CONFLICT (event_id) DO UPDATE SET event_name = 'Updated Event 1';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Events (event_id, event_name, date, venue_id) VALUES (2, 'Event 2', '2022-09-20', 2) ON CONFLICT (event_id) DO UPDATE SET event_name = 'Updated Event 2';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Amenities (amenity_id, amenity_name, description) VALUES (1, 'Amenity 1', 'Description 1') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = 'Updated Amenity 1';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Amenities (amenity_id, amenity_name, description) VALUES (2, 'Amenity 2', 'Description 2') ON CONFLICT (amenity_id) DO UPDATE SET amenity_name = 'Updated Amenity 2';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Teams (team_id, team_name, home_venue_id) VALUES (1, 'Team 1', 1) ON CONFLICT (team_id) DO UPDATE SET team_name = 'Updated Team 1';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Teams (team_id, team_name, home_venue_id) VALUES (2, 'Team 2', 2) ON CONFLICT (team_id) DO UPDATE SET team_name = 'Updated Team 2';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Spectators (spectator_id, full_name, email, ticket_id, event_id) VALUES (1, 'Spectator 1', 'spectator1@gmail.com', 101, 1) ON CONFLICT (spectator_id) DO UPDATE SET full_name = 'Updated Spectator 1';",
  "### TABLEDATA\n\nCREATE TABLE Venues (\n    venue_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    location VARCHAR(255),\n    capacity INT,\n    amenities TEXT\n);\n\nCREATE TABLE Events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    date DATE,\n    venue_id INT,\n    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Amenities (\n    amenity_id INT PRIMARY KEY,\n    amenity_name VARCHAR(255),\n    description TEXT\n);\n\nCREATE TABLE Teams (\n    team_id INT PRIMARY KEY,\n    team_name VARCHAR(255),\n    home_venue_id INT,\n    FOREIGN KEY (home_venue_id) REFERENCES Venues(venue_id)\n);\n\nCREATE TABLE Spectators (\n    spectator_id INT PRIMARY KEY,\n    full_name VARCHAR(255),\n    email VARCHAR(255),\n    ticket_id INT,\n    event_id INT,\n    FOREIGN KEY (event_id) REFERENCES Events(event_id)\n);\n\n### STATEMENT\n\nINSERT INTO Spectators (spectator_id, full_name, email, ticket_id, event_id) VALUES (2, 'Spectator 2', 'spectator2@gmail.com', 102, 2) ON CONFLICT (spectator_id) DO UPDATE SET full_name = 'Updated Spectator 2';"
]