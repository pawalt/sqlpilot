[
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(100),\n    winner VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(100),\n    winner VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_name = 'Football Match';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(100),\n    winner VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE winner = 'Team A';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(100),\n    winner VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id = 10 AND event_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(100),\n    winner VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE winner IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    location VARCHAR(100),\n    winner VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE location LIKE '%Stadium%' AND event_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(100)\n);\n\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT,\n    winner_team VARCHAR(50),\n    loser_team VARCHAR(50),\n    winning_score INT,\n    losing_score INT,\n    event_date DATE,\n    FOREIGN KEY (event_id) REFERENCES sports_events(event_id)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(100)\n);\n\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT,\n    winner_team VARCHAR(50),\n    loser_team VARCHAR(50),\n    winning_score INT,\n    losing_score INT,\n    event_date DATE,\n    FOREIGN KEY (event_id) REFERENCES sports_events(event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE result_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(100)\n);\n\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT,\n    winner_team VARCHAR(50),\n    loser_team VARCHAR(50),\n    winning_score INT,\n    losing_score INT,\n    event_date DATE,\n    FOREIGN KEY (event_id) REFERENCES sports_events(event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE event_id = 1 AND winning_score < 100;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(100)\n);\n\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT,\n    winner_team VARCHAR(50),\n    loser_team VARCHAR(50),\n    winning_score INT,\n    losing_score INT,\n    event_date DATE,\n    FOREIGN KEY (event_id) REFERENCES sports_events(event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE event_id = 1 AND winner_team = 'Team A';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(100)\n);\n\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT,\n    winner_team VARCHAR(50),\n    loser_team VARCHAR(50),\n    winning_score INT,\n    losing_score INT,\n    event_date DATE,\n    FOREIGN KEY (event_id) REFERENCES sports_events(event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE event_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255),\n    event_date DATE,\n    event_location VARCHAR(100)\n);\n\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT,\n    winner_team VARCHAR(50),\n    loser_team VARCHAR(50),\n    winning_score INT,\n    losing_score INT,\n    event_date DATE,\n    FOREIGN KEY (event_id) REFERENCES sports_events(event_id)\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id IN (SELECT event_id FROM event_results WHERE winner_team = 'Team B');",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    event_type VARCHAR(50)\n);\n\nCREATE TABLE event_participants (\n    participant_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_name VARCHAR(255) NOT NULL,\n    participant_country VARCHAR(100),\n    participant_age INT\n);\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_id INT NOT NULL,\n    result_description VARCHAR(255),\n    result_score INT\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    event_type VARCHAR(50)\n);\n\nCREATE TABLE event_participants (\n    participant_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_name VARCHAR(255) NOT NULL,\n    participant_country VARCHAR(100),\n    participant_age INT\n);\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_id INT NOT NULL,\n    result_description VARCHAR(255),\n    result_score INT\n);\n\n### STATEMENT\n\nDELETE FROM event_participants WHERE participant_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    event_type VARCHAR(50)\n);\n\nCREATE TABLE event_participants (\n    participant_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_name VARCHAR(255) NOT NULL,\n    participant_country VARCHAR(100),\n    participant_age INT\n);\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_id INT NOT NULL,\n    result_description VARCHAR(255),\n    result_score INT\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE result_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    event_type VARCHAR(50)\n);\n\nCREATE TABLE event_participants (\n    participant_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_name VARCHAR(255) NOT NULL,\n    participant_country VARCHAR(100),\n    participant_age INT\n);\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_id INT NOT NULL,\n    result_description VARCHAR(255),\n    result_score INT\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    event_type VARCHAR(50)\n);\n\nCREATE TABLE event_participants (\n    participant_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_name VARCHAR(255) NOT NULL,\n    participant_country VARCHAR(100),\n    participant_age INT\n);\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_id INT NOT NULL,\n    result_description VARCHAR(255),\n    result_score INT\n);\n\n### STATEMENT\n\nDELETE FROM event_participants WHERE participant_id = 2005 AND event_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n    event_id INT PRIMARY KEY,\n    event_name VARCHAR(255) NOT NULL,\n    event_date DATE NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    event_type VARCHAR(50)\n);\n\nCREATE TABLE event_participants (\n    participant_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_name VARCHAR(255) NOT NULL,\n    participant_country VARCHAR(100),\n    participant_age INT\n);\n\nCREATE TABLE event_results (\n    result_id INT PRIMARY KEY,\n    event_id INT NOT NULL,\n    participant_id INT NOT NULL,\n    result_description VARCHAR(255),\n    result_score INT\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE result_id = 3002 AND event_id = 1001 AND participant_id = 2005;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE teams (\n  team_id INT PRIMARY KEY,\n  team_name VARCHAR(255) NOT NULL,\n  team_sport VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(255) NOT NULL,\n  player_team_id INT,\n  player_position VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  winning_team_id INT,\n  losing_team_id INT\n);\n\n### STATEMENT\n\nDELETE FROM sports_events WHERE event_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE teams (\n  team_id INT PRIMARY KEY,\n  team_name VARCHAR(255) NOT NULL,\n  team_sport VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(255) NOT NULL,\n  player_team_id INT,\n  player_position VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  winning_team_id INT,\n  losing_team_id INT\n);\n\n### STATEMENT\n\nDELETE FROM teams WHERE team_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE teams (\n  team_id INT PRIMARY KEY,\n  team_name VARCHAR(255) NOT NULL,\n  team_sport VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(255) NOT NULL,\n  player_team_id INT,\n  player_position VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  winning_team_id INT,\n  losing_team_id INT\n);\n\n### STATEMENT\n\nDELETE FROM players WHERE player_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE teams (\n  team_id INT PRIMARY KEY,\n  team_name VARCHAR(255) NOT NULL,\n  team_sport VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(255) NOT NULL,\n  player_team_id INT,\n  player_position VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  winning_team_id INT,\n  losing_team_id INT\n);\n\n### STATEMENT\n\nDELETE FROM teams WHERE team_sport = 'Football';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE teams (\n  team_id INT PRIMARY KEY,\n  team_name VARCHAR(255) NOT NULL,\n  team_sport VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(255) NOT NULL,\n  player_team_id INT,\n  player_position VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  winning_team_id INT,\n  losing_team_id INT\n);\n\n### STATEMENT\n\nDELETE FROM players WHERE player_position = 'Goalkeeper';",
  "### TABLEDATA\n\nCREATE TABLE sports_events (\n  event_id INT PRIMARY KEY,\n  event_name VARCHAR(255) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE teams (\n  team_id INT PRIMARY KEY,\n  team_name VARCHAR(255) NOT NULL,\n  team_sport VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE players (\n  player_id INT PRIMARY KEY,\n  player_name VARCHAR(255) NOT NULL,\n  player_team_id INT,\n  player_position VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id INT PRIMARY KEY,\n  event_id INT NOT NULL,\n  winning_team_id INT,\n  losing_team_id INT\n);\n\n### STATEMENT\n\nDELETE FROM results WHERE winning_team_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE past_sporting_events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE event_participants (\n  participant_id SERIAL PRIMARY KEY,\n  participant_name VARCHAR(150) NOT NUll,\n  participant_country VARCHAR(100) NOT NULL,\n  event_id INT NOT NULL,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\nCREATE TABLE event_results (\n  result_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  winner_id INT NOT NULL,\n  loser_id INT NOT NULL,\n  result_description TEXT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (winner_id) REFERENCES event_participants (participant_id),\n  FOREIGN KEY (loser_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_statistics (\n  stat_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  points_scored INT,\n  rebounds INT,\n  assists INT,\n  steals INT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (participant_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_comments (\n  comment_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  comment_text TEXT,\n  comment_date TIMESTAMP,\n  commenter_name VARCHAR(150),\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_comments WHERE comment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE past_sporting_events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE event_participants (\n  participant_id SERIAL PRIMARY KEY,\n  participant_name VARCHAR(150) NOT NUll,\n  participant_country VARCHAR(100) NOT NULL,\n  event_id INT NOT NULL,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\nCREATE TABLE event_results (\n  result_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  winner_id INT NOT NULL,\n  loser_id INT NOT NULL,\n  result_description TEXT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (winner_id) REFERENCES event_participants (participant_id),\n  FOREIGN KEY (loser_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_statistics (\n  stat_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  points_scored INT,\n  rebounds INT,\n  assists INT,\n  steals INT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (participant_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_comments (\n  comment_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  comment_text TEXT,\n  comment_date TIMESTAMP,\n  commenter_name VARCHAR(150),\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE result_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE past_sporting_events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE event_participants (\n  participant_id SERIAL PRIMARY KEY,\n  participant_name VARCHAR(150) NOT NUll,\n  participant_country VARCHAR(100) NOT NULL,\n  event_id INT NOT NULL,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\nCREATE TABLE event_results (\n  result_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  winner_id INT NOT NULL,\n  loser_id INT NOT NULL,\n  result_description TEXT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (winner_id) REFERENCES event_participants (participant_id),\n  FOREIGN KEY (loser_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_statistics (\n  stat_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  points_scored INT,\n  rebounds INT,\n  assists INT,\n  steals INT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (participant_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_comments (\n  comment_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  comment_text TEXT,\n  comment_date TIMESTAMP,\n  commenter_name VARCHAR(150),\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\n### STATEMENT\n\nDELETE FROM past_sporting_events WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE past_sporting_events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE event_participants (\n  participant_id SERIAL PRIMARY KEY,\n  participant_name VARCHAR(150) NOT NUll,\n  participant_country VARCHAR(100) NOT NULL,\n  event_id INT NOT NULL,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\nCREATE TABLE event_results (\n  result_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  winner_id INT NOT NULL,\n  loser_id INT NOT NULL,\n  result_description TEXT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (winner_id) REFERENCES event_participants (participant_id),\n  FOREIGN KEY (loser_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_statistics (\n  stat_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  points_scored INT,\n  rebounds INT,\n  assists INT,\n  steals INT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (participant_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_comments (\n  comment_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  comment_text TEXT,\n  comment_date TIMESTAMP,\n  commenter_name VARCHAR(150),\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_statistics WHERE event_id = 5 AND participant_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE past_sporting_events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE event_participants (\n  participant_id SERIAL PRIMARY KEY,\n  participant_name VARCHAR(150) NOT NUll,\n  participant_country VARCHAR(100) NOT NULL,\n  event_id INT NOT NULL,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\nCREATE TABLE event_results (\n  result_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  winner_id INT NOT NULL,\n  loser_id INT NOT NULL,\n  result_description TEXT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (winner_id) REFERENCES event_participants (participant_id),\n  FOREIGN KEY (loser_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_statistics (\n  stat_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  points_scored INT,\n  rebounds INT,\n  assists INT,\n  steals INT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (participant_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_comments (\n  comment_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  comment_text TEXT,\n  comment_date TIMESTAMP,\n  commenter_name VARCHAR(150),\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_results WHERE event_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE past_sporting_events (\n  event_id SERIAL PRIMARY KEY,\n  event_name VARCHAR(100) NOT NULL,\n  event_date DATE NOT NULL,\n  event_location VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE event_participants (\n  participant_id SERIAL PRIMARY KEY,\n  participant_name VARCHAR(150) NOT NUll,\n  participant_country VARCHAR(100) NOT NULL,\n  event_id INT NOT NULL,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\nCREATE TABLE event_results (\n  result_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  winner_id INT NOT NULL,\n  loser_id INT NOT NULL,\n  result_description TEXT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (winner_id) REFERENCES event_participants (participant_id),\n  FOREIGN KEY (loser_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_statistics (\n  stat_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  points_scored INT,\n  rebounds INT,\n  assists INT,\n  steals INT,\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id),\n  FOREIGN KEY (participant_id) REFERENCES event_participants (participant_id)\n);\n\nCREATE TABLE event_comments (\n  comment_id SERIAL PRIMARY KEY,\n  event_id INT NOT NULL,\n  comment_text TEXT,\n  comment_date TIMESTAMP,\n  commenter_name VARCHAR(150),\n  FOREIGN KEY (event_id) REFERENCES past_sporting_events (event_id)\n);\n\n### STATEMENT\n\nDELETE FROM event_comments WHERE event_id = 7;"
]