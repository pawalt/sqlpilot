[
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE customer_spending_patterns SET total_spending = 1500.00 WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE customer_spending_patterns SET last_purchase_date = '2022-03-17 15:30:00' WHERE customer_id = '456e89b7-12d3-1234-b456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE customer_spending_patterns SET email = 'new_email@example.com' WHERE customer_id = '789e12d3-a456-4567-c89b-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE customer_spending_patterns SET total_spending = total_spending + 100 WHERE customer_id = 'abc1234';",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE customer_spending_patterns SET email = CONCAT(first_name, '.', last_name, '@example.com') WHERE email IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE customer_spending_patterns SET last_purchase_date = CURRENT_TIMESTAMP WHERE last_purchase_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPDATE customers SET account_balance = account_balance + 100 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPDATE customers SET name = 'John Doe' WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPDATE transactions SET category = 'Groceries' WHERE transaction_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPDATE customers SET account_balance = account_balance - 1000 WHERE customer_id = 12345",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPDATE transactions SET transaction_amount = transaction_amount * 1.1, category = 'Updated' WHERE customer_id = 67890",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPDATE customers SET account_balance = account_balance + (SELECT SUM(transaction_amount) FROM transactions WHERE customer_id = customers.customer_id)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE customers SET customer_age = 30 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 100.50 WHERE transaction_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE recommendations SET recommendation_text = 'New recommendation' WHERE recommendation_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE customers SET customer_email = 'newemail@example.com' WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.1 WHERE transaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPDATE recommendations SET recommendation_text = 'Updated recommendation text' WHERE recommendation_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPDATE customers SET age = 25 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPDATE transactions SET amount = 1000.00 WHERE transaction_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPDATE categories SET category_name = 'New Category' WHERE category_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPDATE customers SET age = age + 1 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPDATE customers SET email = CONCAT(email, '@example.com') WHERE age < 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.1 WHERE date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE customers SET customer_age = 30 WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE transactions SET amount = 150.75 WHERE transaction_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE recommendations SET recommendation_text = 'Updated recommendation text' WHERE recommendation_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE customers SET customer_age = 30 WHERE customer_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.1 WHERE category = 'Groceries';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nUPDATE recommendations SET recommendation_text = 'New recommendation' WHERE customer_id = 123;"
]